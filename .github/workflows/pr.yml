name: Pull Request Check
on: [pull_request]

jobs:
  build:
    name: 'Build docker image'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-test-image
  lint-ruff:
    name: 'Lint check (ruff)'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/ruff-action@v3
  unit-test:
    name: 'Unit tests'
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        db: [postgres, mysql]
        test_target: [
          'tests/app/',
          'tests/batch/',
        ]
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-test-image
      - name: build image on compose
        run: docker compose build
      - name: Change owner of output directory
        run: |
          sudo chown runner:docker /home/runner/work/ibet-Wallet-API/ibet-Wallet-API/cov
          sudo chmod 777 /home/runner/work/ibet-Wallet-API/ibet-Wallet-API/cov
      - name: run unit test using ${{ matrix.db }}
        run: docker compose run -e TEST_TARGET="${{ matrix.test_target }}" ibet-wallet-api-${{ matrix.db }}
      - run: mv cov/.coverage cov/.coverage-${{ strategy.job-index }}
      - uses: actions/upload-artifact@v4
        if: matrix.db == 'postgres'
        with:
          name: .coverage-${{ strategy.job-index }}
          path: cov/.coverage-${{ strategy.job-index }}
          include-hidden-files: true
      - run: mv cov/pytest.xml cov/pytest-${{ strategy.job-index }}.xml
      - uses: actions/upload-artifact@v4
        if: matrix.db == 'postgres'
        with:
          name: pytest-${{ strategy.job-index }}
          path: cov/pytest-${{ strategy.job-index }}.xml
  collect_coverage:
    runs-on: ubuntu-latest
    needs: unit-test
    permissions:
      actions: read
      contents: read
      packages: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-test-image
      - name: build image on compose
        run: docker compose build
      - name: Change owner of output directory
        run: |
          sudo chown runner:docker /home/runner/work/ibet-Wallet-API/ibet-Wallet-API/cov
          sudo chmod 777 /home/runner/work/ibet-Wallet-API/ibet-Wallet-API/cov
      - uses: actions/download-artifact@v4
        with:
          pattern: '.coverage-*'
          path: cov/
          merge-multiple: true
      - name: combine coverage files
        run: docker compose run -w /app/ibet-Wallet-API/cov ibet-wallet-api-postgres bash --login -c 'uv run coverage combine .coverage-*'
      - name: generate coverage xml file
        run: docker compose run -w /app/ibet-Wallet-API ibet-wallet-api-postgres bash --login -c 'uv run coverage xml --data-file=cov/.coverage -o cov/coverage.xml'
      - uses: actions/download-artifact@v4
        with:
          pattern: 'pytest-*'
          path: cov/
          merge-multiple: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install junit-report-merger
        run: npm install -g junit-report-merger
      - name: Merge reports
        run: jrm cov/pytest.xml "cov/pytest-*.xml"
      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@13d3c18e21895566c746187c9ea74736372e5e91  # v1.1.54
        with:
          report-only-changed-files: true
          pytest-xml-coverage-path: cov/coverage.xml
          junitxml-path: cov/pytest.xml
      - name: Count test cases in repository
        id: countTest
        run: |
          RESULT=$(docker compose run -w /app/ibet-Wallet-API ibet-wallet-api-postgres bash --login -c 'uv run pytest --collect-only | grep -e "<Function" -e "<Coroutine"' | wc -l)
          echo "test_count=${RESULT}" >> $GITHUB_OUTPUT
      - run: echo ${{ steps.coverageComment.outputs.tests }}
      - run: echo ${{ steps.countTest.outputs.test_count }}
      - name: Check the count of test cases in CI
        if: steps.coverageComment.outputs.tests != steps.countTest.outputs.test_count
        run: exit 1

  migration-test:
    name: 'Migration tests'
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        db: [postgres, mysql]
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-test-image
      - name: run unit test using ${{ matrix.db }}
        run: docker compose run ibet-wallet-api-${{ matrix.db }} bash --login -c "cd /app/ibet-Wallet-API && uv run pytest -vv --test-alembic -m 'alembic'"
