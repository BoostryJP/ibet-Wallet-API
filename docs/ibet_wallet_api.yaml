openapi: 3.0.2
info:
  title: ibet Wallet API
  description: RPC services that provides utility tools for building a wallet system on ibet network
  version: 23.3.0
paths:
  /:
    get:
      tags:
        - root
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
  /Admin/Tokens:
    get:
      tags:
        - admin
      summary: List All Listed Tokens
      description: |-
        Endpoint: /Admin/Tokens
          - GET: 取扱トークン一覧取得
      operationId: TokensGET
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllAdminTokensResponse_'
    post:
      tags:
        - admin
      summary: List a Token
      description: |-
        Endpoint: /Admin/Tokens
          - POST: 取扱トークン登録
      operationId: TokensPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAdminTokenRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenspost
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConflictErrorResponse'
  /Admin/Tokens/Type:
    get:
      tags:
        - admin
      summary: Available status by token type
      description: |-
        Endpoint: /Admin/Tokens/Type
          - GET: 取扱トークン種別
      operationId: TokenType
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GetAdminTokenTypeResponse_'
  /Admin/Tokens/{token_address}:
    get:
      tags:
        - admin
      summary: Retrieve a Listed Token
      description: |-
        Endpoint: /Admin/Tokens/{token_address}
          - GET: 取扱トークン情報取得（個別）
      operationId: TokenGET
      parameters:
        - description: Token Address
          required: true
          schema:
            title: Token Address
            type: string
            description: Token Address
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveAdminTokenResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
    post:
      tags:
        - admin
      summary: Update a Listed Token
      description: |-
        Endpoint: /Admin/Tokens/{contract_address}
          - POST: 取扱トークン情報更新（個別）
      operationId: TokenPOST
      parameters:
        - description: Token Address
          required: true
          schema:
            title: Token Address
            type: string
            description: Token Address
          name: token_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdminTokenRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenpost
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
    delete:
      tags:
        - admin
      summary: Delete a Listed Token
      description: |-
        Endpoint: /Admin/Tokens/{contract_address}
          - DELETE: 取扱トークン情報削除（個別）
      operationId: TokenDELETE
      parameters:
        - description: Token Address
          required: true
          schema:
            title: Token Address
            type: string
            description: Token Address
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorResponse'
  /NodeInfo:
    get:
      tags:
        - node_info
      summary: Blockchain node information
      description: 'Endpoint: /NodeInfo'
      operationId: NodeInfo
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GetNodeInfoResponse_'
  /NodeInfo/BlockSyncStatus:
    get:
      tags:
        - node_info
      summary: Block synchronization status of the connected blockchain node
      description: 'Endpoint: /NodeInfo/BlockSyncStatus'
      operationId: NodeInfoBlockSyncStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GetBlockSyncStatusResponse_'
  /NodeInfo/BlockData:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] List block data'
      description: |-
        Returns a list of block data within the specified block number range.
        The maximum number of search results is 1000.
      operationId: ListBlockData
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - required: false
          schema:
            title: From Block Number
            minimum: 0
            type: integer
          name: from_block_number
          in: query
        - required: false
          schema:
            title: To Block Number
            minimum: 0
            type: integer
          name: to_block_number
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_BlockDataListResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Listblockdata
                anyOf:
                  - $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /NodeInfo/BlockData/{block_number}:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] Retrieve block data'
      description: Returns block data in the specified block number.
      operationId: GetBlockData
      parameters:
        - required: true
          schema:
            title: Block Number
            minimum: 0
            type: integer
          name: block_number
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_BlockDataResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getblockdata
                anyOf:
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /NodeInfo/TxData:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] List tx data'
      description: |-
        Returns a list of transactions by various search parameters.
        The maximum number of search results is 10000.
      operationId: ListTxData
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: block number
          required: false
          schema:
            title: Block Number
            minimum: 0
            type: integer
            description: block number
          name: block_number
          in: query
        - description: tx from
          required: false
          schema:
            title: From Address
            type: string
            description: tx from
          name: from_address
          in: query
        - description: tx to
          required: false
          schema:
            title: To Address
            type: string
            description: tx to
          name: to_address
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TxDataListResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Listtxdata
                anyOf:
                  - $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /NodeInfo/TxData/{hash}:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] Retrieve transaction data'
      description: Searching for the transaction by transaction hash
      operationId: GetTxData
      parameters:
        - required: true
          schema:
            title: Hash
            type: string
          name: hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TxDataResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Gettxdata
                anyOf:
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /ABI/StraightBond:
    get:
      tags:
        - abi
      summary: StraightBond ABI
      description: 'Endpoint: /ABI/StraightBond'
      operationId: StraightBondABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /ABI/Share:
    get:
      tags:
        - abi
      summary: Share ABI
      description: 'Endpoint: /ABI/Share'
      operationId: ShareABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /ABI/Membership:
    get:
      tags:
        - abi
      summary: Membership ABI
      description: 'Endpoint: /ABI/Membership'
      operationId: MembershipABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /ABI/Coupon:
    get:
      tags:
        - abi
      summary: Coupon ABI
      description: 'Endpoint: /ABI/Coupon'
      operationId: CouponABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Companies:
    get:
      tags:
        - company_info
      summary: Issuer Information List
      description: 'Endpoint: /Companies'
      operationId: Companies
      parameters:
        - description: include private listing token issuers
          required: false
          schema:
            title: Include Private Listing
            type: boolean
            description: include private listing token issuers
            default: false
          name: include_private_listing
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCompanyInfoResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Companies/{eth_address}:
    get:
      tags:
        - company_info
      summary: Issuer Information
      description: 'Endpoint: /Companies/{eth_address}'
      operationId: Company
      parameters:
        - description: address
          required: true
          schema:
            title: Eth Address
            type: string
            description: address
          name: eth_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveCompanyInfoResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Company
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Companies/{eth_address}/Tokens:
    get:
      tags:
        - company_info
      summary: List of tokens issued by issuer
      description: 'Endpoint: /Companies/{eth_address}/Tokens'
      operationId: retrieve_company_tokens_Companies__eth_address__Tokens_get
      parameters:
        - description: address
          required: true
          schema:
            title: Eth Address
            type: string
            description: address
          name: eth_address
          in: path
        - description: include private listing token issuers
          required: false
          schema:
            title: Include Private Listing
            type: boolean
            description: include private listing token issuers
            default: false
          name: include_private_listing
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCompanyTokensResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /User/PaymentAccount:
    get:
      tags:
        - user_info
      summary: Registration status to PaymentGateway Contract
      description: 'Endpoint: /User/PaymentAccount'
      operationId: PaymentAccount
      parameters:
        - description: Account Address
          required: true
          schema:
            title: Account Address
            type: string
            description: Account Address
          name: account_address
          in: query
        - description: Agent Address
          required: true
          schema:
            title: Agent Address
            type: string
            description: Agent Address
          name: agent_address
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrievePaymentAccountRegistrationStatusResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /User/PersonalInfo:
    get:
      tags:
        - user_info
      summary: Registration status to PersonalInfo Contract
      description: 'Endpoint: /User/PersonalInfo'
      operationId: PersonalInfo
      parameters:
        - description: PersonalInfo contract address
          required: false
          schema:
            title: Personal Info Address
            type: string
            description: PersonalInfo contract address
          name: personal_info_address
          in: query
        - description: account address
          required: true
          schema:
            title: Account Address
            type: string
            description: account address
          name: account_address
          in: query
        - description: owner(issuer) address
          required: true
          schema:
            title: Owner Address
            type: string
            description: owner(issuer) address
          name: owner_address
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrievePersonalInfoRegistrationStatusResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Eth/TransactionCount/{eth_address}:
    get:
      tags:
        - transaction
      summary: Transaction count for the specified eth_address
      description: 'Endpoint: /Eth/TransactionCount/{eth_address}'
      operationId: TransactionCount
      parameters:
        - required: true
          schema:
            title: Eth Address
            type: string
          name: eth_address
          in: path
        - required: false
          schema:
            $ref: '#/components/schemas/BlockIdentifier'
          name: block_identifier
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransactionCountResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Transactioncount
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Eth/SendRawTransaction:
    post:
      tags:
        - transaction
      summary: Send signed transaction
      description: 'Endpoint: /Eth/SendRawTransaction'
      operationId: SendRawTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRawTransactionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_SendRawTransactionsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Sendrawtransaction
                anyOf:
                  - $ref: '#/components/schemas/SuspendedTokenErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Eth/SendRawTransactionNoWait:
    post:
      tags:
        - transaction
      summary: Send signed transaction
      description: 'Endpoint: /Eth/SendRawTransactionNoWait'
      operationId: SendRawTransactionNoWait
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRawTransactionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_SendRawTransactionsNoWaitResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Sendrawtransactionnowait
                anyOf:
                  - $ref: '#/components/schemas/SuspendedTokenErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Eth/WaitForTransactionReceipt:
    get:
      tags:
        - transaction
      summary: Wait for Transaction Receipt
      description: 'Endpoint: /Eth/WaitForTransactionReceipt'
      operationId: WaitForTransactionReceipt
      parameters:
        - description: transaction hash
          required: true
          schema:
            title: Transaction Hash
            type: string
            description: transaction hash
          name: transaction_hash
          in: query
        - description: Timeout value
          required: false
          schema:
            title: Timeout
            maximum: 30
            minimum: 1
            type: integer
            description: Timeout value
            default: 5
          name: timeout
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_WaitForTransactionReceiptResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/StraightBond:
    get:
      tags:
        - token_info
      summary: Token detail list of StraightBond tokens
      description: 'Endpoint: /Token/StraightBond'
      operationId: StraightBondTokens
      parameters:
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: address_list
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: personal information address
          required: false
          schema:
            title: Personal Info Address
            type: string
            description: personal information address
          name: personal_info_address
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Is Offering
            type: boolean
            description: offering status
          name: is_offering
          in: query
        - description: transfer approval required status
          required: false
          schema:
            title: Transfer Approval Required
            type: boolean
            description: transfer approval required status
          name: transfer_approval_required
          in: query
        - description: redeem status
          required: false
          schema:
            title: Is Redeemed
            type: boolean
            description: redeem status
          name: is_redeemed
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/StraightBondTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllStraightBondTokensResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Straightbondtokens
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/StraightBond/Addresses:
    get:
      tags:
        - token_info
      summary: List of StraightBond token address
      description: 'Endpoint: /Token/StraightBond/Addresses'
      operationId: StraightBondTokenAddresses
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: personal information address
          required: false
          schema:
            title: Personal Info Address
            type: string
            description: personal information address
          name: personal_info_address
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Is Offering
            type: boolean
            description: offering status
          name: is_offering
          in: query
        - description: transfer approval required status
          required: false
          schema:
            title: Transfer Approval Required
            type: boolean
            description: transfer approval required status
          name: transfer_approval_required
          in: query
        - description: redeem status
          required: false
          schema:
            title: Is Redeemed
            type: boolean
            description: redeem status
          name: is_redeemed
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/StraightBondTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllStraightBondTokenAddressesResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/StraightBond/{token_address}:
    get:
      tags:
        - token_info
      summary: StraightBond token details
      description: 'Endpoint: /Token/StraightBond/{contract_address}'
      operationId: StraightBondTokenDetails
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveStraightBondTokenResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Straightbondtokendetails
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Straightbondtokendetails
                anyOf:
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/Share:
    get:
      tags:
        - token_info
      summary: Token detail list of Share tokens
      description: 'Endpoint: /Token/Share'
      operationId: ShareTokens
      parameters:
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: address_list
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: personal information address
          required: false
          schema:
            title: Personal Info Address
            type: string
            description: personal information address
          name: personal_info_address
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Is Offering
            type: boolean
            description: offering status
          name: is_offering
          in: query
        - description: transfer approval required status
          required: false
          schema:
            title: Transfer Approval Required
            type: boolean
            description: transfer approval required status
          name: transfer_approval_required
          in: query
        - description: cancellation status
          required: false
          schema:
            title: Is Canceled
            type: boolean
            description: cancellation status
          name: is_canceled
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ShareTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllShareTokensResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Sharetokens
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Share/Addresses:
    get:
      tags:
        - token_info
      summary: List of Share token address
      description: 'Endpoint: /Token/Share/Addresses'
      operationId: ShareTokenAddresses
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: personal information address
          required: false
          schema:
            title: Personal Info Address
            type: string
            description: personal information address
          name: personal_info_address
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Is Offering
            type: boolean
            description: offering status
          name: is_offering
          in: query
        - description: transfer approval required status
          required: false
          schema:
            title: Transfer Approval Required
            type: boolean
            description: transfer approval required status
          name: transfer_approval_required
          in: query
        - description: cancellation status
          required: false
          schema:
            title: Is Canceled
            type: boolean
            description: cancellation status
          name: is_canceled
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ShareTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllShareTokenAddressesResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Share/{token_address}:
    get:
      tags:
        - token_info
      summary: Share token details
      description: 'Endpoint: /Token/Share/{contract_address}'
      operationId: ShareTokenDetails
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveShareTokenResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Sharetokendetails
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Membership:
    get:
      tags:
        - token_info
      summary: Token detail list of Membership tokens
      description: 'Endpoint: /Token/Membership'
      operationId: MembershipTokens
      parameters:
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: address_list
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Initial Offering Status
            type: boolean
            description: offering status
          name: initial_offering_status
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/MembershipTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllMembershipTokensResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Membershiptokens
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Membership/Addresses:
    get:
      tags:
        - token_info
      summary: List of Membership token address
      description: 'Endpoint: /Token/Membership/Addresses'
      operationId: MembershipTokenAddresses
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Initial Offering Status
            type: boolean
            description: offering status
          name: initial_offering_status
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/MembershipTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllMembershipTokenAddressesResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Membership/{token_address}:
    get:
      tags:
        - token_info
      summary: Membership token details
      description: 'Endpoint: /Token/Membership/{contract_address}'
      operationId: MembershipTokenDetails
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveMembershipTokenResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Membershiptokendetails
                anyOf:
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/Coupon:
    get:
      tags:
        - token_info
      summary: Token detail list of Coupon tokens
      description: 'Endpoint: /Token/Coupon'
      operationId: CouponTokens
      parameters:
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: address_list
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Initial Offering Status
            type: boolean
            description: offering status
          name: initial_offering_status
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/CouponTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponTokensResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Coupontokens
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Coupon/Addresses:
    get:
      tags:
        - token_info
      summary: List of Coupon token address
      description: 'Endpoint: /Token/Coupon/Addresses'
      operationId: CouponTokenAddresses
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: issuer address
          required: false
          schema:
            title: Owner Address
            type: string
            description: issuer address
          name: owner_address
          in: query
        - description: token name
          required: false
          schema:
            title: Name
            type: string
            description: token name
          name: name
          in: query
        - description: token symbol
          required: false
          schema:
            title: Symbol
            type: string
            description: token symbol
          name: symbol
          in: query
        - description: company name
          required: false
          schema:
            title: Company Name
            type: string
            description: company name
          name: company_name
          in: query
        - description: tradable exchange address
          required: false
          schema:
            title: Tradable Exchange
            type: string
            description: tradable exchange address
          name: tradable_exchange
          in: query
        - description: token status
          required: false
          schema:
            title: Status
            type: boolean
            description: token status
          name: status
          in: query
        - description: transferable status
          required: false
          schema:
            title: Transferable
            type: boolean
            description: transferable status
          name: transferable
          in: query
        - description: offering status
          required: false
          schema:
            title: Initial Offering Status
            type: boolean
            description: offering status
          name: initial_offering_status
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/CouponTokensSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponTokenAddressesResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Token/Coupon/{token_address}:
    get:
      tags:
        - token_info
      summary: Coupon token details
      description: 'Endpoint: /Token/Coupon/{contract_address}'
      operationId: CouponTokenDetails
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveCouponTokenResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Coupontokendetails
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Coupontokendetails
                anyOf:
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/Status:
    get:
      tags:
        - token_info
      summary: Token Status
      description: 'Endpoint: /Token/{contract_address}/Status'
      operationId: TokenStatus
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenStatusResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenstatus
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/Holders:
    get:
      tags:
        - token_info
      summary: Token holders
      description: 'Endpoint: /Token/{contract_address}/Holders'
      operationId: TokenHolders
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
        - description: exclude owner
          required: false
          schema:
            title: Exclude Owner
            type: boolean
            description: exclude owner
            default: false
          name: exclude_owner
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenholders
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/Holders/Count:
    get:
      tags:
        - token_info
      summary: Token holders count
      description: 'Endpoint: /Token/{contract_address}/Holders/Count'
      operationId: TokenHoldersCount
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
        - description: exclude owner
          required: false
          schema:
            title: Exclude Owner
            type: boolean
            description: exclude owner
            default: false
          name: exclude_owner
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersCountResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenholderscount
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/Holders/Collection:
    post:
      tags:
        - token_info
      summary: Execute Batch Getting Token Holders At Specific BlockNumber
      description: 'Endpoint: /Token/{contract_address}/Holders/Collection'
      operationId: TokenHoldersCollection
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenHoldersCollectionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_CreateTokenHoldersCollectionResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenholderscollection
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/Holders/Collection/{list_id}:
    get:
      tags:
        - token_info
      summary: Token Holder At Specific BlockNumber
      description: 'Endpoint: /Token/{contract_address}/Holders/Collection/{list_id}'
      operationId: TokenHoldersList
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
        - description: Unique id to be assigned to each token holder list.This must be Version4 UUID.
          required: true
          schema:
            title: List Id
            type: string
            description: Unique id to be assigned to each token holder list.This must be Version4 UUID.
            format: uuid
          example: cfd83622-34dc-4efe-a68b-2cc275d3d824
          name: list_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersCollectionResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Tokenholderslist
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/TransferHistory:
    get:
      tags:
        - token_info
      summary: Token Transfer History
      description: 'Endpoint: /Token/{contract_address}/TransferHistory'
      operationId: TransferHistory
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransferHistoriesResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Transferhistory
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Token/{token_address}/TransferApprovalHistory:
    get:
      tags:
        - token_info
      summary: Token Transfer Approval History
      description: 'Endpoint: /Token/{contract_address}/TransferApprovalHistory'
      operationId: TransferApprovalHistory
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransferApprovalHistoriesResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Transferapprovalhistory
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Position/{account_address}/Share/Lock:
    get:
      tags:
        - user_position
      summary: Share Token Locked Position
      operationId: GetShareTokenLockedPosition
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: lock address
          name: lock_address
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllLockedSortItem'
            description: sort item
            default: token_address
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Token Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: token_address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListLockedResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getsharetokenlockedposition
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Position/{account_address}/Share/Lock/Event:
    get:
      tags:
        - user_position
      summary: Share Token Lock Events
      operationId: GetShareTokenLockEvent
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: token address
          required: false
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: query
        - description: lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: lock address
          name: lock_address
          in: query
        - description: recipient address
          required: false
          schema:
            title: Recipient Address
            type: string
            description: recipient address
          name: recipient_address
          in: query
        - description: data
          required: false
          schema:
            title: Data
            type: string
            description: data
          name: data
          in: query
        - description: history item category (**this affects total number**)
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventCategory'
            description: history item category (**this affects total number**)
          name: category
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventSortItem'
            description: sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_LockEventsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Position/{account_address}/StraightBond/Lock:
    get:
      tags:
        - user_position
      summary: StraightBond Token Locked Position
      operationId: GetStraightBondTokenLockedPosition
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: lock address
          name: lock_address
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllLockedSortItem'
            description: sort item
            default: token_address
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
        - description: list of token address (**this affects total number**)
          required: false
          schema:
            title: Token Address List
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            default: []
          name: token_address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListLockedResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getstraightbondtokenlockedposition
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Position/{account_address}/StraightBond/Lock/Event:
    get:
      tags:
        - user_position
      summary: StraightBond Token Lock Events
      operationId: GetStraightBondTokenLockEvent
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: token address
          required: false
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: query
        - description: lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: lock address
          name: lock_address
          in: query
        - description: recipient address
          required: false
          schema:
            title: Recipient Address
            type: string
            description: recipient address
          name: recipient_address
          in: query
        - description: data
          required: false
          schema:
            title: Data
            type: string
            description: data
          name: data
          in: query
        - description: history item category (**this affects total number**)
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventCategory'
            description: history item category (**this affects total number**)
          name: category
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventSortItem'
            description: sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_LockEventsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Position/{account_address}/Share:
    get:
      tags:
        - user_position
      summary: Share Token Position
      description: 'Endpoint: /Position/{account_address}/Share'
      operationId: GetShareTokenPosition
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: include token details
          required: false
          schema:
            title: Include Token Details
            type: boolean
            description: include token details
            default: false
          name: include_token_details
          in: query
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_share.RetrieveShareTokenResponse__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getsharetokenposition
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getsharetokenposition
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/StraightBond:
    get:
      tags:
        - user_position
      summary: StraightBond Token Position
      description: 'Endpoint: /Position/{account_address}/StraightBond'
      operationId: GetStraightBondTokenPosition
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: include token details
          required: false
          schema:
            title: Include Token Details
            type: boolean
            description: include token details
            default: false
          name: include_token_details
          in: query
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getstraightbondtokenposition
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getstraightbondtokenposition
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/Membership:
    get:
      tags:
        - user_position
      summary: Membership Token Position
      description: 'Endpoint: /Position/{account_address}/Membership'
      operationId: GetMembershipTokenPosition
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: include token details
          required: false
          schema:
            title: Include Token Details
            type: boolean
            description: include token details
            default: false
          name: include_token_details
          in: query
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_MembershipPositionsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getmembershiptokenposition
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getmembershiptokenposition
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/Coupon:
    get:
      tags:
        - user_position
      summary: Coupon Token Position
      description: 'Endpoint: /Position/{account_address}/Coupon'
      operationId: GetCouponTokenPosition
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: include token details
          required: false
          schema:
            title: Include Token Details
            type: boolean
            description: include token details
            default: false
          name: include_token_details
          in: query
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_CouponPositionsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getcoupontokenposition
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getcoupontokenposition
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/Share/{token_address}:
    get:
      tags:
        - user_position
      summary: Share Token Position By Token Address
      description: 'Endpoint: /Position/{account_address}/Share/{contract_address}'
      operationId: GetShareTokenPositionByAddress
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_share.RetrieveShareTokenResponse__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getsharetokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getsharetokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/StraightBond/{token_address}:
    get:
      tags:
        - user_position
      summary: StraightBond Token Position By Token Address
      description: 'Endpoint: /Position/{account_address}/StraightBond/{contract_address}'
      operationId: GetStraightBondTokenPositionByAddress
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getstraightbondtokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getstraightbondtokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/Membership/{token_address}:
    get:
      tags:
        - user_position
      summary: Membership Token Position By Token Address
      description: 'Endpoint: /Position/{account_address}/Membership/{contract_address}'
      operationId: GetMembershipTokenPositionByAddress
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_MembershipPositionWithDetail_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getmembershiptokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getmembershiptokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Position/{account_address}/Coupon/{token_address}:
    get:
      tags:
        - user_position
      summary: Coupon Token Position By Token Address
      description: 'Endpoint: /Position/{account_address}/Coupon/{contract_address}'
      operationId: GetCouponTokenPositionByAddress
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: enable using indexed position data
          required: false
          schema:
            title: Enable Index
            type: boolean
            description: enable using indexed position data
            default: false
          name: enable_index
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_CouponPositionWithDetail_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getcoupontokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                title: Response 404 Getcoupontokenpositionbyaddress
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Notifications:
    get:
      tags:
        - user_notification
      summary: Notification List
      description: 'Endpoint: /Notifications/'
      operationId: GetNotifications
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - required: false
          schema:
            title: Address
            type: string
          name: address
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/NotificationType'
          name: notification_type
          in: query
        - required: false
          schema:
            title: Priority
            maximum: 2
            minimum: 0
            type: integer
          name: priority
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/NotificationsSortItem'
            description: sort item
            default: created
          name: sort_item
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_NotificationsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Notifications/Read:
    post:
      tags:
        - user_notification
      summary: Mark all notifications as read
      description: 'Endpoint: /Notifications/Read/'
      operationId: NotificationsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationReadRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Notifications/Count:
    get:
      tags:
        - user_notification
      summary: Get the number of unread notifications
      description: 'Endpoint: /Notifications/Count/'
      operationId: NotificationsCount
      parameters:
        - required: true
          schema:
            title: Address
            type: string
          name: address
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_NotificationsCountResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Notifications/{notification_id}:
    post:
      tags:
        - user_notification
      summary: Update Notification
      description: 'Endpoint: /Notifications/{id}'
      operationId: PostNotifications
      parameters:
        - description: Notification id
          required: true
          schema:
            title: Notification Id
            type: string
            description: Notification id
          name: notification_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_NotificationUpdateResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
    delete:
      tags:
        - user_notification
      summary: Delete Notification
      operationId: DeleteNotification
      parameters:
        - description: Notification id
          required: true
          schema:
            title: Notification Id
            type: string
            description: Notification id
          name: notification_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /E2EMessage/EncryptionKey/{account_address}:
    get:
      tags:
        - messaging
      summary: Retrieve message encryption key
      description: 'Endpoint: /E2EMessage/EncryptionKey/{account_address}'
      operationId: EncryptionKey
      parameters:
        - description: Account address (message receiver)
          required: true
          schema:
            title: Account Address
            type: string
            description: Account address (message receiver)
          name: account_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_E2EMessageEncryptionKeyResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Encryptionkey
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
  /Events/E2EMessaging:
    get:
      tags:
        - contract_log
      summary: List all E2EMessaging event logs
      description: List all E2EMessaging event logs
      operationId: E2EMessagingEvents
      parameters:
        - description: from block number
          required: true
          schema:
            title: From Block
            minimum: 1
            type: integer
            description: from block number
          name: from_block
          in: query
        - description: to block number
          required: true
          schema:
            title: To Block
            minimum: 1
            type: integer
            description: to block number
          name: to_block
          in: query
        - description: events to get
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/E2EMessagingEventType'
            description: events to get
          name: event
          in: query
        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{"sender": "0x0000000000000000000000000000000000000000"}```'
          required: false
          schema:
            title: Argument Filters
            type: string
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{"sender": "0x0000000000000000000000000000000000000000"}```'
          name: argument_filters
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 E2Emessagingevents
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Events/IbetEscrow:
    get:
      tags:
        - contract_log
      summary: List all IbetEscrow event logs
      description: List all IbetEscrow event logs
      operationId: IbetEscrowEvents
      parameters:
        - description: from block number
          required: true
          schema:
            title: From Block
            minimum: 1
            type: integer
            description: from block number
          name: from_block
          in: query
        - description: to block number
          required: true
          schema:
            title: To Block
            minimum: 1
            type: integer
            description: to block number
          name: to_block
          in: query
        - description: events to get
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IbetEscrowEventType'
            description: events to get
          name: event
          in: query
        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId": 0    "token": "0x0000000000000000000000000000000000000000"}```'
          required: false
          schema:
            title: Argument Filters
            type: string
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId": 0    "token": "0x0000000000000000000000000000000000000000"}```'
          name: argument_filters
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Ibetescrowevents
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Events/IbetSecurityTokenEscrow:
    get:
      tags:
        - contract_log
      summary: List all IbetSecurityTokenEscrow event logs
      description: List all IbetSecurityTokenEscrow event logs
      operationId: IbetSecurityTokenEscrowEvents
      parameters:
        - description: from block number
          required: true
          schema:
            title: From Block
            minimum: 1
            type: integer
            description: from block number
          name: from_block
          in: query
        - description: to block number
          required: true
          schema:
            title: To Block
            minimum: 1
            type: integer
            description: to block number
          name: to_block
          in: query
        - description: events to get
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IbetSecurityTokenEscrowEventType'
            description: events to get
          name: event
          in: query
        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId": 0    "token": "0x0000000000000000000000000000000000000000"}```'
          required: false
          schema:
            title: Argument Filters
            type: string
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId": 0    "token": "0x0000000000000000000000000000000000000000"}```'
          name: argument_filters
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Ibetsecuritytokenescrowevents
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Events/IbetSecurityTokenInterface/{token_address}:
    get:
      tags:
        - contract_log
      summary: List all IbetSecurityTokenInterface event logs
      description: List all IbetSecurityTokenInterface event logs
      operationId: IbetSecurityTokenInterfaceEvents
      parameters:
        - description: token address
          required: true
          schema:
            title: Token Address
            type: string
            description: token address
          name: token_address
          in: path
        - description: from block number
          required: true
          schema:
            title: From Block
            minimum: 1
            type: integer
            description: from block number
          name: from_block
          in: query
        - description: to block number
          required: true
          schema:
            title: To Block
            minimum: 1
            type: integer
            description: to block number
          name: to_block
          in: query
        - description: events to get
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IbetSecurityTokenInterfaceEventType'
            description: events to get
          name: event
          in: query
        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "from": "0x0000000000000000000000000000000000000000"    "to": "0x0000000000000000000000000000000000000000"}```'
          required: false
          schema:
            title: Argument Filters
            type: string
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "from": "0x0000000000000000000000000000000000000000"    "to": "0x0000000000000000000000000000000000000000"}```'
          name: argument_filters
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Ibetsecuritytokeninterfaceevents
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
  /DEX/Market/Agreement:
    get:
      tags:
        - dex
      summary: Agreement Details
      description: 約定情報参照
      operationId: GetAgreement
      parameters:
        - description: order id
          required: true
          schema:
            title: Order Id
            type: integer
            description: order id
          name: order_id
          in: query
        - description: agreement id
          required: true
          schema:
            title: Agreement Id
            type: integer
            description: agreement id
          name: agreement_id
          in: query
        - description: exchange_address
          required: true
          schema:
            title: Exchange Address
            type: string
            description: exchange_address
          name: exchange_address
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveAgreementDetailResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Getagreement
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/Market/OrderBook/Membership:
    get:
      tags:
        - dex
      summary: Membership Token Order Book
      description: '[会員権]板情報取得'
      operationId: MembershipOrderBook
      parameters:
        - description: Orderer's account address. Orders from the given address will not be included in the response.
          required: false
          schema:
            title: Account Address
            type: string
            description: Orderer's account address. Orders from the given address will not be included in the response.
          name: account_address
          in: query
        - description: Token address
          required: true
          schema:
            title: Token Address
            type: string
            description: Token address
          name: token_address
          in: query
        - description: Settlement agent address on ibet exchange
          required: true
          schema:
            title: Exchange Agent Address
            type: string
            description: Settlement agent address on ibet exchange
          name: exchange_agent_address
          in: query
        - description: Order type to be executed by the Orderer. If "buy" is selected, the sell order book will be returned.
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderType'
            description: Order type to be executed by the Orderer. If "buy" is selected, the sell order book will be returned.
          name: order_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderBookItemResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/Market/LastPrice/Membership:
    get:
      tags:
        - dex
      summary: Membership Token Last Price (Bulk Get)
      description: '[会員権]現在値取得'
      operationId: MembershipLastPrice
      parameters:
        - description: Token address list
          required: true
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: Token address list
          name: address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLastPriceResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/Market/Tick/Membership:
    get:
      tags:
        - dex
      summary: Membership Token Tick (Bulk Get)
      description: '[会員権]歩み値取得'
      operationId: MembershipTick
      parameters:
        - description: Token address list
          required: true
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: Token address list
          name: address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTicksResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/Market/OrderBook/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Token Order Book
      description: '[クーポン]板情報取得'
      operationId: CouponOrderBook
      parameters:
        - description: Orderer's account address. Orders from the given address will not be included in the response.
          required: false
          schema:
            title: Account Address
            type: string
            description: Orderer's account address. Orders from the given address will not be included in the response.
          name: account_address
          in: query
        - description: Token address
          required: true
          schema:
            title: Token Address
            type: string
            description: Token address
          name: token_address
          in: query
        - description: Settlement agent address on ibet exchange
          required: true
          schema:
            title: Exchange Agent Address
            type: string
            description: Settlement agent address on ibet exchange
          name: exchange_agent_address
          in: query
        - description: Order type to be executed by the Orderer. If "buy" is selected, the sell order book will be returned.
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderType'
            description: Order type to be executed by the Orderer. If "buy" is selected, the sell order book will be returned.
          name: order_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderBookItemResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/Market/LastPrice/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Token Last Price (Bulk Get)
      description: '[クーポン]現在値取得'
      operationId: CouponLastPrice
      parameters:
        - description: Token address list
          required: true
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: Token address list
          name: address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLastPriceResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/Market/Tick/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Token Tick (Bulk Get)
      description: '[クーポン]歩み値取得'
      operationId: CouponTick
      parameters:
        - description: Token address list
          required: true
          schema:
            title: Address List
            type: array
            items:
              type: string
            description: Token address list
          name: address_list
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTicksResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/OrderList/Membership:
    get:
      tags:
        - dex
      summary: Membership Order History (Bulk Get)
      description: 'Endpoint: /DEX/OrderList/Membership'
      operationId: MembershipOrderList
      parameters:
        - description: Account address list
          required: true
          schema:
            title: Account Address List
            type: array
            items:
              type: string
            description: Account address list
          name: account_address_list
          in: query
        - description: Whether to include canceled orders or canceled agreements.
          required: false
          schema:
            title: Include Canceled Items
            type: boolean
            description: Whether to include canceled orders or canceled agreements.
          name: include_canceled_items
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_membership.RetrieveMembershipTokenResponse__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/OrderList/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Order History (Bulk Get)
      description: 'Endpoint: /DEX/OrderList/Coupon'
      operationId: CouponOrderList
      parameters:
        - description: Account address list
          required: true
          schema:
            title: Account Address List
            type: array
            items:
              type: string
            description: Account address list
          name: account_address_list
          in: query
        - description: Whether to include canceled orders or canceled agreements.
          required: false
          schema:
            title: Include Canceled Items
            type: boolean
            description: Whether to include canceled orders or canceled agreements.
          name: include_canceled_items
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_coupon.RetrieveCouponTokenResponse__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /DEX/OrderList/{token_address}:
    get:
      tags:
        - dex
      summary: Order History filtered by token (Bulk Get)
      description: 'Endpoint: /DEX/OrderList/{token_address}'
      operationId: IbetExchange
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: Account address list
          required: true
          schema:
            title: Account Address List
            type: array
            items:
              type: string
            description: Account address list
          name: account_address_list
          in: query
        - description: Whether to include canceled orders or canceled agreements.
          required: false
          schema:
            title: Include Canceled Items
            type: boolean
            description: Whether to include canceled orders or canceled agreements.
          name: include_canceled_items
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.dex_order_list.TokenAddress__'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: Response 400 Ibetexchange
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
components:
  schemas:
    ABI:
      title: ABI
      type: array
      items: {}
    Agreement:
      title: Agreement
      required:
        - exchange_address
        - order_id
        - agreement_id
        - amount
        - price
        - is_buy
        - canceled
        - agreement_timestamp
      type: object
      properties:
        exchange_address:
          title: Exchange Address
          type: string
          description: exchange address
        order_id:
          title: Order Id
          type: integer
        agreement_id:
          title: Agreement Id
          type: integer
        amount:
          title: Amount
          type: integer
        price:
          title: Price
          type: integer
        is_buy:
          title: Is Buy
          type: boolean
        canceled:
          title: Canceled
          type: boolean
        agreement_timestamp:
          title: Agreement Timestamp
          type: string
    AgreementSet:
      title: AgreementSet
      required:
        - token
        - agreement
        - sort_id
      type: object
      properties:
        token:
          title: Token
          anyOf:
            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
            - $ref: '#/components/schemas/app__model__schema__dex_order_list__TokenAddress'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          title: Sort Id
          type: integer
    AppErrorMetainfo:
      title: AppErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 0
        message:
          title: Message
          type: string
          example: ''
    AppErrorResponse:
      title: AppErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/AppErrorMetainfo'
        details:
          title: Details
          type: object
    ApprovalStatus:
      title: ApprovalStatus
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: An enumeration.
    BlockData:
      title: BlockData
      required:
        - number
        - hash
        - transactions
        - timestamp
        - gas_limit
        - gas_used
        - size
      type: object
      properties:
        number:
          title: Number
          minimum: 0
          type: integer
          description: Block number
        hash:
          title: Hash
          type: string
          description: Block hash
        transactions:
          title: Transactions
          type: array
          items:
            type: string
          description: Transaction list
        timestamp:
          title: Timestamp
          type: integer
        gas_limit:
          title: Gas Limit
          type: integer
        gas_used:
          title: Gas Used
          type: integer
        size:
          title: Size
          minimum: 0
          type: integer
    BlockDataDetail:
      title: BlockDataDetail
      required:
        - number
        - parent_hash
        - sha3_uncles
        - miner
        - state_root
        - transactions_root
        - receipts_root
        - logs_bloom
        - difficulty
        - gas_limit
        - gas_used
        - timestamp
        - proof_of_authority_data
        - mix_hash
        - nonce
        - hash
        - size
        - transactions
      type: object
      properties:
        number:
          title: Number
          minimum: 0
          type: integer
          description: Block number
        parent_hash:
          title: Parent Hash
          type: string
        sha3_uncles:
          title: Sha3 Uncles
          type: string
        miner:
          title: Miner
          type: string
        state_root:
          title: State Root
          type: string
        transactions_root:
          title: Transactions Root
          type: string
        receipts_root:
          title: Receipts Root
          type: string
        logs_bloom:
          title: Logs Bloom
          type: string
        difficulty:
          title: Difficulty
          type: integer
        gas_limit:
          title: Gas Limit
          type: integer
        gas_used:
          title: Gas Used
          type: integer
        timestamp:
          title: Timestamp
          type: integer
        proof_of_authority_data:
          title: Proof Of Authority Data
          type: string
        mix_hash:
          title: Mix Hash
          type: string
        nonce:
          title: Nonce
          type: string
        hash:
          title: Hash
          type: string
          description: Block hash
        size:
          title: Size
          minimum: 0
          type: integer
        transactions:
          title: Transactions
          type: array
          items:
            type: string
          description: Transaction list
    BlockDataListResponse:
      title: BlockDataListResponse
      required:
        - result_set
        - block_data
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        block_data:
          title: Block Data
          type: array
          items:
            $ref: '#/components/schemas/BlockData'
    BlockDataResponse:
      $ref: '#/components/schemas/BlockDataDetail'
      title: BlockDataResponse
    BlockIdentifier:
      title: BlockIdentifier
      enum:
        - latest
        - earliest
        - pending
      type: string
      description: An enumeration.
    CompleteAgreementSet:
      title: CompleteAgreementSet
      required:
        - token
        - agreement
        - sort_id
        - settlement_timestamp
      type: object
      properties:
        token:
          title: Token
          anyOf:
            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
            - $ref: '#/components/schemas/app__model__schema__dex_order_list__TokenAddress'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          title: Sort Id
          type: integer
        settlement_timestamp:
          title: Settlement Timestamp
          type: string
          description: settlement timestamp
    CouponImage:
      title: CouponImage
      required:
        - id
        - url
      type: object
      properties:
        id:
          title: Id
          type: integer
        url:
          title: Url
          type: string
    CouponPositionWithAddress:
      title: CouponPositionWithAddress
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - used
        - token_address
      type: object
      properties:
        balance:
          title: Balance
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        used:
          title: Used
          type: integer
        token_address:
          title: Token Address
          type: string
          description: set when include_token_details=true
    CouponPositionWithDetail:
      title: CouponPositionWithDetail
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - used
        - token
      type: object
      properties:
        balance:
          title: Balance
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        used:
          title: Used
          type: integer
        token:
          title: Token
          allOf:
            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
          description: set when include_token_details=false or null
    CouponPositionsResponse:
      title: CouponPositionsResponse
      required:
        - result_set
        - positions
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          title: Positions
          anyOf:
            - type: array
              items:
                $ref: '#/components/schemas/CouponPositionWithDetail'
            - type: array
              items:
                $ref: '#/components/schemas/CouponPositionWithAddress'
    CouponTokensSortItem:
      title: CouponTokensSortItem
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - personal_info_address
        - transferable
        - initial_offering_status
        - created
      type: string
      description: An enumeration.
    CreateTokenHoldersCollectionRequest:
      title: CreateTokenHoldersCollectionRequest
      required:
        - list_id
        - block_number
      type: object
      properties:
        list_id:
          title: List Id
          type: string
          description: Unique id to be assigned to each token holder list.This must be Version4 UUID.
          format: uuid
          example: cfd83622-34dc-4efe-a68b-2cc275d3d824
        block_number:
          title: Block Number
          type: integer
          description: block number
    CreateTokenHoldersCollectionResponse:
      title: CreateTokenHoldersCollectionResponse
      required:
        - list_id
        - status
      type: object
      properties:
        list_id:
          title: List Id
          type: string
          description: Unique id to be assigned to each token holder list.This must be Version4 UUID.
          format: uuid
          example: cfd83622-34dc-4efe-a68b-2cc275d3d824
        status:
          allOf:
            - $ref: '#/components/schemas/TokenHoldersCollectionBatchStatus'
          description: status code of batch job
    DataConflictErrorMetainfo:
      title: DataConflictErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 40
        message:
          title: Message
          type: string
          example: Data Conflict
    DataConflictErrorResponse:
      title: DataConflictErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/DataConflictErrorMetainfo'
        details:
          title: Details
          type: object
    DataNotExistsErrorMetainfo:
      title: DataNotExistsErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 30
        message:
          title: Message
          type: string
          example: Data Not Exists
    DataNotExistsErrorResponse:
      title: DataNotExistsErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/DataNotExistsErrorMetainfo'
        details:
          title: Details
          type: object
    DividendInformation:
      title: DividendInformation
      required:
        - dividends
        - dividend_record_date
        - dividend_payment_date
      type: object
      properties:
        dividends:
          title: Dividends
          type: number
          example: 999.9999999999999
        dividend_record_date:
          title: Dividend Record Date
          type: string
          example: '20200909'
        dividend_payment_date:
          title: Dividend Payment Date
          type: string
          example: '20201001'
    E2EMessageEncryptionKeyResponse:
      title: E2EMessageEncryptionKeyResponse
      required:
        - key
        - key_type
      type: object
      properties:
        key:
          title: Key
          type: string
          description: Message encryption key
        key_type:
          title: Key Type
          type: string
          description: key type
          example: RSA4096
    E2EMessagingEventType:
      title: E2EMessagingEventType
      enum:
        - PublicKeyUpdated
        - Message
      type: string
      description: An enumeration.
    Event:
      title: Event
      required:
        - event
        - transaction_hash
        - block_number
        - block_timestamp
        - log_index
      type: object
      properties:
        event:
          title: Event
          type: string
          description: the event name
        args:
          title: Args
          description: event args
        transaction_hash:
          title: Transaction Hash
          type: string
          description: transaction hash
        block_number:
          title: Block Number
          type: integer
          description: the block number where this log was in
        block_timestamp:
          title: Block Timestamp
          type: integer
          description: timestamp where this log was in
        log_index:
          title: Log Index
          type: integer
          description: integer of the log index position in the block
    GenericSecurityTokenPositionsResponse:
      title: GenericSecurityTokenPositionsResponse
      required:
        - result_set
        - positions
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          title: Positions
          anyOf:
            - type: array
              items:
                $ref: '#/components/schemas/SecurityTokenPositionWithDetail'
            - type: array
              items:
                $ref: '#/components/schemas/SecurityTokenPositionWithAddress'
    GenericSuccessResponse_ABI_:
      title: GenericSuccessResponse[ABI]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ABI'
    GenericSuccessResponse_BlockDataListResponse_:
      title: GenericSuccessResponse[BlockDataListResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/BlockDataListResponse'
    GenericSuccessResponse_BlockDataResponse_:
      title: GenericSuccessResponse[BlockDataResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/BlockDataResponse'
    GenericSuccessResponse_CouponPositionWithDetail_:
      title: GenericSuccessResponse[CouponPositionWithDetail]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/CouponPositionWithDetail'
    GenericSuccessResponse_CouponPositionsResponse_:
      title: GenericSuccessResponse[CouponPositionsResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/CouponPositionsResponse'
    GenericSuccessResponse_CreateTokenHoldersCollectionResponse_:
      title: GenericSuccessResponse[CreateTokenHoldersCollectionResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/CreateTokenHoldersCollectionResponse'
    GenericSuccessResponse_E2EMessageEncryptionKeyResponse_:
      title: GenericSuccessResponse[E2EMessageEncryptionKeyResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/E2EMessageEncryptionKeyResponse'
    GenericSuccessResponse_GetAdminTokenTypeResponse_:
      title: GenericSuccessResponse[GetAdminTokenTypeResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/GetAdminTokenTypeResponse'
    GenericSuccessResponse_GetBlockSyncStatusResponse_:
      title: GenericSuccessResponse[GetBlockSyncStatusResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/GetBlockSyncStatusResponse'
    GenericSuccessResponse_GetNodeInfoResponse_:
      title: GenericSuccessResponse[GetNodeInfoResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/GetNodeInfoResponse'
    GenericSuccessResponse_ListAllAdminTokensResponse_:
      title: GenericSuccessResponse[ListAllAdminTokensResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllAdminTokensResponse'
    GenericSuccessResponse_ListAllCompanyInfoResponse_:
      title: GenericSuccessResponse[ListAllCompanyInfoResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllCompanyInfoResponse'
    GenericSuccessResponse_ListAllCompanyTokensResponse_:
      title: GenericSuccessResponse[ListAllCompanyTokensResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllCompanyTokensResponse'
    GenericSuccessResponse_ListAllCouponTokenAddressesResponse_:
      title: GenericSuccessResponse[ListAllCouponTokenAddressesResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllCouponTokenAddressesResponse'
    GenericSuccessResponse_ListAllCouponTokensResponse_:
      title: GenericSuccessResponse[ListAllCouponTokensResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllCouponTokensResponse'
    GenericSuccessResponse_ListAllEventsResponse_:
      title: GenericSuccessResponse[ListAllEventsResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllEventsResponse'
    GenericSuccessResponse_ListAllLastPriceResponse_:
      title: GenericSuccessResponse[ListAllLastPriceResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllLastPriceResponse'
    GenericSuccessResponse_ListAllMembershipTokenAddressesResponse_:
      title: GenericSuccessResponse[ListAllMembershipTokenAddressesResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllMembershipTokenAddressesResponse'
    GenericSuccessResponse_ListAllMembershipTokensResponse_:
      title: GenericSuccessResponse[ListAllMembershipTokensResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllMembershipTokensResponse'
    GenericSuccessResponse_ListAllOrderBookItemResponse_:
      title: GenericSuccessResponse[ListAllOrderBookItemResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderBookItemResponse'
    GenericSuccessResponse_ListAllShareTokenAddressesResponse_:
      title: GenericSuccessResponse[ListAllShareTokenAddressesResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllShareTokenAddressesResponse'
    GenericSuccessResponse_ListAllShareTokensResponse_:
      title: GenericSuccessResponse[ListAllShareTokensResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllShareTokensResponse'
    GenericSuccessResponse_ListAllStraightBondTokenAddressesResponse_:
      title: GenericSuccessResponse[ListAllStraightBondTokenAddressesResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllStraightBondTokenAddressesResponse'
    GenericSuccessResponse_ListAllStraightBondTokensResponse_:
      title: GenericSuccessResponse[ListAllStraightBondTokensResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllStraightBondTokensResponse'
    GenericSuccessResponse_ListAllTicksResponse_:
      title: GenericSuccessResponse[ListAllTicksResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllTicksResponse'
    GenericSuccessResponse_ListLockedResponse_:
      title: GenericSuccessResponse[ListLockedResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListLockedResponse'
    GenericSuccessResponse_LockEventsResponse_:
      title: GenericSuccessResponse[LockEventsResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/LockEventsResponse'
    GenericSuccessResponse_MembershipPositionWithDetail_:
      title: GenericSuccessResponse[MembershipPositionWithDetail]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/MembershipPositionWithDetail'
    GenericSuccessResponse_MembershipPositionsResponse_:
      title: GenericSuccessResponse[MembershipPositionsResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/MembershipPositionsResponse'
    GenericSuccessResponse_NotificationUpdateResponse_:
      title: GenericSuccessResponse[NotificationUpdateResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/NotificationUpdateResponse'
    GenericSuccessResponse_NotificationsCountResponse_:
      title: GenericSuccessResponse[NotificationsCountResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/NotificationsCountResponse'
    GenericSuccessResponse_NotificationsResponse_:
      title: GenericSuccessResponse[NotificationsResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/NotificationsResponse'
    GenericSuccessResponse_RetrieveAdminTokenResponse_:
      title: GenericSuccessResponse[RetrieveAdminTokenResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveAdminTokenResponse'
    GenericSuccessResponse_RetrieveAgreementDetailResponse_:
      title: GenericSuccessResponse[RetrieveAgreementDetailResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveAgreementDetailResponse'
    GenericSuccessResponse_RetrieveCompanyInfoResponse_:
      title: GenericSuccessResponse[RetrieveCompanyInfoResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveCompanyInfoResponse'
    GenericSuccessResponse_RetrieveCouponTokenResponse_:
      title: GenericSuccessResponse[RetrieveCouponTokenResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveCouponTokenResponse'
    GenericSuccessResponse_RetrieveMembershipTokenResponse_:
      title: GenericSuccessResponse[RetrieveMembershipTokenResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
    GenericSuccessResponse_RetrievePaymentAccountRegistrationStatusResponse_:
      title: GenericSuccessResponse[RetrievePaymentAccountRegistrationStatusResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrievePaymentAccountRegistrationStatusResponse'
    GenericSuccessResponse_RetrievePersonalInfoRegistrationStatusResponse_:
      title: GenericSuccessResponse[RetrievePersonalInfoRegistrationStatusResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrievePersonalInfoRegistrationStatusResponse'
    GenericSuccessResponse_RetrieveShareTokenResponse_:
      title: GenericSuccessResponse[RetrieveShareTokenResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveShareTokenResponse'
    GenericSuccessResponse_RetrieveStraightBondTokenResponse_:
      title: GenericSuccessResponse[RetrieveStraightBondTokenResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
    GenericSuccessResponse_SendRawTransactionsNoWaitResponse_:
      title: GenericSuccessResponse[SendRawTransactionsNoWaitResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/SendRawTransactionsNoWaitResponse'
    GenericSuccessResponse_SendRawTransactionsResponse_:
      title: GenericSuccessResponse[SendRawTransactionsResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/SendRawTransactionsResponse'
    GenericSuccessResponse_TokenHoldersCollectionResponse_:
      title: GenericSuccessResponse[TokenHoldersCollectionResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TokenHoldersCollectionResponse'
    GenericSuccessResponse_TokenHoldersCountResponse_:
      title: GenericSuccessResponse[TokenHoldersCountResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TokenHoldersCountResponse'
    GenericSuccessResponse_TokenHoldersResponse_:
      title: GenericSuccessResponse[TokenHoldersResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TokenHoldersResponse'
    GenericSuccessResponse_TokenStatusResponse_:
      title: GenericSuccessResponse[TokenStatusResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TokenStatusResponse'
    GenericSuccessResponse_TransactionCountResponse_:
      title: GenericSuccessResponse[TransactionCountResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TransactionCountResponse'
    GenericSuccessResponse_TransferApprovalHistoriesResponse_:
      title: GenericSuccessResponse[TransferApprovalHistoriesResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TransferApprovalHistoriesResponse'
    GenericSuccessResponse_TransferHistoriesResponse_:
      title: GenericSuccessResponse[TransferHistoriesResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TransferHistoriesResponse'
    GenericSuccessResponse_TxDataListResponse_:
      title: GenericSuccessResponse[TxDataListResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TxDataListResponse'
    GenericSuccessResponse_TxDataResponse_:
      title: GenericSuccessResponse[TxDataResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/TxDataResponse'
    GenericSuccessResponse_WaitForTransactionReceiptResponse_:
      title: GenericSuccessResponse[WaitForTransactionReceiptResponse]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/WaitForTransactionReceiptResponse'
    GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.dex_order_list.TokenAddress__:
      title: GenericSuccessResponse[app.model.schema.dex_order_list.ListAllOrderListResponse[app.model.schema.dex_order_list.TokenAddress]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderListResponse'
    GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_coupon.RetrieveCouponTokenResponse__:
      title: GenericSuccessResponse[app.model.schema.dex_order_list.ListAllOrderListResponse[app.model.schema.token_coupon.RetrieveCouponTokenResponse]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderListResponse'
    GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_membership.RetrieveMembershipTokenResponse__:
      title: GenericSuccessResponse[app.model.schema.dex_order_list.ListAllOrderListResponse[app.model.schema.token_membership.RetrieveMembershipTokenResponse]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderListResponse'
    GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__:
      title: GenericSuccessResponse[app.model.schema.position.GenericSecurityTokenPositionsResponse[app.model.schema.token_bond.RetrieveStraightBondTokenResponse]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/GenericSecurityTokenPositionsResponse'
    GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_share.RetrieveShareTokenResponse__:
      title: GenericSuccessResponse[app.model.schema.position.GenericSecurityTokenPositionsResponse[app.model.schema.token_share.RetrieveShareTokenResponse]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/GenericSecurityTokenPositionsResponse'
    GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__:
      title: GenericSuccessResponse[app.model.schema.position.SecurityTokenPositionWithDetail[app.model.schema.token_bond.RetrieveStraightBondTokenResponse]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/SecurityTokenPositionWithDetail'
    GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_share.RetrieveShareTokenResponse__:
      title: GenericSuccessResponse[app.model.schema.position.SecurityTokenPositionWithDetail[app.model.schema.token_share.RetrieveShareTokenResponse]]
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          $ref: '#/components/schemas/SecurityTokenPositionWithDetail'
    GetAdminTokenTypeResponse:
      title: GetAdminTokenTypeResponse
      required:
        - IbetStraightBond
        - IbetShare
        - IbetMembership
        - IbetCoupon
      type: object
      properties:
        IbetStraightBond:
          title: Ibetstraightbond
          type: boolean
        IbetShare:
          title: Ibetshare
          type: boolean
        IbetMembership:
          title: Ibetmembership
          type: boolean
        IbetCoupon:
          title: Ibetcoupon
          type: boolean
    GetBlockSyncStatusResponse:
      title: GetBlockSyncStatusResponse
      required:
        - is_synced
        - latest_block_number
      type: object
      properties:
        is_synced:
          title: Is Synced
          type: boolean
          description: block sync status
        latest_block_number:
          title: Latest Block Number
          type: integer
          description: latest block number (returns null if is_synced is false)
    GetNodeInfoResponse:
      title: GetNodeInfoResponse
      type: object
      properties:
        payment_gateway_address:
          title: Payment Gateway Address
          type: string
        payment_gateway_abi:
          title: Payment Gateway Abi
        personal_info_address:
          title: Personal Info Address
          type: string
        personal_info_abi:
          title: Personal Info Abi
        ibet_membership_exchange_address:
          title: Ibet Membership Exchange Address
          type: string
        ibet_membership_exchange_abi:
          title: Ibet Membership Exchange Abi
        ibet_coupon_exchange_address:
          title: Ibet Coupon Exchange Address
          type: string
        ibet_coupon_exchange_abi:
          title: Ibet Coupon Exchange Abi
        ibet_escrow_address:
          title: Ibet Escrow Address
          type: string
        ibet_escrow_abi:
          title: Ibet Escrow Abi
        ibet_security_token_escrow_address:
          title: Ibet Security Token Escrow Address
          type: string
        ibet_security_token_escrow_abi:
          title: Ibet Security Token Escrow Abi
        e2e_messaging_address:
          title: E2E Messaging Address
          type: string
        e2e_messaging_abi:
          title: E2E Messaging Abi
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    IbetEscrowEventType:
      title: IbetEscrowEventType
      enum:
        - Deposited
        - Withdrawn
        - EscrowCreated
        - EscrowCanceled
        - EscrowFinished
      type: string
      description: An enumeration.
    IbetSecurityTokenEscrowEventType:
      title: IbetSecurityTokenEscrowEventType
      enum:
        - Deposited
        - Withdrawn
        - EscrowCreated
        - EscrowCanceled
        - EscrowFinished
        - ApplyForTransfer
        - CancelTransfer
        - ApproveTransfer
        - FinishTransfer
      type: string
      description: An enumeration.
    IbetSecurityTokenInterfaceEventType:
      title: IbetSecurityTokenInterfaceEventType
      enum:
        - Allot
        - ApplyForOffering
        - ApplyForTransfer
        - ApproveTransfer
        - CancelTransfer
        - ChangeOfferingStatus
        - ChangeStatus
        - ChangeTransferApprovalRequired
        - Issue
        - Lock
        - Redeem
        - Transfer
        - Unlock
      type: string
      description: An enumeration.
    InvalidParameterErrorMetainfo:
      title: InvalidParameterErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 88
        message:
          title: Message
          type: string
          example: Invalid Parameter
    InvalidParameterErrorResponse:
      title: InvalidParameterErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/InvalidParameterErrorMetainfo'
        details:
          title: Details
          type: object
    LastPrice:
      title: LastPrice
      required:
        - token_address
        - last_price
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        last_price:
          title: Last Price
          type: integer
    ListAllAdminTokensResponse:
      title: ListAllAdminTokensResponse
      type: array
      items:
        $ref: '#/components/schemas/RetrieveAdminTokenResponse'
    ListAllCompanyInfoResponse:
      title: ListAllCompanyInfoResponse
      type: array
      items:
        $ref: '#/components/schemas/RetrieveCompanyInfoResponse'
    ListAllCompanyTokensResponse:
      title: ListAllCompanyTokensResponse
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
          - $ref: '#/components/schemas/RetrieveShareTokenResponse'
          - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
          - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
    ListAllCouponTokenAddressesResponse:
      title: ListAllCouponTokenAddressesResponse
      required:
        - result_set
        - address_list
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          title: Address List
          type: array
          items:
            type: string
    ListAllCouponTokensResponse:
      title: ListAllCouponTokensResponse
      required:
        - result_set
        - tokens
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          title: Tokens
          type: array
          items:
            $ref: '#/components/schemas/RetrieveCouponTokenResponse'
    ListAllEventsResponse:
      title: ListAllEventsResponse
      type: array
      items:
        $ref: '#/components/schemas/Event'
    ListAllLastPriceResponse:
      title: ListAllLastPriceResponse
      type: array
      items:
        $ref: '#/components/schemas/LastPrice'
    ListAllLockedSortItem:
      title: ListAllLockedSortItem
      enum:
        - token_address
        - lock_address
        - account_address
        - value
      type: string
      description: An enumeration.
    ListAllMembershipTokenAddressesResponse:
      title: ListAllMembershipTokenAddressesResponse
      required:
        - result_set
        - address_list
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          title: Address List
          type: array
          items:
            type: string
    ListAllMembershipTokensResponse:
      title: ListAllMembershipTokensResponse
      required:
        - result_set
        - tokens
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          title: Tokens
          type: array
          items:
            $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
    ListAllOrderBookItemResponse:
      title: ListAllOrderBookItemResponse
      type: array
      items:
        $ref: '#/components/schemas/OrderBookItem'
    ListAllOrderListResponse:
      title: ListAllOrderListResponse
      required:
        - order_list
        - settlement_list
        - complete_list
      type: object
      properties:
        order_list:
          title: Order List
          type: array
          items:
            $ref: '#/components/schemas/OrderSet'
        settlement_list:
          title: Settlement List
          type: array
          items:
            $ref: '#/components/schemas/AgreementSet'
        complete_list:
          title: Complete List
          type: array
          items:
            $ref: '#/components/schemas/CompleteAgreementSet'
    ListAllShareTokenAddressesResponse:
      title: ListAllShareTokenAddressesResponse
      required:
        - result_set
        - address_list
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          title: Address List
          type: array
          items:
            type: string
    ListAllShareTokensResponse:
      title: ListAllShareTokensResponse
      required:
        - result_set
        - tokens
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          title: Tokens
          type: array
          items:
            $ref: '#/components/schemas/RetrieveShareTokenResponse'
    ListAllStraightBondTokenAddressesResponse:
      title: ListAllStraightBondTokenAddressesResponse
      required:
        - result_set
        - address_list
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          title: Address List
          type: array
          items:
            type: string
    ListAllStraightBondTokensResponse:
      title: ListAllStraightBondTokensResponse
      required:
        - result_set
        - tokens
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          title: Tokens
          type: array
          items:
            $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
    ListAllTicksResponse:
      title: ListAllTicksResponse
      type: array
      items:
        $ref: '#/components/schemas/Ticks'
    ListLockedResponse:
      title: ListLockedResponse
      required:
        - result_set
        - locked_list
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        locked_list:
          title: Locked List
          type: array
          items:
            $ref: '#/components/schemas/Locked'
    LockEvent:
      title: LockEvent
      required:
        - category
        - transaction_hash
        - token_address
        - lock_address
        - account_address
        - value
        - data
        - block_timestamp
      type: object
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/LockEventCategory'
          description: history item category
        transaction_hash:
          title: Transaction Hash
          type: string
          description: Transaction hash
        token_address:
          title: Token Address
          type: string
          description: Token address
        lock_address:
          title: Lock Address
          type: string
          description: Lock address
        account_address:
          title: Account Address
          type: string
          description: Account address
        recipient_address:
          title: Recipient Address
          type: string
          description: Recipient address
        value:
          title: Value
          type: integer
          description: Transfer quantity
        data:
          title: Data
          type: object
          description: Data
        block_timestamp:
          title: Block Timestamp
          type: string
          description: block_timestamp when Lock log was emitted (JST)
          format: date-time
    LockEventCategory:
      title: LockEventCategory
      enum:
        - Lock
        - Unlock
      type: string
      description: An enumeration.
    LockEventSortItem:
      title: LockEventSortItem
      enum:
        - token_address
        - lock_address
        - recipient_address
        - value
        - block_timestamp
      type: string
      description: An enumeration.
    LockEventsResponse:
      title: LockEventsResponse
      required:
        - result_set
        - events
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          title: Events
          type: array
          items:
            $ref: '#/components/schemas/LockEvent'
          description: Lock/Unlock event list
    Locked:
      title: Locked
      required:
        - token_address
        - lock_address
        - account_address
        - value
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        lock_address:
          title: Lock Address
          type: string
        account_address:
          title: Account Address
          type: string
        value:
          title: Value
          type: integer
    MembershipImage:
      title: MembershipImage
      required:
        - id
        - url
      type: object
      properties:
        id:
          title: Id
          type: integer
        url:
          title: Url
          type: string
    MembershipPositionWithAddress:
      title: MembershipPositionWithAddress
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - token_address
      type: object
      properties:
        balance:
          title: Balance
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        token_address:
          title: Token Address
          type: string
          description: set when include_token_details=true
    MembershipPositionWithDetail:
      title: MembershipPositionWithDetail
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - token
      type: object
      properties:
        balance:
          title: Balance
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        token:
          title: Token
          allOf:
            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
          description: set when include_token_details=false or null
    MembershipPositionsResponse:
      title: MembershipPositionsResponse
      required:
        - result_set
        - positions
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          title: Positions
          anyOf:
            - type: array
              items:
                $ref: '#/components/schemas/MembershipPositionWithDetail'
            - type: array
              items:
                $ref: '#/components/schemas/MembershipPositionWithAddress'
    MembershipTokensSortItem:
      title: MembershipTokensSortItem
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - personal_info_address
        - transferable
        - initial_offering_status
        - created
      type: string
      description: An enumeration.
    NotSupportedErrorMetainfo:
      title: NotSupportedErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 10
        message:
          title: Message
          type: string
          example: Not Supported
    NotSupportedErrorResponse:
      title: NotSupportedErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/NotSupportedErrorMetainfo'
        details:
          title: Details
          type: object
    Notification:
      title: Notification
      required:
        - notification_type
        - id
        - priority
        - block_timestamp
        - is_read
        - is_flagged
        - is_deleted
        - metainfo
        - account_address
        - sort_id
        - created
      type: object
      properties:
        notification_type:
          allOf:
            - $ref: '#/components/schemas/NotificationType'
          example: NewOrder
        id:
          title: Id
          type: string
          example: '0x00000373ca8600000000000000'
        priority:
          title: Priority
          type: integer
        block_timestamp:
          title: Block Timestamp
          type: string
          description: block timestamp
        is_read:
          title: Is Read
          type: boolean
        is_flagged:
          title: Is Flagged
          type: boolean
        is_deleted:
          title: Is Deleted
          type: boolean
        deleted_at:
          title: Deleted At
          type: string
          description: datetime of deletion
        args:
          title: Args
        metainfo:
          title: Metainfo
          anyOf:
            - $ref: '#/components/schemas/NotificationMetainfo'
            - type: object
        account_address:
          title: Account Address
          type: string
        sort_id:
          title: Sort Id
          type: integer
        created:
          title: Created
          type: string
          description: datetime of create
    NotificationMetainfo:
      title: NotificationMetainfo
      required:
        - company_name
        - token_address
        - token_name
        - exchange_address
        - token_type
      type: object
      properties:
        company_name:
          title: Company Name
          type: string
        token_address:
          title: Token Address
          type: string
        token_name:
          title: Token Name
          type: string
        exchange_address:
          title: Exchange Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
    NotificationReadRequest:
      title: NotificationReadRequest
      required:
        - address
        - is_read
      type: object
      properties:
        address:
          title: Address
          type: string
        is_read:
          title: Is Read
          type: boolean
    NotificationType:
      title: NotificationType
      enum:
        - NewOrder
        - NewOrderCounterpart
        - CancelOrder
        - CancelOrderCounterpart
        - ForceCancelOrder
        - BuyAgreement
        - BuySettlementOK
        - BuySettlementNG
        - SellAgreement
        - SellSettlementOK
        - SellSettlementNG
        - Transfer
        - ApplyForTransfer
        - ApproveTransfer
        - CancelTransfer
      type: string
      description: An enumeration.
    NotificationUpdateResponse:
      title: NotificationUpdateResponse
      required:
        - notification_type
        - id
        - priority
        - block_timestamp
        - is_read
        - is_flagged
        - is_deleted
        - metainfo
        - account_address
      type: object
      properties:
        notification_type:
          allOf:
            - $ref: '#/components/schemas/NotificationType'
          example: NewOrder
        id:
          title: Id
          type: string
          example: '0x00000373ca8600000000000000'
        priority:
          title: Priority
          type: integer
        block_timestamp:
          title: Block Timestamp
          type: string
          description: block timestamp
        is_read:
          title: Is Read
          type: boolean
        is_flagged:
          title: Is Flagged
          type: boolean
        is_deleted:
          title: Is Deleted
          type: boolean
        deleted_at:
          title: Deleted At
          type: string
          description: datetime of deletion
        args:
          title: Args
        metainfo:
          title: Metainfo
          anyOf:
            - $ref: '#/components/schemas/NotificationMetainfo'
            - type: object
        account_address:
          title: Account Address
          type: string
    NotificationsCountResponse:
      title: NotificationsCountResponse
      required:
        - unread_counts
      type: object
      properties:
        unread_counts:
          title: Unread Counts
          type: integer
    NotificationsResponse:
      title: NotificationsResponse
      required:
        - result_set
        - notifications
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        notifications:
          title: Notifications
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    NotificationsSortItem:
      title: NotificationsSortItem
      enum:
        - notification_type
        - priority
        - block_timestamp
        - created
      type: string
      description: An enumeration.
    Order:
      title: Order
      required:
        - order_id
        - counterpart_address
        - amount
        - price
        - is_buy
        - canceled
        - order_timestamp
      type: object
      properties:
        order_id:
          title: Order Id
          type: integer
        counterpart_address:
          title: Counterpart Address
          type: string
        amount:
          title: Amount
          type: integer
        price:
          title: Price
          type: integer
        is_buy:
          title: Is Buy
          type: boolean
        canceled:
          title: Canceled
          type: boolean
        order_timestamp:
          title: Order Timestamp
          type: string
    OrderBookItem:
      title: OrderBookItem
      required:
        - exchange_address
        - order_id
        - price
        - amount
        - account_address
      type: object
      properties:
        exchange_address:
          title: Exchange Address
          type: string
          description: Exchange contract address
        order_id:
          title: Order Id
          type: integer
          description: Order id
        price:
          title: Price
          type: integer
          description: Order price
        amount:
          title: Amount
          type: integer
          description: Order volume
        account_address:
          title: Account Address
          type: string
          description: An orderrer of each order book
    OrderSet:
      title: OrderSet
      required:
        - token
        - order
        - sort_id
      type: object
      properties:
        token:
          title: Token
          anyOf:
            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
            - $ref: '#/components/schemas/app__model__schema__dex_order_list__TokenAddress'
        order:
          $ref: '#/components/schemas/Order'
        sort_id:
          title: Sort Id
          type: integer
    OrderType:
      title: OrderType
      enum:
        - buy
        - sell
      type: string
      description: An enumeration.
    RegisterAdminTokenRequest:
      title: RegisterAdminTokenRequest
      required:
        - contract_address
        - is_public
      type: object
      properties:
        contract_address:
          title: Contract Address
          type: string
          description: Token Address
        is_public:
          title: Is Public
          type: boolean
          description: Public and private listings
        max_holding_quantity:
          title: Max Holding Quantity
          minimum: 0
          type: integer
          description: Maximum holding quantity limit
        max_sell_amount:
          title: Max Sell Amount
          minimum: 0
          type: integer
          description: Maximum sell amount limit
    RequestBlockRangeLimitExceededErrorMetainfo:
      title: RequestBlockRangeLimitExceededErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 31
        message:
          title: Message
          type: string
          example: Request Block Range Limit Exceeded
    RequestBlockRangeLimitExceededErrorResponse:
      title: RequestBlockRangeLimitExceededErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorMetainfo'
        details:
          title: Details
          type: object
    RequestValidationErrorDict:
      title: RequestValidationErrorDict
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Loc
          type: array
          items:
            type: string
          example:
            - body
            - contract_address
        msg:
          title: Msg
          type: string
          example: field required
        type:
          title: Type
          type: string
          example: value_error.missing
    RequestValidationErrorInfo:
      title: RequestValidationErrorInfo
      required:
        - code
        - message
        - description
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 88
        message:
          title: Message
          type: string
          example: Invalid Parameter
        description:
          title: Description
          type: array
          items:
            $ref: '#/components/schemas/RequestValidationErrorDict'
    RequestValidationErrorResponse:
      title: RequestValidationErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/RequestValidationErrorInfo'
        details:
          title: Details
          type: object
    ResponseLimitExceededErrorMetainfo:
      title: ResponseLimitExceededErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 30
        message:
          title: Message
          type: string
          example: Response Limit Exceeded
    ResponseLimitExceededErrorResponse:
      title: ResponseLimitExceededErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseLimitExceededErrorMetainfo'
        details:
          title: Details
          type: object
    ResultSet:
      title: ResultSet
      required:
        - offset
        - limit
      type: object
      properties:
        count:
          title: Count
          type: integer
        offset:
          title: Offset
          type: integer
          description: start position
        limit:
          title: Limit
          type: integer
          description: number of set
        total:
          title: Total
          type: integer
      description: result set for pagination
    RetrieveAdminTokenResponse:
      title: RetrieveAdminTokenResponse
      required:
        - id
        - token_address
        - is_public
        - owner_address
        - created
      type: object
      properties:
        id:
          title: Id
          type: integer
        token_address:
          title: Token Address
          type: string
        is_public:
          title: Is Public
          type: boolean
        max_holding_quantity:
          title: Max Holding Quantity
          type: integer
        max_sell_amount:
          title: Max Sell Amount
          type: integer
        owner_address:
          title: Owner Address
          type: string
        created:
          title: Created
          type: string
          description: Create Datetime (JST)
    RetrieveAgreementDetailResponse:
      title: RetrieveAgreementDetailResponse
      required:
        - token_address
        - counterpart
        - buyer_address
        - seller_address
        - amount
        - price
        - canceled
        - paid
        - expiry
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
          description: token address
        counterpart:
          title: Counterpart
          type: string
          description: taker account address
        buyer_address:
          title: Buyer Address
          type: string
          description: buyer account address
        seller_address:
          title: Seller Address
          type: string
          description: seller account address
        amount:
          title: Amount
          type: integer
          description: agreement token amount
        price:
          title: Price
          type: integer
          description: agreement price
        canceled:
          title: Canceled
          type: boolean
          description: agreement canceled status
        paid:
          title: Paid
          type: boolean
          description: agreement payment status
        expiry:
          title: Expiry
          type: string
          description: expiry (unixtime)
    RetrieveCompanyInfoResponse:
      title: RetrieveCompanyInfoResponse
      required:
        - address
        - corporate_name
        - rsa_publickey
        - homepage
      type: object
      properties:
        address:
          title: Address
          type: string
        corporate_name:
          title: Corporate Name
          type: string
        rsa_publickey:
          title: Rsa Publickey
          type: string
        homepage:
          title: Homepage
          type: string
    RetrieveCouponTokenResponse:
      title: RetrieveCouponTokenResponse
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - details
        - return_details
        - expiration_date
        - memo
        - transferable
        - initial_offering_status
        - image_url
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_template:
          title: Token Template
          type: string
          example: IbetCoupon
        owner_address:
          title: Owner Address
          type: string
          description: issuer address
        company_name:
          title: Company Name
          type: string
        rsa_publickey:
          title: Rsa Publickey
          type: string
        name:
          title: Name
          type: string
          description: token name
        symbol:
          title: Symbol
          type: string
          description: token symbol
        total_supply:
          title: Total Supply
          type: integer
        tradable_exchange:
          title: Tradable Exchange
          type: string
        contact_information:
          title: Contact Information
          type: string
        privacy_policy:
          title: Privacy Policy
          type: string
        status:
          title: Status
          type: boolean
        max_holding_quantity:
          title: Max Holding Quantity
          type: integer
        max_sell_amount:
          title: Max Sell Amount
          type: integer
        details:
          title: Details
          type: string
        return_details:
          title: Return Details
          type: string
        expiration_date:
          title: Expiration Date
          type: string
        memo:
          title: Memo
          type: string
        transferable:
          title: Transferable
          type: boolean
        initial_offering_status:
          title: Initial Offering Status
          type: boolean
        image_url:
          title: Image Url
          type: array
          items:
            $ref: '#/components/schemas/CouponImage'
    RetrieveMembershipTokenResponse:
      title: RetrieveMembershipTokenResponse
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - details
        - return_details
        - expiration_date
        - memo
        - transferable
        - initial_offering_status
        - image_url
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_template:
          title: Token Template
          type: string
          example: IbetMembership
        owner_address:
          title: Owner Address
          type: string
          description: issuer address
        company_name:
          title: Company Name
          type: string
        rsa_publickey:
          title: Rsa Publickey
          type: string
        name:
          title: Name
          type: string
          description: token name
        symbol:
          title: Symbol
          type: string
          description: token symbol
        total_supply:
          title: Total Supply
          type: integer
        tradable_exchange:
          title: Tradable Exchange
          type: string
        contact_information:
          title: Contact Information
          type: string
        privacy_policy:
          title: Privacy Policy
          type: string
        status:
          title: Status
          type: boolean
        max_holding_quantity:
          title: Max Holding Quantity
          type: integer
        max_sell_amount:
          title: Max Sell Amount
          type: integer
        details:
          title: Details
          type: string
        return_details:
          title: Return Details
          type: string
        expiration_date:
          title: Expiration Date
          type: string
        memo:
          title: Memo
          type: string
        transferable:
          title: Transferable
          type: boolean
        initial_offering_status:
          title: Initial Offering Status
          type: boolean
        image_url:
          title: Image Url
          type: array
          items:
            $ref: '#/components/schemas/MembershipImage'
    RetrievePaymentAccountRegistrationStatusResponse:
      title: RetrievePaymentAccountRegistrationStatusResponse
      required:
        - account_address
        - agent_address
        - approval_status
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        agent_address:
          title: Agent Address
          type: string
        approval_status:
          allOf:
            - $ref: '#/components/schemas/ApprovalStatus'
          description: approval status (NONE(0)/NG(1)/OK(2)/WARN(3)/BAN(4))
    RetrievePersonalInfoRegistrationStatusResponse:
      title: RetrievePersonalInfoRegistrationStatusResponse
      required:
        - account_address
        - owner_address
        - registered
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        owner_address:
          title: Owner Address
          type: string
          description: link address
        registered:
          title: Registered
          type: boolean
    RetrieveShareTokenResponse:
      title: RetrieveShareTokenResponse
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - personal_info_address
        - transferable
        - is_offering
        - transfer_approval_required
        - issue_price
        - cancellation_date
        - memo
        - principal_value
        - is_canceled
        - dividend_information
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_template:
          title: Token Template
          type: string
          example: IbetShare
        owner_address:
          title: Owner Address
          type: string
          description: issuer address
        company_name:
          title: Company Name
          type: string
        rsa_publickey:
          title: Rsa Publickey
          type: string
        name:
          title: Name
          type: string
          description: token name
        symbol:
          title: Symbol
          type: string
          description: token symbol
        total_supply:
          title: Total Supply
          type: integer
        tradable_exchange:
          title: Tradable Exchange
          type: string
        contact_information:
          title: Contact Information
          type: string
        privacy_policy:
          title: Privacy Policy
          type: string
        status:
          title: Status
          type: boolean
        max_holding_quantity:
          title: Max Holding Quantity
          type: integer
        max_sell_amount:
          title: Max Sell Amount
          type: integer
        personal_info_address:
          title: Personal Info Address
          type: string
        transferable:
          title: Transferable
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        issue_price:
          title: Issue Price
          type: integer
        cancellation_date:
          title: Cancellation Date
          type: string
        memo:
          title: Memo
          type: string
        principal_value:
          title: Principal Value
          type: integer
        is_canceled:
          title: Is Canceled
          type: boolean
        dividend_information:
          $ref: '#/components/schemas/DividendInformation'
    RetrieveStraightBondTokenResponse:
      title: RetrieveStraightBondTokenResponse
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - personal_info_address
        - transferable
        - is_offering
        - transfer_approval_required
        - face_value
        - interest_rate
        - redemption_date
        - redemption_value
        - return_date
        - return_amount
        - purpose
        - memo
        - is_redeemed
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_template:
          title: Token Template
          type: string
          example: IbetStraightBond
        owner_address:
          title: Owner Address
          type: string
          description: issuer address
        company_name:
          title: Company Name
          type: string
        rsa_publickey:
          title: Rsa Publickey
          type: string
        name:
          title: Name
          type: string
          description: token name
        symbol:
          title: Symbol
          type: string
          description: token symbol
        total_supply:
          title: Total Supply
          type: integer
        tradable_exchange:
          title: Tradable Exchange
          type: string
        contact_information:
          title: Contact Information
          type: string
        privacy_policy:
          title: Privacy Policy
          type: string
        status:
          title: Status
          type: boolean
        max_holding_quantity:
          title: Max Holding Quantity
          type: integer
        max_sell_amount:
          title: Max Sell Amount
          type: integer
        personal_info_address:
          title: Personal Info Address
          type: string
        transferable:
          title: Transferable
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        face_value:
          title: Face Value
          type: integer
        interest_rate:
          title: Interest Rate
          type: number
        interest_payment_date1:
          title: Interest Payment Date1
          type: string
        interest_payment_date2:
          title: Interest Payment Date2
          type: string
        interest_payment_date3:
          title: Interest Payment Date3
          type: string
        interest_payment_date4:
          title: Interest Payment Date4
          type: string
        interest_payment_date5:
          title: Interest Payment Date5
          type: string
        interest_payment_date6:
          title: Interest Payment Date6
          type: string
        interest_payment_date7:
          title: Interest Payment Date7
          type: string
        interest_payment_date8:
          title: Interest Payment Date8
          type: string
        interest_payment_date9:
          title: Interest Payment Date9
          type: string
        interest_payment_date10:
          title: Interest Payment Date10
          type: string
        interest_payment_date11:
          title: Interest Payment Date11
          type: string
        interest_payment_date12:
          title: Interest Payment Date12
          type: string
        redemption_date:
          title: Redemption Date
          type: string
        redemption_value:
          title: Redemption Value
          type: integer
        return_date:
          title: Return Date
          type: string
        return_amount:
          title: Return Amount
          type: string
        purpose:
          title: Purpose
          type: string
        memo:
          title: Memo
          type: string
        is_redeemed:
          title: Is Redeemed
          type: boolean
    SecurityTokenPositionWithAddress:
      title: SecurityTokenPositionWithAddress
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token_address
      type: object
      properties:
        balance:
          title: Balance
          type: integer
        pending_transfer:
          title: Pending Transfer
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        locked:
          title: Locked
          type: integer
          description: set when enable_index=true
        token_address:
          title: Token Address
          type: string
          description: set when include_token_details=true
    SecurityTokenPositionWithDetail:
      title: SecurityTokenPositionWithDetail
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token
      type: object
      properties:
        balance:
          title: Balance
          type: integer
        pending_transfer:
          title: Pending Transfer
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        locked:
          title: Locked
          type: integer
          description: set when enable_index=true
        token:
          title: Token
          anyOf:
            - {}
            - $ref: '#/components/schemas/app__model__schema__position__TokenAddress'
          description: set when include_token_details=false or null
    SendRawTransactionNoWaitResponse:
      title: SendRawTransactionNoWaitResponse
      required:
        - id
        - status
      type: object
      properties:
        id:
          title: Id
          type: integer
          description: transaction send order
          example: 1
        status:
          title: Status
          type: integer
          description: execution failure:0, execution success:1
          example: 1
        transaction_hash:
          title: Transaction Hash
          type: string
          description: transaction hash
    SendRawTransactionRequest:
      title: SendRawTransactionRequest
      required:
        - raw_tx_hex_list
      type: object
      properties:
        raw_tx_hex_list:
          title: Raw Tx Hex List
          minItems: 1
          type: array
          items:
            type: string
          description: Signed transaction list
    SendRawTransactionResponse:
      title: SendRawTransactionResponse
      required:
        - id
        - status
      type: object
      properties:
        id:
          title: Id
          type: integer
          description: transaction send order
          example: 1
        status:
          title: Status
          type: integer
          description: execution failure:0, execution success:1, execution success(pending transaction):2
          example: 1
        transaction_hash:
          title: Transaction Hash
          type: string
          description: transaction hash
        error_code:
          title: Error Code
          type: integer
          description: error code thrown from contract
          example: 240202
        error_msg:
          title: Error Msg
          type: string
          description: error msg
          example: Message sender is not token owner.
    SendRawTransactionsNoWaitResponse:
      title: SendRawTransactionsNoWaitResponse
      type: array
      items:
        $ref: '#/components/schemas/SendRawTransactionNoWaitResponse'
    SendRawTransactionsResponse:
      title: SendRawTransactionsResponse
      type: array
      items:
        $ref: '#/components/schemas/SendRawTransactionResponse'
    ShareTokensSortItem:
      title: ShareTokensSortItem
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - personal_info_address
        - transferable
        - is_offering
        - transfer_approval_required
        - is_canceled
        - created
      type: string
      description: An enumeration.
    SortOrder:
      title: SortOrder
      enum:
        - 0
        - 1
      type: integer
      description: An enumeration.
    StraightBondTokensSortItem:
      title: StraightBondTokensSortItem
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - personal_info_address
        - transferable
        - is_offering
        - transfer_approval_required
        - is_redeemed
        - created
      type: string
      description: An enumeration.
    Success200MetaModel:
      title: Success200MetaModel
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 200
        message:
          title: Message
          type: string
          example: OK
    SuccessResponse:
      title: SuccessResponse
      required:
        - meta
      type: object
      properties:
        meta:
          title: Meta
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          example:
            code: 200
            message: OK
        data:
          title: Data
          type: object
          default: {}
    SuspendedTokenErrorMetainfo:
      title: SuspendedTokenErrorMetainfo
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 20
        message:
          title: Message
          type: string
          example: Suspended Token
    SuspendedTokenErrorResponse:
      title: SuspendedTokenErrorResponse
      required:
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/SuspendedTokenErrorMetainfo'
        details:
          title: Details
          type: object
    Tick:
      title: Tick
      required:
        - block_timestamp
        - buy_address
        - sell_address
        - order_id
        - agreement_id
        - price
        - amount
      type: object
      properties:
        block_timestamp:
          title: Block Timestamp
          type: string
          description: block timestamp (UTC)
        buy_address:
          title: Buy Address
          type: string
        sell_address:
          title: Sell Address
          type: string
        order_id:
          title: Order Id
          type: integer
        agreement_id:
          title: Agreement Id
          type: integer
        price:
          title: Price
          type: integer
        amount:
          title: Amount
          type: integer
    Ticks:
      title: Ticks
      required:
        - token_address
        - tick
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        tick:
          title: Tick
          type: array
          items:
            $ref: '#/components/schemas/Tick'
    TokenHolder:
      title: TokenHolder
      required:
        - token_address
        - account_address
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        account_address:
          title: Account Address
          type: string
        amount:
          title: Amount
          type: integer
          default: 0
        pending_transfer:
          title: Pending Transfer
          type: integer
          default: 0
        exchange_balance:
          title: Exchange Balance
          type: integer
          default: 0
        exchange_commitment:
          title: Exchange Commitment
          type: integer
          default: 0
        locked:
          title: Locked
          type: integer
          default: 0
    TokenHoldersCollectionBatchStatus:
      title: TokenHoldersCollectionBatchStatus
      enum:
        - pending
        - done
        - failed
      type: string
      description: An enumeration.
    TokenHoldersCollectionHolder:
      title: TokenHoldersCollectionHolder
      required:
        - account_address
        - hold_balance
        - currently_locked_balance
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
          description: Account address of token holder.
        hold_balance:
          title: Hold Balance
          type: integer
          description: Amount of balance.This includes balance/pending_transfer/exchange_balance/exchange_commitment/locked.
        currently_locked_balance:
          title: Currently Locked Balance
          type: integer
          description: Amount of locked in current.
    TokenHoldersCollectionResponse:
      title: TokenHoldersCollectionResponse
      required:
        - status
        - holders
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TokenHoldersCollectionBatchStatus'
        holders:
          title: Holders
          type: array
          items:
            $ref: '#/components/schemas/TokenHoldersCollectionHolder'
          description: Token holder list.This list is excluding token owner address.
    TokenHoldersCountResponse:
      title: TokenHoldersCountResponse
      required:
        - count
      type: object
      properties:
        count:
          title: Count
          type: integer
    TokenHoldersResponse:
      title: TokenHoldersResponse
      type: array
      items:
        $ref: '#/components/schemas/TokenHolder'
    TokenStatusResponse:
      title: TokenStatusResponse
      required:
        - token_template
        - status
        - transferable
      type: object
      properties:
        token_template:
          title: Token Template
          type: string
          example: IbetStraightBond
        status:
          title: Status
          type: boolean
        transferable:
          title: Transferable
          type: boolean
    TokenType:
      title: TokenType
      enum:
        - IbetStraightBond
        - IbetShare
        - IbetMembership
        - IbetCoupon
      type: string
      description: An enumeration.
    TransactionCountResponse:
      title: TransactionCountResponse
      required:
        - nonce
        - gasprice
        - chainid
      type: object
      properties:
        nonce:
          title: Nonce
          type: integer
          example: 34
        gasprice:
          title: Gasprice
          type: integer
          example: 0
        chainid:
          title: Chainid
          type: string
          example: '2017'
    TransferApprovalHistoriesResponse:
      title: TransferApprovalHistoriesResponse
      required:
        - result_set
        - transfer_approval_history
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_approval_history:
          title: Transfer Approval History
          type: array
          items:
            $ref: '#/components/schemas/TransferApprovalHistory'
          description: Transfer approval history
    TransferApprovalHistory:
      title: TransferApprovalHistory
      required:
        - token_address
        - application_id
        - from_address
        - to_address
        - value
        - application_datetime
        - application_blocktimestamp
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
          description: Token address
        exchange_address:
          title: Exchange Address
          type: string
          description: Exchange address
        application_id:
          title: Application Id
          type: integer
          description: Application id
        from_address:
          title: From Address
          type: string
          description: Account address of transfer source
        to_address:
          title: To Address
          type: string
          description: Account address of transfer destination
        value:
          title: Value
          type: integer
          description: Transfer quantity
        application_datetime:
          title: Application Datetime
          type: string
          description: application datetime (JST)
        application_blocktimestamp:
          title: Application Blocktimestamp
          type: string
          description: application blocktimestamp (JST)
        approval_datetime:
          title: Approval Datetime
          type: string
          description: approval datetime (JST)
        approval_blocktimestamp:
          title: Approval Blocktimestamp
          type: string
          description: approval blocktimestamp (JST)
        cancelled:
          title: Cancelled
          type: boolean
          description: Cancellation status
        transfer_approved:
          title: Transfer Approved
          type: boolean
          description: transfer approval status
    TransferHistoriesResponse:
      title: TransferHistoriesResponse
      required:
        - result_set
        - transfer_history
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_history:
          title: Transfer History
          type: array
          items:
            $ref: '#/components/schemas/TransferHistory'
          description: Transfer history
    TransferHistory:
      title: TransferHistory
      required:
        - transaction_hash
        - token_address
        - from_address
        - to_address
        - value
        - created
      type: object
      properties:
        transaction_hash:
          title: Transaction Hash
          type: string
          description: Transaction hash
        token_address:
          title: Token Address
          type: string
          description: Token address
        from_address:
          title: From Address
          type: string
          description: Account address of transfer source
        to_address:
          title: To Address
          type: string
          description: Account address of transfer destination
        value:
          title: Value
          type: integer
          description: Transfer quantity
        created:
          title: Created
          type: string
          description: block_timestamp when Transfer log was emitted (JST)
    TxData:
      title: TxData
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
      type: object
      properties:
        hash:
          title: Hash
          type: string
          description: Transaction hash
        block_hash:
          title: Block Hash
          type: string
        block_number:
          title: Block Number
          minimum: 0
          type: integer
        transaction_index:
          title: Transaction Index
          minimum: 0
          type: integer
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
    TxDataDetail:
      title: TxDataDetail
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
        - gas
        - gas_price
        - value
        - nonce
      type: object
      properties:
        hash:
          title: Hash
          type: string
          description: Transaction hash
        block_hash:
          title: Block Hash
          type: string
        block_number:
          title: Block Number
          minimum: 0
          type: integer
        transaction_index:
          title: Transaction Index
          minimum: 0
          type: integer
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        contract_name:
          title: Contract Name
          type: string
        contract_function:
          title: Contract Function
          type: string
        contract_parameters:
          title: Contract Parameters
          type: object
        gas:
          title: Gas
          minimum: 0
          type: integer
        gas_price:
          title: Gas Price
          minimum: 0
          type: integer
        value:
          title: Value
          minimum: 0
          type: integer
        nonce:
          title: Nonce
          minimum: 0
          type: integer
    TxDataListResponse:
      title: TxDataListResponse
      required:
        - result_set
        - tx_data
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tx_data:
          title: Tx Data
          type: array
          items:
            $ref: '#/components/schemas/TxData'
    TxDataResponse:
      $ref: '#/components/schemas/TxDataDetail'
      title: TxDataResponse
    UpdateAdminTokenRequest:
      title: UpdateAdminTokenRequest
      type: object
      properties:
        is_public:
          title: Is Public
          type: boolean
        max_holding_quantity:
          title: Max Holding Quantity
          minimum: 0
          type: integer
        max_sell_amount:
          title: Max Sell Amount
          minimum: 0
          type: integer
        owner_address:
          title: Owner Address
          type: string
    UpdateNotificationRequest:
      title: UpdateNotificationRequest
      type: object
      properties:
        is_read:
          title: Is Read
          type: boolean
          description: Read update
        is_flagged:
          title: Is Flagged
          type: boolean
          description: Set flag
        is_deleted:
          title: Is Deleted
          type: boolean
          description: Logical deletion
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    WaitForTransactionReceiptResponse:
      title: WaitForTransactionReceiptResponse
      required:
        - status
      type: object
      properties:
        status:
          title: Status
          type: integer
          description: transaction revert:0, transaction success:1
          example: 1
        error_code:
          title: Error Code
          type: integer
          description: error code thrown from contract
          example: 240202
        error_msg:
          title: Error Msg
          type: string
          description: error msg
          example: Message sender is not token owner.
    app__model__schema__dex_order_list__TokenAddress:
      title: TokenAddress
      required:
        - token_address
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
    app__model__schema__position__TokenAddress:
      title: TokenAddress
      required:
        - token_address
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
tags:
  - name: root
    description: ''
  - name: admin
    description: System administration
  - name: node_info
    description: Information about blockchain and contracts
  - name: abi
    description: Contract ABIs
  - name: transaction
    description: Blockchain transactions
  - name: company_info
    description: Company(token issuer) information
  - name: token_info
    description: Detailed information for listed tokens
  - name: user_info
    description: User information
  - name: user_position
    description: User's token balance
  - name: user_notification
    description: Notifications for users
  - name: contract_log
    description: Contract event logs
  - name: dex
    description: Trade related functions on IbetExchange (Only for utility tokens)
  - name: messaging
    description: Messaging functions with external systems
