openapi: 3.1.0
info:
  title: ibet Wallet API
  description: RPC services that provides utility tools for building a wallet system
    on ibet network
  version: 24.12.0
paths:
  /:
    get:
      tags:
        - root
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
  /Admin/Tokens:
    get:
      tags:
        - admin
      summary: List All Listed Tokens
      description: Returns a list of registered token.
      operationId: TokensGET
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllAdminTokensResponse_'
    post:
      tags:
        - admin
      summary: List a Token
      description: Registers given token to listing.
      operationId: TokensPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAdminTokenRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenspost
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConflictErrorResponse'
  /Admin/Tokens/Type:
    get:
      tags:
        - admin
      summary: Available status by token type
      description: Returns available token type.
      operationId: TokenType
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GetAdminTokenTypeResponse_'
  /Admin/Tokens/{token_address}:
    get:
      tags:
        - admin
      summary: Retrieve a Listed Token
      description: Returns a listed token information.
      operationId: TokenGET
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token Address
            title: Token Address
          description: Token Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveAdminTokenResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
    post:
      tags:
        - admin
      summary: Update a Listed Token
      description: |-
        取扱トークン情報更新（個別）

        指定したトークンの取扱情報を更新します。
      operationId: TokenPOST
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token Address
            title: Token Address
          description: Token Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdminTokenRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenpost
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
    delete:
      tags:
        - admin
      summary: Delete a Listed Token
      description: Deletes given token from listing.
      operationId: TokenDELETE
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token Address
            title: Token Address
          description: Token Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorResponse'
          description: Internal Server Error
  /NodeInfo:
    get:
      tags:
        - node_info
      summary: Blockchain node information
      description: Returns node information.
      operationId: NodeInfo
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GetNodeInfoResponse_'
  /NodeInfo/BlockSyncStatus:
    get:
      tags:
        - node_info
      summary: Block synchronization status of the connected blockchain node
      description: Returns block sync status of node.
      operationId: NodeInfoBlockSyncStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GetBlockSyncStatusResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableResponse'
  /NodeInfo/BlockData:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] List block data'
      description: |-
        Returns a list of block data within the specified block number range.
        The maximum number of search results is 1000.
      operationId: ListBlockData
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: from_block_number
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            title: From Block Number
        - name: to_block_number
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            title: To Block Number
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_BlockDataListResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                  - $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
                title: Response 400 Listblockdata
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /NodeInfo/BlockData/{block_number}:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] Retrieve block data'
      description: Returns block data in the specified block number.
      operationId: GetBlockData
      parameters:
        - name: block_number
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            description: Block number
            title: Block Number
          description: Block number
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_BlockDataResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getblockdata
          description: Not Found
  /NodeInfo/TxData:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] List tx data'
      description: |-
        Returns a list of transactions by various search parameters.
        The maximum number of search results is 10000.
      operationId: ListTxData
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: block_number
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: block number
            title: Block Number
          description: block number
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tx from
            title: From Address
          description: tx from
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tx to
            title: To Address
          description: tx to
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TxDataListResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                  - $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
                title: Response 400 Listtxdata
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /NodeInfo/TxData/{hash}:
    get:
      tags:
        - node_info
      summary: '[ibet Blockchain Explorer] Retrieve transaction data'
      description: Searching for the transaction by transaction hash
      operationId: GetTxData
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
            description: Transaction hash
            title: Hash
          description: Transaction hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TxDataResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Gettxdata
          description: Not Found
  /ABI/StraightBond:
    get:
      tags:
        - abi
      summary: StraightBond ABI
      description: Returns ABI of IbetStraightBond.
      operationId: StraightBondABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /ABI/Share:
    get:
      tags:
        - abi
      summary: Share ABI
      description: Returns ABI of IbetShare.
      operationId: ShareABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /ABI/Membership:
    get:
      tags:
        - abi
      summary: Membership ABI
      description: Returns ABI of IbetMembership.
      operationId: MembershipABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /ABI/Coupon:
    get:
      tags:
        - abi
      summary: Coupon ABI
      description: Returns ABI of IbetCoupon.
      operationId: CouponABI
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
  /Companies:
    get:
      tags:
        - company_info
      summary: Issuer Information List
      description: Returns a list of issuer information.
      operationId: Companies
      parameters:
        - name: include_private_listing
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include private listing token issuers
            default: false
            title: Include Private Listing
          description: include private listing token issuers
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCompanyInfoResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /Companies/{eth_address}:
    get:
      tags:
        - company_info
      summary: Issuer Information
      description: Returns given issuer information.
      operationId: Company
      parameters:
        - name: eth_address
          in: path
          required: true
          schema:
            type: string
            description: Issuer address
            title: Eth Address
          description: Issuer address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveCompanyInfoResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Company
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Companies/{eth_address}/Tokens:
    get:
      tags:
        - company_info
      summary: List of tokens issued by issuer
      description: Returns a list of tokens issued by given issuer.
      operationId: retrieve_company_tokens_Companies__eth_address__Tokens_get
      parameters:
        - name: eth_address
          in: path
          required: true
          schema:
            type: string
            description: Issuer address
            title: Eth Address
          description: Issuer address
        - name: include_private_listing
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include private listing token issuers
            default: false
            title: Include Private Listing
          description: include private listing token issuers
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCompanyTokensResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /User/Tag:
    post:
      tags:
        - user_info
      summary: Tagging account address
      description: Tag any account address
      operationId: TaggingAccountAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggingAccountAddressRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /User/PaymentAccount:
    get:
      tags:
        - user_info
      summary: Retrieve registration status for PersonalInfo contract
      description: Returns payment registration status of given account.
      operationId: RetrievePaymentAccountRegistrationStatus
      parameters:
        - name: account_address
          in: query
          required: true
          schema:
            type: string
            description: Account Address
            title: Account Address
          description: Account Address
        - name: agent_address
          in: query
          required: true
          schema:
            type: string
            description: Agent Address
            title: Agent Address
          description: Agent Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrievePaymentAccountRegistrationStatusResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /User/PersonalInfo:
    get:
      tags:
        - user_info
      summary: Retrieve registration status for PersonalInfo contract
      description: Returns personal information about given address.
      operationId: RetrievePersonalInfoRegistrationStatus
      parameters:
        - name: account_address
          in: query
          required: true
          schema:
            type: string
            description: Account Address
            title: Account Address
          description: Account Address
        - name: owner_address
          in: query
          required: true
          schema:
            type: string
            description: owner(issuer) address
            title: Owner Address
          description: owner(issuer) address
        - name: personal_info_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: PersonalInfo contract address
            title: Personal Info Address
          description: PersonalInfo contract address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrievePersonalInfoRegistrationStatusResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /Eth/RPC:
    post:
      tags:
        - eth_rpc
      summary: Raw JSON-RPC endpoint
      description: Executes ethereum JSON-RPC with given request body.
      operationId: EthereumJsonRpc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonRPCRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_Any_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Ethereumjsonrpc
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableResponse'
  /Eth/TransactionCount/{eth_address}:
    get:
      tags:
        - eth_rpc
      summary: Transaction count for the specified eth_address
      description: Returns nonce counts of given ethereum address.
      operationId: TransactionCount
      parameters:
        - name: eth_address
          in: path
          required: true
          schema:
            type: string
            title: Eth Address
        - name: block_identifier
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/BlockIdentifier'
              - type: 'null'
            title: Block Identifier
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransactionCountResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Transactioncount
          description: Bad Request
  /Eth/SendRawTransaction:
    post:
      tags:
        - eth_rpc
      summary: Send signed transaction
      description: Sends raw transaction.
      operationId: SendRawTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRawTransactionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_SendRawTransactionsResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                  - $ref: '#/components/schemas/SuspendedTokenErrorResponse'
                title: Response 400 Sendrawtransaction
  /Eth/SendRawTransactionNoWait:
    post:
      tags:
        - eth_rpc
      summary: Send signed transaction
      description: Sends raw transaction without waiting for transaction receipt.
      operationId: SendRawTransactionNoWait
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRawTransactionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_SendRawTransactionsNoWaitResponse_'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                  - $ref: '#/components/schemas/SuspendedTokenErrorResponse'
                title: Response 400 Sendrawtransactionnowait
  /Eth/WaitForTransactionReceipt:
    get:
      tags:
        - eth_rpc
      summary: Wait for Transaction Receipt
      description: Waits for transaction receipt returned.
      operationId: WaitForTransactionReceipt
      parameters:
        - name: transaction_hash
          in: query
          required: true
          schema:
            type: string
            description: transaction hash
            title: Transaction Hash
          description: transaction hash
        - name: timeout
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 30
                minimum: 1
              - type: 'null'
            description: Timeout value
            default: 5
            title: Timeout
          description: Timeout value
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_WaitForTransactionReceiptResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/StraightBond:
    get:
      tags:
        - token_info
      summary: Token detail list of StraightBond tokens
      description: '[StraightBond]Returns a detail list of tokens.'
      operationId: StraightBondTokens
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Address List
          description: list of token address (**this affects total number**)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: personal_info_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: personal information address
            title: Personal Info Address
          description: personal information address
        - name: require_personal_info_registered
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: whether personal information registration is required
            title: Require Personal Info Registered
          description: whether personal information registration is required
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: is_offering
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Is Offering
          description: offering status
        - name: transfer_approval_required
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transfer approval required status
            title: Transfer Approval Required
          description: transfer approval required status
        - name: is_redeemed
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: redeem status
            title: Is Redeemed
          description: redeem status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/StraightBondTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllStraightBondTokensResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Straightbondtokens
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/StraightBond/Addresses:
    get:
      tags:
        - token_info
      summary: List of StraightBond token address
      description: '[StraightBond]Returns a list of token addresses.'
      operationId: StraightBondTokenAddresses
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: personal_info_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: personal information address
            title: Personal Info Address
          description: personal information address
        - name: require_personal_info_registered
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: whether personal information registration is required
            title: Require Personal Info Registered
          description: whether personal information registration is required
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: is_offering
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Is Offering
          description: offering status
        - name: transfer_approval_required
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transfer approval required status
            title: Transfer Approval Required
          description: transfer approval required status
        - name: is_redeemed
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: redeem status
            title: Is Redeemed
          description: redeem status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/StraightBondTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllStraightBondTokenAddressesResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/StraightBond/{token_address}:
    get:
      tags:
        - token_info
      summary: StraightBond token details
      description: '[StraightBond]Returns the details of the token.'
      operationId: StraightBondTokenDetails
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveStraightBondTokenResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Straightbondtokendetails
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Straightbondtokendetails
          description: Not Found
  /Token/Share:
    get:
      tags:
        - token_info
      summary: Token detail list of Share tokens
      description: '[Share]Returns a detail list of tokens.'
      operationId: ShareTokens
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Address List
          description: list of token address (**this affects total number**)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: personal_info_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: personal information address
            title: Personal Info Address
          description: personal information address
        - name: require_personal_info_registered
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: whether personal information registration is required
            title: Require Personal Info Registered
          description: whether personal information registration is required
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: is_offering
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Is Offering
          description: offering status
        - name: transfer_approval_required
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transfer approval required status
            title: Transfer Approval Required
          description: transfer approval required status
        - name: is_canceled
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: cancellation status
            title: Is Canceled
          description: cancellation status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ShareTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllShareTokensResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Sharetokens
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Share/Addresses:
    get:
      tags:
        - token_info
      summary: List of Share token address
      description: '[Share]Returns a list of token addresses.'
      operationId: ShareTokenAddresses
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: personal_info_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: personal information address
            title: Personal Info Address
          description: personal information address
        - name: require_personal_info_registered
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: whether personal information registration is required
            title: Require Personal Info Registered
          description: whether personal information registration is required
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: is_offering
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Is Offering
          description: offering status
        - name: transfer_approval_required
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transfer approval required status
            title: Transfer Approval Required
          description: transfer approval required status
        - name: is_canceled
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: cancellation status
            title: Is Canceled
          description: cancellation status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ShareTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllShareTokenAddressesResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Share/{token_address}:
    get:
      tags:
        - token_info
      summary: Share token details
      description: '[Share]Returns the details of the token.'
      operationId: ShareTokenDetails
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveShareTokenResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Sharetokendetails
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Membership:
    get:
      tags:
        - token_info
      summary: Token detail list of Membership tokens
      description: '[Membership]Returns a detail list of tokens.'
      operationId: MembershipTokens
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Address List
          description: list of token address (**this affects total number**)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: initial_offering_status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Initial Offering Status
          description: offering status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/MembershipTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllMembershipTokensResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Membershiptokens
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Membership/Addresses:
    get:
      tags:
        - token_info
      summary: List of Membership token address
      description: '[Membership]Returns a list of token addresses.'
      operationId: MembershipTokenAddresses
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: initial_offering_status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Initial Offering Status
          description: offering status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/MembershipTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllMembershipTokenAddressesResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Membership/{token_address}:
    get:
      tags:
        - token_info
      summary: Membership token details
      description: '[Membership]Returns the details of the token.'
      operationId: MembershipTokenDetails
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveMembershipTokenResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Membershiptokendetails
          description: Not Found
  /Token/Coupon:
    get:
      tags:
        - token_info
      summary: Token detail list of Coupon tokens
      description: '[Coupon]Returns a detail list of tokens.'
      operationId: CouponTokens
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Address List
          description: list of token address (**this affects total number**)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: initial_offering_status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Initial Offering Status
          description: offering status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/CouponTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponTokensResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Coupontokens
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Coupon/Addresses:
    get:
      tags:
        - token_info
      summary: List of Coupon token address
      description: '[Coupon]Returns a list of token addresses.'
      operationId: CouponTokenAddresses
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: owner_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: issuer address
            title: Owner Address
          description: issuer address
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token name
            title: Name
          description: token name
        - name: symbol
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: token symbol
            title: Symbol
          description: token symbol
        - name: company_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: company name
            title: Company Name
          description: company name
        - name: tradable_exchange
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tradable exchange
            title: Tradable Exchange
          description: tradable exchange
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: token status
            title: Status
          description: token status
        - name: transferable
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: transferable status
            title: Transferable
          description: transferable status
        - name: initial_offering_status
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: offering status
            title: Initial Offering Status
          description: offering status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/CouponTokensSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponTokenAddressesResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Token/Coupon/{token_address}:
    get:
      tags:
        - token_info
      summary: Coupon token details
      description: '[Coupon]Returns the details of the token.'
      operationId: CouponTokenDetails
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveCouponTokenResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Coupontokendetails
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Coupontokendetails
          description: Not Found
  /Token/{token_address}/Status:
    get:
      tags:
        - token_info
      summary: Token Status
      description: Returns status of given token.
      operationId: TokenStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenStatusResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenstatus
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/Holders:
    get:
      tags:
        - token_info
      summary: Token holders
      description: Returns a list of token holders for a given token.
      operationId: TokenHolders
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: account_tag
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account tag (**this affects total number**)
            title: Account Tag
          description: account tag (**this affects total number**)
        - name: exclude_owner
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: exclude owner
            default: false
            title: Exclude Owner
          description: exclude owner
        - name: amount
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: amount
            title: Amount
          description: amount
        - name: amount_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Amount Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: pending_transfer
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: pending transfer
            title: Pending Transfer
          description: pending transfer
        - name: pending_transfer_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Pending Transfer Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: exchange_balance
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: exchange balance
            title: Exchange Balance
          description: exchange balance
        - name: exchange_balance_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Exchange Balance Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: exchange_commitment
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: exchange commitment
            title: Exchange Commitment
          description: exchange commitment
        - name: exchange_commitment_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Exchange Commitment Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: locked
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: locked
            title: Locked
          description: locked
        - name: locked_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Locked Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenholders
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/Holders/Search:
    post:
      tags:
        - token_info
      summary: Search Token holders
      description: Returns a list of token holders for a given token using detailed
        search query.
      operationId: SearchTokenHolders
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTokenHoldersRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Searchtokenholders
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/Holders/Count:
    get:
      tags:
        - token_info
      summary: Token holders count
      description: Returns count of token holders for a given token.
      operationId: TokenHoldersCount
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: account_tag
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account tag (**this affects total number**)
            title: Account Tag
          description: account tag (**this affects total number**)
        - name: exclude_owner
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: exclude owner
            default: false
            title: Exclude Owner
          description: exclude owner
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersCountResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenholderscount
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/Holders/Collection:
    post:
      tags:
        - token_info
      summary: Execute Batch Getting Token Holders At Specific BlockNumber
      description: Enqueues task of collecting token holders for a given block number.
      operationId: TokenHoldersCollection
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenHoldersCollectionRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_CreateTokenHoldersCollectionResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenholderscollection
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/Holders/Collection/{list_id}:
    get:
      tags:
        - token_info
      summary: Token Holder At Specific BlockNumber
      description: Returns a list of token holders at specific block number.
      operationId: TokenHoldersList
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: Unique id to be assigned to each token holder list.This must
              be Version4 UUID.
            examples:
              - cfd83622-34dc-4efe-a68b-2cc275d3d824
            title: List Id
          description: Unique id to be assigned to each token holder list.This must
            be Version4 UUID.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersCollectionResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Tokenholderslist
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/TransferHistory:
    get:
      tags:
        - token_info
      summary: Token Transfer History
      description: Returns a list of transfer histories for a given token.
      operationId: TransferHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: account_tag
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account tag (**this affects total number**)
            title: Account Tag
          description: account tag (**this affects total number**)
        - name: source_event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TransferSourceEvent'
              - type: 'null'
            description: source event of transfer
            title: Source Event
          description: source event of transfer
        - name: data
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: source event data
            title: Data
          description: source event data
        - name: transaction_hash
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: transaction hash
            title: Transaction Hash
          description: transaction hash
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: from address
            title: From Address
          description: from address
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: to address
            title: To Address
          description: to address
        - name: value
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: value
            title: Value
          description: value
        - name: value_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Value Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: created datetime (From)
            title: Created From
          description: created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: created datetime (To)
            title: Created To
          description: created datetime (To)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransferHistoriesResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Transferhistory
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/TransferHistory/Search:
    post:
      tags:
        - token_info
      summary: Search Token Transfer History
      description: Returns a list of transfer histories for a given token using detailed
        search query.
      operationId: SearchTransferHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTransferHistoryRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransferHistoriesResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Searchtransferhistory
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/TransferApprovalHistory:
    get:
      tags:
        - token_info
      summary: Token Transfer Approval History
      description: Returns a list of transfer approval histories for a given token.
      operationId: TransferApprovalHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: account_tag
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account tag (**this affects total number**)
            title: Account Tag
          description: account tag (**this affects total number**)
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: from address
            title: From Address
          description: from address
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: to address
            title: To Address
          description: to address
        - name: value
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: value
            title: Value
          description: value
        - name: value_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Value Operator
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransferApprovalHistoriesResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Transferapprovalhistory
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/{token_address}/TransferApprovalHistory/Search:
    post:
      tags:
        - token_info
      summary: Search Token Transfer Approval History
      description: Returns a list of transfer approval histories for a given token
        using detailed search query.
      operationId: SearchTransferApprovalHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTransferApprovalHistoryRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TransferApprovalHistoriesResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Searchtransferapprovalhistory
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Token/Lock:
    get:
      tags:
        - token_info
      summary: Token Lock
      description: Returns a list of locked positions.
      operationId: ListAllTokenLock
      parameters:
        - name: token_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Token Address List
          description: list of token address (**this affects total number**)
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: lock address
            title: Lock Address
          description: lock address
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account address
            title: Account Address
          description: account address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: sort_item
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllLockSortItem'
            description: sort item
            default: token_address
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTokenLockResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Listalltokenlock
          description: Bad Request
  /Token/Lock/Count:
    get:
      tags:
        - token_info
      summary: Token Lock Count
      description: Returns count of locked positions.
      operationId: RetrieveTokenLockCount
      parameters:
        - name: token_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address
            title: Token Address List
          description: list of token address
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: lock address
            title: Lock Address
          description: lock address
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account address
            title: Account Address
          description: account address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveTokenLockCountResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Retrievetokenlockcount
          description: Bad Request
  /Position/{account_address}/Share/Lock:
    get:
      tags:
        - user_position
      summary: Share Token Locked Position
      description: '[Share]Returns a list of locked positions.'
      operationId: GetShareTokenLockedPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Token Address List
          description: list of token address (**this affects total number**)
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: lock address
            title: Lock Address
          description: lock address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: sort_item
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllLockedSortItem'
            description: sort item
            default: token_address
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLockedPositionResponse_RetrieveShareTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getsharetokenlockedposition
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Position/{account_address}/Share/Lock/Event:
    get:
      tags:
        - user_position
      summary: Share Token Lock Events
      description: '[Share]Returns a list of lock events.'
      operationId: GetShareTokenLockEvent
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Token Address List
          description: list of token address (**this affects total number**)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: msg_sender
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: message sender
            title: Msg Sender
          description: message sender
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: lock address
            title: Lock Address
          description: lock address
        - name: recipient_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: recipient address
            title: Recipient Address
          description: recipient address
        - name: data
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: data
            title: Data
          description: data
        - name: category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/LockEventCategory'
              - type: 'null'
            description: history item category
            title: Category
          description: history item category
        - name: sort_item
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventSortItem'
            description: sort item
            default: block_timestamp
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLockEventsResponse_RetrieveShareTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /Position/{account_address}/StraightBond/Lock:
    get:
      tags:
        - user_position
      summary: StraightBond Token Locked Position
      description: '[StraightBond]Returns a list of locked positions.'
      operationId: GetStraightBondTokenLockedPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Token Address List
          description: list of token address (**this affects total number**)
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: lock address
            title: Lock Address
          description: lock address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: sort_item
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllLockedSortItem'
            description: sort item
            default: token_address
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLockedPositionResponse_RetrieveStraightBondTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getstraightbondtokenlockedposition
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Position/{account_address}/StraightBond/Lock/Event:
    get:
      tags:
        - user_position
      summary: StraightBond Token Lock Events
      description: '[StraightBond]Returns a list of lock events.'
      operationId: GetStraightBondTokenLockEvent
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: list of token address (**this affects total number**)
            title: Token Address List
          description: list of token address (**this affects total number**)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: msg_sender
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: message sender
            title: Msg Sender
          description: message sender
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: lock address
            title: Lock Address
          description: lock address
        - name: recipient_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: recipient address
            title: Recipient Address
          description: recipient address
        - name: data
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: data
            title: Data
          description: data
        - name: category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/LockEventCategory'
              - type: 'null'
            description: history item category
            title: Category
          description: history item category
        - name: sort_item
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventSortItem'
            description: sort item
            default: block_timestamp
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLockEventsResponse_RetrieveStraightBondTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /Position/{account_address}/Share:
    get:
      tags:
        - user_position
      summary: Share Token Position
      description: '[Share]Returns a list of positions for a given account.'
      operationId: GetShareTokenPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GenericSecurityTokenPositionsResponse_RetrieveShareTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getsharetokenposition
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getsharetokenposition
          description: Not Found
  /Position/{account_address}/StraightBond:
    get:
      tags:
        - user_position
      summary: StraightBond Token Position
      description: '[StraightBond]Returns a list of positions for a given account.'
      operationId: GetStraightBondTokenPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_GenericSecurityTokenPositionsResponse_RetrieveStraightBondTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getstraightbondtokenposition
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getstraightbondtokenposition
          description: Not Found
  /Position/{account_address}/Membership:
    get:
      tags:
        - user_position
      summary: Membership Token Position
      description: '[Membership]Returns a list of positions for a given account.'
      operationId: GetMembershipTokenPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_MembershipPositionsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getmembershiptokenposition
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getmembershiptokenposition
          description: Not Found
  /Position/{account_address}/Coupon:
    get:
      tags:
        - user_position
      summary: Coupon Token Position
      description: '[Coupon]Returns a list of positions for a given account.'
      operationId: GetCouponTokenPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: include_token_details
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: include token details
            default: false
            title: Include Token Details
          description: include token details
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_CouponPositionsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getcoupontokenposition
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getcoupontokenposition
          description: Not Found
  /Position/{account_address}/Share/{token_address}:
    get:
      tags:
        - user_position
      summary: Share Token Position By Token Address
      description: '[Share]Returns a position for a given account and token.'
      operationId: GetShareTokenPositionByAddress
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: token address
            title: Token Address
          description: token address
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_SecurityTokenPositionWithDetail_RetrieveShareTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getsharetokenpositionbyaddress
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getsharetokenpositionbyaddress
          description: Not Found
  /Position/{account_address}/StraightBond/{token_address}:
    get:
      tags:
        - user_position
      summary: StraightBond Token Position By Token Address
      description: '[StraightBond]Returns a position for a given account and token.'
      operationId: GetStraightBondTokenPositionByAddress
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: token address
            title: Token Address
          description: token address
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_SecurityTokenPositionWithDetail_RetrieveStraightBondTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getstraightbondtokenpositionbyaddress
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getstraightbondtokenpositionbyaddress
          description: Not Found
  /Position/{account_address}/Membership/{token_address}:
    get:
      tags:
        - user_position
      summary: Membership Token Position By Token Address
      description: '[Membership]Returns a position for a given account and token.'
      operationId: GetMembershipTokenPositionByAddress
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: token address
            title: Token Address
          description: token address
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_MembershipPositionWithDetail_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getmembershiptokenpositionbyaddress
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getmembershiptokenpositionbyaddress
          description: Not Found
  /Position/{account_address}/Coupon/{token_address}:
    get:
      tags:
        - user_position
      summary: Coupon Token Position By Token Address
      description: '[Coupon]Returns a position for a given account and token.'
      operationId: GetCouponTokenPositionByAddress
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: token address
            title: Token Address
          description: token address
        - name: enable_index
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: enable using indexed position data
            title: Enable Index
          description: enable using indexed position data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_CouponPositionWithDetail_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getcoupontokenpositionbyaddress
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'
                  - $ref: '#/components/schemas/NotSupportedErrorResponse'
                title: Response 404 Getcoupontokenpositionbyaddress
          description: Not Found
  /Position/{account_address}/Coupon/{token_address}/Consumptions:
    get:
      tags:
        - user_position
      summary: List All Coupon Consumptions
      description: '[Coupon]Returns a list of consumption for a given account address.'
      operationId: ListAllCouponConsumptions
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: token_address
            title: Token Address
          description: token_address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponConsumptionsResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /Position/{account_address}:
    get:
      tags:
        - user_position
      summary: Token Position
      description: Returns a list of token positions.
      operationId: GetTokenPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: account address
            title: Account Address
          description: account address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: token_type_list
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: type of token
            title: Token Type List
          description: type of token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_TokenPositionsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Gettokenposition
          description: Bad Request
  /Notifications:
    get:
      tags:
        - user_notification
      summary: Notification List
      description: Returns notifications filtered by given query.
      operationId: GetNotifications
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: start position
            title: Offset
          description: start position
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: number of set
            title: Limit
          description: number of set
        - name: address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account address
            title: Address
          description: account address
        - name: notification_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/NotificationType'
              - type: 'null'
            title: Notification Type
        - name: priority
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 2
                minimum: 0
              - type: 'null'
            title: Priority
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/NotificationsSortItem'
              - type: 'null'
            description: sort item
            default: created
            title: Sort Item
          description: sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'sort order(0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_NotificationsResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /Notifications/Read:
    post:
      tags:
        - user_notification
      summary: Mark all notifications as read
      description: Registers all notifications as read.
      operationId: NotificationsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationReadRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
  /Notifications/Count:
    get:
      tags:
        - user_notification
      summary: Get the number of unread notifications
      description: Returns count of notifications filtered by given query.
      operationId: NotificationsCount
      parameters:
        - name: address
          in: query
          required: true
          schema:
            type: string
            title: Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_NotificationsCountResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
  /Notifications/{notification_id}:
    post:
      tags:
        - user_notification
      summary: Update Notification
      description: Registers given notification as read.
      operationId: PostNotifications
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: string
            description: Notification id
            title: Notification Id
          description: Notification id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_NotificationUpdateResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
    delete:
      tags:
        - user_notification
      summary: Delete Notification
      description: Deletes given notification.
      operationId: DeleteNotification
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: string
            description: Notification id
            title: Notification Id
          description: Notification id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /E2EMessage/EncryptionKey/{account_address}:
    get:
      tags:
        - messaging
      summary: Retrieve message encryption key
      description: Returns encryption key for use in e2e messaging for given account
        address.
      operationId: EncryptionKey
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: Account address (message receiver)
            title: Account Address
          description: Account address (message receiver)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_E2EMessageEncryptionKeyResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Encryptionkey
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Mail:
    post:
      tags:
        - messaging
      summary: Send Email
      description: Sends Email.
      operationId: SendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMailRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Sendemail
  /Chat/Webhook:
    post:
      tags:
        - messaging
      summary: Send chat messages using incoming webhooks
      description: Sends Chat Webhook.
      operationId: SendChatWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendChatWebhookRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Sendchatwebhook
  /Events/E2EMessaging:
    get:
      tags:
        - contract_log
      summary: List all E2EMessaging event logs
      description: Returns a list of E2EMessaging event logs.
      operationId: E2EMessagingEvents
      parameters:
        - name: from_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: from block number
            title: From Block
          description: from block number
        - name: to_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: to block number
            title: To Block
          description: to block number
        - name: event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/E2EMessagingEventType'
              - type: 'null'
            description: events to get
            title: Event
          description: events to get
        - name: argument_filters
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{"sender":
              "0x0000000000000000000000000000000000000000"}```'
            title: Argument Filters
          description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{"sender":
            "0x0000000000000000000000000000000000000000"}```'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 E2Emessagingevents
          description: Bad Request
  /Events/IbetEscrow:
    get:
      tags:
        - contract_log
      summary: List all IbetEscrow event logs
      description: Returns a list of IbetEscrow event logs.
      operationId: IbetEscrowEvents
      parameters:
        - name: from_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: from block number
            title: From Block
          description: from block number
        - name: to_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: to block number
            title: To Block
          description: to block number
        - name: event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IbetEscrowEventType'
              - type: 'null'
            description: events to get
            title: Event
          description: events to get
        - name: argument_filters
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId":
              0    "token": "0x0000000000000000000000000000000000000000"}```'
            title: Argument Filters
          description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId":
            0    "token": "0x0000000000000000000000000000000000000000"}```'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Ibetescrowevents
          description: Bad Request
  /Events/IbetSecurityTokenEscrow:
    get:
      tags:
        - contract_log
      summary: List all IbetSecurityTokenEscrow event logs
      description: Returns a list of IbetSecurityTokenEscrow event logs.
      operationId: IbetSecurityTokenEscrowEvents
      parameters:
        - name: from_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: from block number
            title: From Block
          description: from block number
        - name: to_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: to block number
            title: To Block
          description: to block number
        - name: event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IbetSecurityTokenEscrowEventType'
              - type: 'null'
            description: events to get
            title: Event
          description: events to get
        - name: argument_filters
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId":
              0    "token": "0x0000000000000000000000000000000000000000"}```'
            title: Argument Filters
          description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "escrowId":
            0    "token": "0x0000000000000000000000000000000000000000"}```'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Ibetsecuritytokenescrowevents
          description: Bad Request
  /Events/IbetSecurityTokenDVP:
    get:
      tags:
        - contract_log
      summary: List all IbetSecurityTokenDVP event logs
      description: Returns a list of IbetSecurityTokenDVP event logs.
      operationId: IbetSecurityTokenDVPEvents
      parameters:
        - name: from_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: from block number
            title: From Block
          description: from block number
        - name: to_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: to block number
            title: To Block
          description: to block number
        - name: event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IbetSecurityTokenDVPEventType'
              - type: 'null'
            description: events to get
            title: Event
          description: events to get
        - name: argument_filters
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "deliveryId":
              0    "token": "0x0000000000000000000000000000000000000000"}```'
            title: Argument Filters
          description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "deliveryId":
            0    "token": "0x0000000000000000000000000000000000000000"}```'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Ibetsecuritytokendvpevents
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataNotExistsErrorResponse'
          description: Not Found
  /Events/IbetSecurityTokenInterface/{token_address}:
    get:
      tags:
        - contract_log
      summary: List all IbetSecurityTokenInterface event logs
      description: Returns a list of IbetSecurityTokenInterface event logs.
      operationId: IbetSecurityTokenInterfaceEvents
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: from_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: from block number
            title: From Block
          description: from block number
        - name: to_block
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            description: to block number
            title: To Block
          description: to block number
        - name: event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IbetSecurityTokenInterfaceEventType'
              - type: 'null'
            description: events to get
            title: Event
          description: events to get
        - name: argument_filters
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "from":
              "0x0000000000000000000000000000000000000000"    "to": "0x0000000000000000000000000000000000000000"}```'
            title: Argument Filters
          description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    "from":
            "0x0000000000000000000000000000000000000000"    "to": "0x0000000000000000000000000000000000000000"}```'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Ibetsecuritytokeninterfaceevents
          description: Bad Request
  /DEX/Market/Agreement:
    get:
      tags:
        - dex
      summary: Agreement Details
      description: Returns agreement information of given id.
      operationId: GetAgreement
      parameters:
        - name: order_id
          in: query
          required: true
          schema:
            type: integer
            description: order id
            title: Order Id
          description: order id
        - name: agreement_id
          in: query
          required: true
          schema:
            type: integer
            description: agreement id
            title: Agreement Id
          description: agreement id
        - name: exchange_address
          in: query
          required: true
          schema:
            type: string
            description: exchange_address
            title: Exchange Address
          description: exchange_address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveAgreementDetailResponse_'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Getagreement
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/Market/OrderBook/Membership:
    get:
      tags:
        - dex
      summary: Membership Token Order Book
      description: '[Membership]Returns orderbook of given token.'
      operationId: MembershipOrderBook
      parameters:
        - name: token_address
          in: query
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: exchange_agent_address
          in: query
          required: true
          schema:
            type: string
            description: Settlement agent address on ibet exchange
            title: Exchange Agent Address
          description: Settlement agent address on ibet exchange
        - name: order_type
          in: query
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderType'
            description: Order type to be executed by the Orderer. If "buy" is selected,
              the sell order book will be returned.
            title: Order Type
          description: Order type to be executed by the Orderer. If "buy" is selected,
            the sell order book will be returned.
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Orderer's account address. Orders from the given address
              will not be included in the response.
            title: Account Address
          description: Orderer's account address. Orders from the given address will
            not be included in the response.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderBookItemResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/Market/LastPrice/Membership:
    get:
      tags:
        - dex
      summary: Membership Token Last Price (Bulk Get)
      description: '[Membership]Returns last price of given token.'
      operationId: MembershipLastPrice
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Token address list
            title: Address List
          description: Token address list
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLastPriceResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/Market/Tick/Membership:
    get:
      tags:
        - dex
      summary: Membership Token Tick (Bulk Get)
      description: '[Membership]Returns ticks of given token.'
      operationId: MembershipTick
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Token address list
            title: Address List
          description: Token address list
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTicksResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/Market/OrderBook/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Token Order Book
      description: '[Coupon]Returns orderbook of given token.'
      operationId: CouponOrderBook
      parameters:
        - name: token_address
          in: query
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: exchange_agent_address
          in: query
          required: true
          schema:
            type: string
            description: Settlement agent address on ibet exchange
            title: Exchange Agent Address
          description: Settlement agent address on ibet exchange
        - name: order_type
          in: query
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderType'
            description: Order type to be executed by the Orderer. If "buy" is selected,
              the sell order book will be returned.
            title: Order Type
          description: Order type to be executed by the Orderer. If "buy" is selected,
            the sell order book will be returned.
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Orderer's account address. Orders from the given address
              will not be included in the response.
            title: Account Address
          description: Orderer's account address. Orders from the given address will
            not be included in the response.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderBookItemResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/Market/LastPrice/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Token Last Price (Bulk Get)
      description: '[Coupon]Returns last price of given token.'
      operationId: CouponLastPrice
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Token address list
            title: Address List
          description: Token address list
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLastPriceResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/Market/Tick/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Token Tick (Bulk Get)
      description: '[Coupon]Returns ticks of given token.'
      operationId: CouponTick
      parameters:
        - name: address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Token address list
            title: Address List
          description: Token address list
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTicksResponse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/OrderList/Membership:
    get:
      tags:
        - dex
      summary: Membership Order History (Bulk Get)
      description: '[Membership]Returns order history of given token.'
      operationId: MembershipOrderList
      parameters:
        - name: account_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Account address list
            title: Account Address List
          description: Account address list
        - name: include_canceled_items
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Whether to include canceled orders or canceled agreements.
            title: Include Canceled Items
          description: Whether to include canceled orders or canceled agreements.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderListResponse_RetrieveMembershipTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/OrderList/Coupon:
    get:
      tags:
        - dex
      summary: Coupon Order History (Bulk Get)
      description: '[Coupon]Returns order history of given token.'
      operationId: CouponOrderList
      parameters:
        - name: account_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Account address list
            title: Account Address List
          description: Account address list
        - name: include_canceled_items
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Whether to include canceled orders or canceled agreements.
            title: Include Canceled Items
          description: Whether to include canceled orders or canceled agreements.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderListResponse_RetrieveCouponTokenResponse__'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
  /DEX/OrderList/{token_address}:
    get:
      tags:
        - dex
      summary: Order History filtered by token (Bulk Get)
      description: Returns order history.
      operationId: IbetExchange
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            description: Token address
            title: Token Address
          description: Token address
        - name: account_address_list
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Account address list
            title: Account Address List
          description: Account address list
        - name: include_canceled_items
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Whether to include canceled orders or canceled agreements.
            title: Include Canceled Items
          description: Whether to include canceled orders or canceled agreements.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderListResponse_TokenAddress__'
        '400':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/RequestValidationErrorResponse'
                title: Response 400 Ibetexchange
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotSupportedErrorResponse'
          description: Not Found
components:
  schemas:
    ABI:
      items: {}
      type: array
      title: ABI
    Agreement:
      properties:
        exchange_address:
          type: string
          title: Exchange Address
          description: exchange address
        order_id:
          type: integer
          title: Order Id
        agreement_id:
          type: integer
          title: Agreement Id
        amount:
          type: integer
          title: Amount
        price:
          type: integer
          title: Price
        is_buy:
          type: boolean
          title: Is Buy
        canceled:
          type: boolean
          title: Canceled
        agreement_timestamp:
          type: string
          title: Agreement Timestamp
      type: object
      required:
        - exchange_address
        - order_id
        - agreement_id
        - amount
        - price
        - is_buy
        - canceled
        - agreement_timestamp
      title: Agreement
    AgreementSet_RetrieveCouponTokenResponse_:
      properties:
        token:
          $ref: '#/components/schemas/RetrieveCouponTokenResponse'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          type: integer
          title: Sort Id
      type: object
      required:
        - token
        - agreement
        - sort_id
      title: AgreementSet[RetrieveCouponTokenResponse]
    AgreementSet_RetrieveMembershipTokenResponse_:
      properties:
        token:
          $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          type: integer
          title: Sort Id
      type: object
      required:
        - token
        - agreement
        - sort_id
      title: AgreementSet[RetrieveMembershipTokenResponse]
    AgreementSet_TokenAddress_:
      properties:
        token:
          $ref: '#/components/schemas/TokenAddress'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          type: integer
          title: Sort Id
      type: object
      required:
        - token
        - agreement
        - sort_id
      title: AgreementSet[TokenAddress]
    AppErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 0
        message:
          type: string
          title: Message
          examples:
            - ''
      type: object
      required:
        - code
        - message
      title: AppErrorMetainfo
    AppErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/AppErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: AppErrorResponse
    ApprovalStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      title: ApprovalStatus
    BlockData:
      properties:
        number:
          type: integer
          minimum: 0.0
          title: Number
          description: Block number
        hash:
          type: string
          title: Hash
          description: Block hash
        transactions:
          items:
            type: string
          type: array
          title: Transactions
          description: Transaction list
        timestamp:
          type: integer
          title: Timestamp
        gas_limit:
          type: integer
          title: Gas Limit
        gas_used:
          type: integer
          title: Gas Used
        size:
          type: integer
          minimum: 0.0
          title: Size
      type: object
      required:
        - number
        - hash
        - transactions
        - timestamp
        - gas_limit
        - gas_used
        - size
      title: BlockData
    BlockDataDetail:
      properties:
        number:
          type: integer
          minimum: 0.0
          title: Number
          description: Block number
        parent_hash:
          type: string
          title: Parent Hash
        sha3_uncles:
          type: string
          title: Sha3 Uncles
        miner:
          type: string
          title: Miner
        state_root:
          type: string
          title: State Root
        transactions_root:
          type: string
          title: Transactions Root
        receipts_root:
          type: string
          title: Receipts Root
        logs_bloom:
          type: string
          title: Logs Bloom
        difficulty:
          type: integer
          title: Difficulty
        gas_limit:
          type: integer
          title: Gas Limit
        gas_used:
          type: integer
          title: Gas Used
        timestamp:
          type: integer
          title: Timestamp
        proof_of_authority_data:
          type: string
          title: Proof Of Authority Data
        mix_hash:
          type: string
          title: Mix Hash
        nonce:
          type: string
          title: Nonce
        hash:
          type: string
          title: Hash
          description: Block hash
        size:
          type: integer
          minimum: 0.0
          title: Size
        transactions:
          items:
            type: string
          type: array
          title: Transactions
          description: Transaction list
      type: object
      required:
        - number
        - parent_hash
        - sha3_uncles
        - miner
        - state_root
        - transactions_root
        - receipts_root
        - logs_bloom
        - difficulty
        - gas_limit
        - gas_used
        - timestamp
        - proof_of_authority_data
        - mix_hash
        - nonce
        - hash
        - size
        - transactions
      title: BlockDataDetail
    BlockDataListResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        block_data:
          items:
            $ref: '#/components/schemas/BlockData'
          type: array
          title: Block Data
      type: object
      required:
        - result_set
        - block_data
      title: BlockDataListResponse
    BlockDataResponse:
      allOf:
        - $ref: '#/components/schemas/BlockDataDetail'
      title: BlockDataResponse
    BlockIdentifier:
      type: string
      enum:
        - latest
        - earliest
        - pending
      title: BlockIdentifier
    CompleteAgreementSet_RetrieveCouponTokenResponse_:
      properties:
        token:
          $ref: '#/components/schemas/RetrieveCouponTokenResponse'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          type: integer
          title: Sort Id
        settlement_timestamp:
          type: string
          title: Settlement Timestamp
          description: settlement timestamp
      type: object
      required:
        - token
        - agreement
        - sort_id
        - settlement_timestamp
      title: CompleteAgreementSet[RetrieveCouponTokenResponse]
    CompleteAgreementSet_RetrieveMembershipTokenResponse_:
      properties:
        token:
          $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          type: integer
          title: Sort Id
        settlement_timestamp:
          type: string
          title: Settlement Timestamp
          description: settlement timestamp
      type: object
      required:
        - token
        - agreement
        - sort_id
        - settlement_timestamp
      title: CompleteAgreementSet[RetrieveMembershipTokenResponse]
    CompleteAgreementSet_TokenAddress_:
      properties:
        token:
          $ref: '#/components/schemas/TokenAddress'
        agreement:
          $ref: '#/components/schemas/Agreement'
        sort_id:
          type: integer
          title: Sort Id
        settlement_timestamp:
          type: string
          title: Settlement Timestamp
          description: settlement timestamp
      type: object
      required:
        - token
        - agreement
        - sort_id
        - settlement_timestamp
      title: CompleteAgreementSet[TokenAddress]
    CouponConsumption:
      properties:
        account_address:
          type: string
          title: Account Address
          description: account address
        block_timestamp:
          type: string
          title: Block Timestamp
          description: consumption datetime
        value:
          type: integer
          title: Value
          description: consumption quantity
      type: object
      required:
        - account_address
        - block_timestamp
        - value
      title: CouponConsumption
    CouponImage:
      properties:
        id:
          type: integer
          title: Id
        url:
          type: string
          title: Url
      type: object
      required:
        - id
        - url
      title: CouponImage
    CouponPositionWithAddress:
      properties:
        balance:
          type: integer
          title: Balance
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        used:
          type: integer
          title: Used
        token_address:
          type: string
          title: Token Address
          description: set when include_token_details=true
      type: object
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - used
        - token_address
      title: CouponPositionWithAddress
    CouponPositionWithDetail:
      properties:
        balance:
          type: integer
          title: Balance
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        used:
          type: integer
          title: Used
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
          description: set when include_token_details=false or null
      type: object
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - used
        - token
      title: CouponPositionWithDetail
    CouponPositionsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          anyOf:
            - items:
                $ref: '#/components/schemas/CouponPositionWithDetail'
              type: array
            - items:
                $ref: '#/components/schemas/CouponPositionWithAddress'
              type: array
          title: Positions
      type: object
      required:
        - result_set
        - positions
      title: CouponPositionsResponse
    CouponTokensSortItem:
      type: string
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - transferable
        - initial_offering_status
        - created
      title: CouponTokensSortItem
    CreateTokenHoldersCollectionRequest:
      properties:
        list_id:
          type: string
          format: uuid4
          title: List Id
          description: Unique id to be assigned to each token holder list.This must
            be Version4 UUID.
          examples:
            - cfd83622-34dc-4efe-a68b-2cc275d3d824
        block_number:
          type: integer
          title: Block Number
          description: block number
      type: object
      required:
        - list_id
        - block_number
      title: CreateTokenHoldersCollectionRequest
    CreateTokenHoldersCollectionResponse:
      properties:
        list_id:
          type: string
          format: uuid4
          title: List Id
          description: Unique id to be assigned to each token holder list.This must
            be Version4 UUID.
          examples:
            - cfd83622-34dc-4efe-a68b-2cc275d3d824
        status:
          allOf:
            - $ref: '#/components/schemas/TokenHoldersCollectionBatchStatus'
          description: status code of batch job
      type: object
      required:
        - list_id
        - status
      title: CreateTokenHoldersCollectionResponse
    DataConflictErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 40
        message:
          type: string
          title: Message
          examples:
            - Data Conflict
      type: object
      required:
        - code
        - message
      title: DataConflictErrorMetainfo
    DataConflictErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DataConflictErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: DataConflictErrorResponse
    DataNotExistsErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 30
        message:
          type: string
          title: Message
          examples:
            - Data Not Exists
      type: object
      required:
        - code
        - message
      title: DataNotExistsErrorMetainfo
    DataNotExistsErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DataNotExistsErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: DataNotExistsErrorResponse
    DividendInformation:
      properties:
        dividends:
          type: number
          title: Dividends
          examples:
            - 999.9999999999999
        dividend_record_date:
          type: string
          title: Dividend Record Date
          examples:
            - '20200909'
        dividend_payment_date:
          type: string
          title: Dividend Payment Date
          examples:
            - '20201001'
      type: object
      required:
        - dividends
        - dividend_record_date
        - dividend_payment_date
      title: DividendInformation
    E2EMessageEncryptionKeyResponse:
      properties:
        key:
          type: string
          title: Key
          description: Message encryption key
        key_type:
          type: string
          title: Key Type
          description: key type
          examples:
            - RSA4096
      type: object
      required:
        - key
        - key_type
      title: E2EMessageEncryptionKeyResponse
    E2EMessagingEventType:
      type: string
      enum:
        - PublicKeyUpdated
        - Message
      title: E2EMessagingEventType
    Event:
      properties:
        event:
          type: string
          title: Event
          description: the event name
        args:
          title: Args
          description: event args
        transaction_hash:
          type: string
          title: Transaction Hash
          description: transaction hash
        block_number:
          type: integer
          title: Block Number
          description: the block number where this log was in
        block_timestamp:
          type: integer
          title: Block Timestamp
          description: timestamp where this log was in
        log_index:
          type: integer
          title: Log Index
          description: integer of the log index position in the block
      type: object
      required:
        - event
        - args
        - transaction_hash
        - block_number
        - block_timestamp
        - log_index
      title: Event
    GenericSecurityTokenPositionsResponse_RetrieveShareTokenResponse_:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          anyOf:
            - items:
                $ref: '#/components/schemas/SecurityTokenPositionWithDetail_RetrieveShareTokenResponse_'
              type: array
            - items:
                $ref: '#/components/schemas/SecurityTokenPositionWithAddress'
              type: array
          title: Positions
      type: object
      required:
        - result_set
        - positions
      title: GenericSecurityTokenPositionsResponse[RetrieveShareTokenResponse]
    GenericSecurityTokenPositionsResponse_RetrieveStraightBondTokenResponse_:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          anyOf:
            - items:
                $ref: '#/components/schemas/SecurityTokenPositionWithDetail_RetrieveStraightBondTokenResponse_'
              type: array
            - items:
                $ref: '#/components/schemas/SecurityTokenPositionWithAddress'
              type: array
          title: Positions
      type: object
      required:
        - result_set
        - positions
      title: GenericSecurityTokenPositionsResponse[RetrieveStraightBondTokenResponse]
    GenericSuccessResponse_ABI_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ABI'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ABI]
    GenericSuccessResponse_Any_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          title: Data
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[Any]
    GenericSuccessResponse_BlockDataListResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/BlockDataListResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[BlockDataListResponse]
    GenericSuccessResponse_BlockDataResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/BlockDataResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[BlockDataResponse]
    GenericSuccessResponse_CouponPositionWithDetail_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/CouponPositionWithDetail'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[CouponPositionWithDetail]
    GenericSuccessResponse_CouponPositionsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/CouponPositionsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[CouponPositionsResponse]
    GenericSuccessResponse_CreateTokenHoldersCollectionResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/CreateTokenHoldersCollectionResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[CreateTokenHoldersCollectionResponse]
    GenericSuccessResponse_E2EMessageEncryptionKeyResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/E2EMessageEncryptionKeyResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[E2EMessageEncryptionKeyResponse]
    GenericSuccessResponse_GenericSecurityTokenPositionsResponse_RetrieveShareTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/GenericSecurityTokenPositionsResponse_RetrieveShareTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[GenericSecurityTokenPositionsResponse[RetrieveShareTokenResponse]]
    GenericSuccessResponse_GenericSecurityTokenPositionsResponse_RetrieveStraightBondTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/GenericSecurityTokenPositionsResponse_RetrieveStraightBondTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[GenericSecurityTokenPositionsResponse[RetrieveStraightBondTokenResponse]]
    GenericSuccessResponse_GetAdminTokenTypeResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/GetAdminTokenTypeResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[GetAdminTokenTypeResponse]
    GenericSuccessResponse_GetBlockSyncStatusResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/GetBlockSyncStatusResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[GetBlockSyncStatusResponse]
    GenericSuccessResponse_GetNodeInfoResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/GetNodeInfoResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[GetNodeInfoResponse]
    GenericSuccessResponse_ListAllAdminTokensResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllAdminTokensResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllAdminTokensResponse]
    GenericSuccessResponse_ListAllCompanyInfoResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllCompanyInfoResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllCompanyInfoResponse]
    GenericSuccessResponse_ListAllCompanyTokensResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllCompanyTokensResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllCompanyTokensResponse]
    GenericSuccessResponse_ListAllCouponConsumptionsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllCouponConsumptionsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllCouponConsumptionsResponse]
    GenericSuccessResponse_ListAllCouponTokenAddressesResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllCouponTokenAddressesResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllCouponTokenAddressesResponse]
    GenericSuccessResponse_ListAllCouponTokensResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllCouponTokensResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllCouponTokensResponse]
    GenericSuccessResponse_ListAllEventsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllEventsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllEventsResponse]
    GenericSuccessResponse_ListAllLastPriceResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllLastPriceResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllLastPriceResponse]
    GenericSuccessResponse_ListAllLockEventsResponse_RetrieveShareTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllLockEventsResponse_RetrieveShareTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllLockEventsResponse[RetrieveShareTokenResponse]]
    GenericSuccessResponse_ListAllLockEventsResponse_RetrieveStraightBondTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllLockEventsResponse_RetrieveStraightBondTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[ListAllLockEventsResponse[RetrieveStraightBondTokenResponse]]
    GenericSuccessResponse_ListAllLockedPositionResponse_RetrieveShareTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllLockedPositionResponse_RetrieveShareTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[ListAllLockedPositionResponse[RetrieveShareTokenResponse]]
    GenericSuccessResponse_ListAllLockedPositionResponse_RetrieveStraightBondTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllLockedPositionResponse_RetrieveStraightBondTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[ListAllLockedPositionResponse[RetrieveStraightBondTokenResponse]]
    GenericSuccessResponse_ListAllMembershipTokenAddressesResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllMembershipTokenAddressesResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllMembershipTokenAddressesResponse]
    GenericSuccessResponse_ListAllMembershipTokensResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllMembershipTokensResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllMembershipTokensResponse]
    GenericSuccessResponse_ListAllOrderBookItemResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderBookItemResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllOrderBookItemResponse]
    GenericSuccessResponse_ListAllOrderListResponse_RetrieveCouponTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderListResponse_RetrieveCouponTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllOrderListResponse[RetrieveCouponTokenResponse]]
    GenericSuccessResponse_ListAllOrderListResponse_RetrieveMembershipTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderListResponse_RetrieveMembershipTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[ListAllOrderListResponse[RetrieveMembershipTokenResponse]]
    GenericSuccessResponse_ListAllOrderListResponse_TokenAddress__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllOrderListResponse_TokenAddress_'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllOrderListResponse[TokenAddress]]
    GenericSuccessResponse_ListAllShareTokenAddressesResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllShareTokenAddressesResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllShareTokenAddressesResponse]
    GenericSuccessResponse_ListAllShareTokensResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllShareTokensResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllShareTokensResponse]
    GenericSuccessResponse_ListAllStraightBondTokenAddressesResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllStraightBondTokenAddressesResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllStraightBondTokenAddressesResponse]
    GenericSuccessResponse_ListAllStraightBondTokensResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllStraightBondTokensResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllStraightBondTokensResponse]
    GenericSuccessResponse_ListAllTicksResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllTicksResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllTicksResponse]
    GenericSuccessResponse_ListAllTokenLockResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/ListAllTokenLockResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[ListAllTokenLockResponse]
    GenericSuccessResponse_MembershipPositionWithDetail_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/MembershipPositionWithDetail'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[MembershipPositionWithDetail]
    GenericSuccessResponse_MembershipPositionsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/MembershipPositionsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[MembershipPositionsResponse]
    GenericSuccessResponse_NotificationUpdateResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/NotificationUpdateResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[NotificationUpdateResponse]
    GenericSuccessResponse_NotificationsCountResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/NotificationsCountResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[NotificationsCountResponse]
    GenericSuccessResponse_NotificationsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/NotificationsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[NotificationsResponse]
    GenericSuccessResponse_RetrieveAdminTokenResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveAdminTokenResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveAdminTokenResponse]
    GenericSuccessResponse_RetrieveAgreementDetailResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveAgreementDetailResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveAgreementDetailResponse]
    GenericSuccessResponse_RetrieveCompanyInfoResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveCompanyInfoResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveCompanyInfoResponse]
    GenericSuccessResponse_RetrieveCouponTokenResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveCouponTokenResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveCouponTokenResponse]
    GenericSuccessResponse_RetrieveMembershipTokenResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveMembershipTokenResponse]
    GenericSuccessResponse_RetrievePaymentAccountRegistrationStatusResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrievePaymentAccountRegistrationStatusResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrievePaymentAccountRegistrationStatusResponse]
    GenericSuccessResponse_RetrievePersonalInfoRegistrationStatusResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrievePersonalInfoRegistrationStatusResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrievePersonalInfoRegistrationStatusResponse]
    GenericSuccessResponse_RetrieveShareTokenResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveShareTokenResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveShareTokenResponse]
    GenericSuccessResponse_RetrieveStraightBondTokenResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveStraightBondTokenResponse]
    GenericSuccessResponse_RetrieveTokenLockCountResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/RetrieveTokenLockCountResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[RetrieveTokenLockCountResponse]
    GenericSuccessResponse_SecurityTokenPositionWithDetail_RetrieveShareTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/SecurityTokenPositionWithDetail_RetrieveShareTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[SecurityTokenPositionWithDetail[RetrieveShareTokenResponse]]
    GenericSuccessResponse_SecurityTokenPositionWithDetail_RetrieveStraightBondTokenResponse__:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/SecurityTokenPositionWithDetail_RetrieveStraightBondTokenResponse_'
      type: object
      required:
        - meta
        - data
      title: 
        GenericSuccessResponse[SecurityTokenPositionWithDetail[RetrieveStraightBondTokenResponse]]
    GenericSuccessResponse_SendRawTransactionsNoWaitResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/SendRawTransactionsNoWaitResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[SendRawTransactionsNoWaitResponse]
    GenericSuccessResponse_SendRawTransactionsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/SendRawTransactionsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[SendRawTransactionsResponse]
    GenericSuccessResponse_TokenHoldersCollectionResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TokenHoldersCollectionResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TokenHoldersCollectionResponse]
    GenericSuccessResponse_TokenHoldersCountResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TokenHoldersCountResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TokenHoldersCountResponse]
    GenericSuccessResponse_TokenHoldersResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TokenHoldersResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TokenHoldersResponse]
    GenericSuccessResponse_TokenPositionsResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TokenPositionsResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TokenPositionsResponse]
    GenericSuccessResponse_TokenStatusResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TokenStatusResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TokenStatusResponse]
    GenericSuccessResponse_TransactionCountResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TransactionCountResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TransactionCountResponse]
    GenericSuccessResponse_TransferApprovalHistoriesResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TransferApprovalHistoriesResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TransferApprovalHistoriesResponse]
    GenericSuccessResponse_TransferHistoriesResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TransferHistoriesResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TransferHistoriesResponse]
    GenericSuccessResponse_TxDataListResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TxDataListResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TxDataListResponse]
    GenericSuccessResponse_TxDataResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/TxDataResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[TxDataResponse]
    GenericSuccessResponse_WaitForTransactionReceiptResponse_:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          $ref: '#/components/schemas/WaitForTransactionReceiptResponse'
      type: object
      required:
        - meta
        - data
      title: GenericSuccessResponse[WaitForTransactionReceiptResponse]
    GetAdminTokenTypeResponse:
      properties:
        IbetStraightBond:
          type: boolean
          title: Ibetstraightbond
        IbetShare:
          type: boolean
          title: Ibetshare
        IbetMembership:
          type: boolean
          title: Ibetmembership
        IbetCoupon:
          type: boolean
          title: Ibetcoupon
      type: object
      required:
        - IbetStraightBond
        - IbetShare
        - IbetMembership
        - IbetCoupon
      title: GetAdminTokenTypeResponse
    GetBlockSyncStatusResponse:
      properties:
        is_synced:
          type: boolean
          title: Is Synced
          description: block sync status
        latest_block_number:
          anyOf:
            - type: integer
            - type: 'null'
          title: Latest Block Number
          description: latest block number (returns null if is_synced is false)
      type: object
      required:
        - is_synced
        - latest_block_number
      title: GetBlockSyncStatusResponse
    GetNodeInfoResponse:
      properties:
        payment_gateway_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Payment Gateway Address
        payment_gateway_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Payment Gateway Abi
        personal_info_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Address
        personal_info_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Personal Info Abi
        ibet_membership_exchange_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Membership Exchange Address
        ibet_membership_exchange_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Ibet Membership Exchange Abi
        ibet_coupon_exchange_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Coupon Exchange Address
        ibet_coupon_exchange_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Ibet Coupon Exchange Abi
        ibet_escrow_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Escrow Address
        ibet_escrow_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Ibet Escrow Abi
        ibet_security_token_escrow_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Security Token Escrow Address
        ibet_security_token_escrow_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Ibet Security Token Escrow Abi
        ibet_security_token_dvp_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Security Token Dvp Address
        ibet_security_token_dvp_abi:
          anyOf:
            - {}
            - type: 'null'
          title: Ibet Security Token Dvp Abi
        e2e_messaging_address:
          anyOf:
            - type: string
            - type: 'null'
          title: E2E Messaging Address
        e2e_messaging_abi:
          anyOf:
            - {}
            - type: 'null'
          title: E2E Messaging Abi
      type: object
      required:
        - payment_gateway_address
        - payment_gateway_abi
        - personal_info_address
        - personal_info_abi
        - ibet_membership_exchange_address
        - ibet_membership_exchange_abi
        - ibet_coupon_exchange_address
        - ibet_coupon_exchange_abi
        - ibet_escrow_address
        - ibet_escrow_abi
        - ibet_security_token_escrow_address
        - ibet_security_token_escrow_abi
        - ibet_security_token_dvp_address
        - ibet_security_token_dvp_abi
        - e2e_messaging_address
        - e2e_messaging_abi
      title: GetNodeInfoResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IbetEscrowEventType:
      type: string
      enum:
        - Deposited
        - Withdrawn
        - EscrowCreated
        - EscrowCanceled
        - EscrowFinished
      title: IbetEscrowEventType
    IbetSecurityTokenDVPEventType:
      type: string
      enum:
        - Deposited
        - Withdrawn
        - DeliveryCreated
        - DeliveryCanceled
        - DeliveryConfirmed
        - DeliveryFinished
        - DeliveryAborted
      title: IbetSecurityTokenDVPEventType
    IbetSecurityTokenEscrowEventType:
      type: string
      enum:
        - Deposited
        - Withdrawn
        - EscrowCreated
        - EscrowCanceled
        - EscrowFinished
        - ApplyForTransfer
        - CancelTransfer
        - ApproveTransfer
        - FinishTransfer
      title: IbetSecurityTokenEscrowEventType
    IbetSecurityTokenInterfaceEventType:
      type: string
      enum:
        - Allot
        - ApplyForOffering
        - ApplyForTransfer
        - ApproveTransfer
        - CancelTransfer
        - ChangeOfferingStatus
        - ChangeStatus
        - ChangeTransferApprovalRequired
        - Issue
        - Lock
        - Redeem
        - Transfer
        - Unlock
      title: IbetSecurityTokenInterfaceEventType
    InvalidParameterErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 88
        message:
          type: string
          title: Message
          examples:
            - Invalid Parameter
      type: object
      required:
        - code
        - message
      title: InvalidParameterErrorMetainfo
    InvalidParameterErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/InvalidParameterErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: InvalidParameterErrorResponse
    JsonRPCRequest:
      properties:
        method:
          type: string
          title: Method
          description: 'method: eth_xxx'
        params:
          items: {}
          type: array
          title: Params
          description: parameters
      type: object
      required:
        - method
        - params
      title: JsonRPCRequest
    LastPrice:
      properties:
        token_address:
          type: string
          title: Token Address
        last_price:
          type: integer
          title: Last Price
      type: object
      required:
        - token_address
        - last_price
      title: LastPrice
    ListAllAdminTokensResponse:
      items:
        $ref: '#/components/schemas/RetrieveAdminTokenResponse'
      type: array
      title: ListAllAdminTokensResponse
    ListAllCompanyInfoResponse:
      items:
        $ref: '#/components/schemas/RetrieveCompanyInfoResponse'
      type: array
      title: ListAllCompanyInfoResponse
    ListAllCompanyTokensResponse:
      items:
        anyOf:
          - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
          - $ref: '#/components/schemas/RetrieveShareTokenResponse'
          - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
          - $ref: '#/components/schemas/RetrieveCouponTokenResponse'
      type: array
      title: ListAllCompanyTokensResponse
    ListAllCouponConsumptionsResponse:
      items:
        $ref: '#/components/schemas/CouponConsumption'
      type: array
      title: ListAllCouponConsumptionsResponse
    ListAllCouponTokenAddressesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          items:
            type: string
          type: array
          title: Address List
      type: object
      required:
        - result_set
        - address_list
      title: ListAllCouponTokenAddressesResponse
    ListAllCouponTokensResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          items:
            $ref: '#/components/schemas/RetrieveCouponTokenResponse'
          type: array
          title: Tokens
      type: object
      required:
        - result_set
        - tokens
      title: ListAllCouponTokensResponse
    ListAllEventsResponse:
      items:
        $ref: '#/components/schemas/Event'
      type: array
      title: ListAllEventsResponse
    ListAllLastPriceResponse:
      items:
        $ref: '#/components/schemas/LastPrice'
      type: array
      title: ListAllLastPriceResponse
    ListAllLockEventsResponse_RetrieveShareTokenResponse_:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          anyOf:
            - items:
                $ref: '#/components/schemas/LockEventWithTokenDetail_RetrieveShareTokenResponse_'
              type: array
            - items:
                $ref: '#/components/schemas/LockEvent'
              type: array
          title: Events
          description: Lock/Unlock event list
      type: object
      required:
        - result_set
        - events
      title: ListAllLockEventsResponse[RetrieveShareTokenResponse]
    ListAllLockEventsResponse_RetrieveStraightBondTokenResponse_:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          anyOf:
            - items:
                $ref: '#/components/schemas/LockEventWithTokenDetail_RetrieveStraightBondTokenResponse_'
              type: array
            - items:
                $ref: '#/components/schemas/LockEvent'
              type: array
          title: Events
          description: Lock/Unlock event list
      type: object
      required:
        - result_set
        - events
      title: ListAllLockEventsResponse[RetrieveStraightBondTokenResponse]
    ListAllLockSortItem:
      type: string
      enum:
        - token_address
        - lock_address
        - account_address
        - value
      title: ListAllLockSortItem
    ListAllLockedPositionResponse_RetrieveShareTokenResponse_:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        locked_positions:
          anyOf:
            - items:
                $ref: '#/components/schemas/LockedWithTokenDetail_RetrieveShareTokenResponse_'
              type: array
            - items:
                $ref: '#/components/schemas/Locked'
              type: array
          title: Locked Positions
      type: object
      required:
        - result_set
        - locked_positions
      title: ListAllLockedPositionResponse[RetrieveShareTokenResponse]
    ListAllLockedPositionResponse_RetrieveStraightBondTokenResponse_:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        locked_positions:
          anyOf:
            - items:
                $ref: '#/components/schemas/LockedWithTokenDetail_RetrieveStraightBondTokenResponse_'
              type: array
            - items:
                $ref: '#/components/schemas/Locked'
              type: array
          title: Locked Positions
      type: object
      required:
        - result_set
        - locked_positions
      title: ListAllLockedPositionResponse[RetrieveStraightBondTokenResponse]
    ListAllLockedSortItem:
      type: string
      enum:
        - token_address
        - lock_address
        - account_address
        - value
      title: ListAllLockedSortItem
    ListAllMembershipTokenAddressesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          items:
            type: string
          type: array
          title: Address List
      type: object
      required:
        - result_set
        - address_list
      title: ListAllMembershipTokenAddressesResponse
    ListAllMembershipTokensResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          items:
            $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
          type: array
          title: Tokens
      type: object
      required:
        - result_set
        - tokens
      title: ListAllMembershipTokensResponse
    ListAllOrderBookItemResponse:
      items:
        $ref: '#/components/schemas/OrderBookItem'
      type: array
      title: ListAllOrderBookItemResponse
    ListAllOrderListResponse_RetrieveCouponTokenResponse_:
      properties:
        order_list:
          items:
            $ref: '#/components/schemas/OrderSet_RetrieveCouponTokenResponse_'
          type: array
          title: Order List
        settlement_list:
          items:
            $ref: '#/components/schemas/AgreementSet_RetrieveCouponTokenResponse_'
          type: array
          title: Settlement List
        complete_list:
          items:
            $ref: '#/components/schemas/CompleteAgreementSet_RetrieveCouponTokenResponse_'
          type: array
          title: Complete List
      type: object
      required:
        - order_list
        - settlement_list
        - complete_list
      title: ListAllOrderListResponse[RetrieveCouponTokenResponse]
    ListAllOrderListResponse_RetrieveMembershipTokenResponse_:
      properties:
        order_list:
          items:
            $ref: '#/components/schemas/OrderSet_RetrieveMembershipTokenResponse_'
          type: array
          title: Order List
        settlement_list:
          items:
            $ref: '#/components/schemas/AgreementSet_RetrieveMembershipTokenResponse_'
          type: array
          title: Settlement List
        complete_list:
          items:
            $ref: '#/components/schemas/CompleteAgreementSet_RetrieveMembershipTokenResponse_'
          type: array
          title: Complete List
      type: object
      required:
        - order_list
        - settlement_list
        - complete_list
      title: ListAllOrderListResponse[RetrieveMembershipTokenResponse]
    ListAllOrderListResponse_TokenAddress_:
      properties:
        order_list:
          items:
            $ref: '#/components/schemas/OrderSet_TokenAddress_'
          type: array
          title: Order List
        settlement_list:
          items:
            $ref: '#/components/schemas/AgreementSet_TokenAddress_'
          type: array
          title: Settlement List
        complete_list:
          items:
            $ref: '#/components/schemas/CompleteAgreementSet_TokenAddress_'
          type: array
          title: Complete List
      type: object
      required:
        - order_list
        - settlement_list
        - complete_list
      title: ListAllOrderListResponse[TokenAddress]
    ListAllShareTokenAddressesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          items:
            type: string
          type: array
          title: Address List
      type: object
      required:
        - result_set
        - address_list
      title: ListAllShareTokenAddressesResponse
    ListAllShareTokensResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          items:
            $ref: '#/components/schemas/RetrieveShareTokenResponse'
          type: array
          title: Tokens
      type: object
      required:
        - result_set
        - tokens
      title: ListAllShareTokensResponse
    ListAllStraightBondTokenAddressesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        address_list:
          items:
            type: string
          type: array
          title: Address List
      type: object
      required:
        - result_set
        - address_list
      title: ListAllStraightBondTokenAddressesResponse
    ListAllStraightBondTokensResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          items:
            $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
          type: array
          title: Tokens
      type: object
      required:
        - result_set
        - tokens
      title: ListAllStraightBondTokensResponse
    ListAllTicksResponse:
      items:
        $ref: '#/components/schemas/Ticks'
      type: array
      title: ListAllTicksResponse
    ListAllTokenLockResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        locked_list:
          items:
            $ref: '#/components/schemas/Locked'
          type: array
          title: Locked List
      type: object
      required:
        - result_set
        - locked_list
      title: ListAllTokenLockResponse
    LockEvent:
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/LockEventCategory'
          description: history item category
        transaction_hash:
          type: string
          title: Transaction Hash
          description: Transaction hash
        msg_sender:
          anyOf:
            - type: string
            - type: 'null'
          title: Msg Sender
          description: Message sender
        token_address:
          type: string
          title: Token Address
          description: Token address
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        account_address:
          type: string
          title: Account Address
          description: Account address
        recipient_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Recipient Address
          description: Recipient address
        value:
          type: integer
          title: Value
          description: Transfer quantity
        data:
          type: object
          title: Data
          description: Data
        block_timestamp:
          type: string
          format: date-time
          title: Block Timestamp
          description: block_timestamp when Lock log was emitted (local_timezone)
      type: object
      required:
        - category
        - transaction_hash
        - msg_sender
        - token_address
        - lock_address
        - account_address
        - value
        - data
        - block_timestamp
      title: LockEvent
    LockEventCategory:
      type: string
      enum:
        - Lock
        - Unlock
      title: LockEventCategory
    LockEventSortItem:
      type: string
      enum:
        - token_address
        - lock_address
        - recipient_address
        - value
        - block_timestamp
      title: LockEventSortItem
    LockEventWithTokenDetail_RetrieveShareTokenResponse_:
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/LockEventCategory'
          description: history item category
        transaction_hash:
          type: string
          title: Transaction Hash
          description: Transaction hash
        msg_sender:
          anyOf:
            - type: string
            - type: 'null'
          title: Msg Sender
          description: Message sender
        token_address:
          type: string
          title: Token Address
          description: Token address
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        account_address:
          type: string
          title: Account Address
          description: Account address
        recipient_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Recipient Address
          description: Recipient address
        value:
          type: integer
          title: Value
          description: Transfer quantity
        data:
          type: object
          title: Data
          description: Data
        block_timestamp:
          type: string
          format: date-time
          title: Block Timestamp
          description: block_timestamp when Lock log was emitted (local_timezone)
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveShareTokenResponse'
          description: Token information
      type: object
      required:
        - category
        - transaction_hash
        - msg_sender
        - token_address
        - lock_address
        - account_address
        - value
        - data
        - block_timestamp
        - token
      title: LockEventWithTokenDetail[RetrieveShareTokenResponse]
    LockEventWithTokenDetail_RetrieveStraightBondTokenResponse_:
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/LockEventCategory'
          description: history item category
        transaction_hash:
          type: string
          title: Transaction Hash
          description: Transaction hash
        msg_sender:
          anyOf:
            - type: string
            - type: 'null'
          title: Msg Sender
          description: Message sender
        token_address:
          type: string
          title: Token Address
          description: Token address
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        account_address:
          type: string
          title: Account Address
          description: Account address
        recipient_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Recipient Address
          description: Recipient address
        value:
          type: integer
          title: Value
          description: Transfer quantity
        data:
          type: object
          title: Data
          description: Data
        block_timestamp:
          type: string
          format: date-time
          title: Block Timestamp
          description: block_timestamp when Lock log was emitted (local_timezone)
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
          description: Token information
      type: object
      required:
        - category
        - transaction_hash
        - msg_sender
        - token_address
        - lock_address
        - account_address
        - value
        - data
        - block_timestamp
        - token
      title: LockEventWithTokenDetail[RetrieveStraightBondTokenResponse]
    Locked:
      properties:
        token_address:
          type: string
          title: Token Address
        lock_address:
          type: string
          title: Lock Address
        account_address:
          type: string
          title: Account Address
        value:
          type: integer
          title: Value
      type: object
      required:
        - token_address
        - lock_address
        - account_address
        - value
      title: Locked
    LockedWithTokenDetail_RetrieveShareTokenResponse_:
      properties:
        token_address:
          type: string
          title: Token Address
        lock_address:
          type: string
          title: Lock Address
        account_address:
          type: string
          title: Account Address
        value:
          type: integer
          title: Value
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveShareTokenResponse'
          description: Token information
      type: object
      required:
        - token_address
        - lock_address
        - account_address
        - value
        - token
      title: LockedWithTokenDetail[RetrieveShareTokenResponse]
    LockedWithTokenDetail_RetrieveStraightBondTokenResponse_:
      properties:
        token_address:
          type: string
          title: Token Address
        lock_address:
          type: string
          title: Lock Address
        account_address:
          type: string
          title: Account Address
        value:
          type: integer
          title: Value
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
          description: Token information
      type: object
      required:
        - token_address
        - lock_address
        - account_address
        - value
        - token
      title: LockedWithTokenDetail[RetrieveStraightBondTokenResponse]
    MembershipImage:
      properties:
        id:
          type: integer
          title: Id
        url:
          type: string
          title: Url
      type: object
      required:
        - id
        - url
      title: MembershipImage
    MembershipPositionWithAddress:
      properties:
        balance:
          type: integer
          title: Balance
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        token_address:
          type: string
          title: Token Address
          description: set when include_token_details=false
      type: object
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - token_address
      title: MembershipPositionWithAddress
    MembershipPositionWithDetail:
      properties:
        balance:
          type: integer
          title: Balance
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
          description: set when include_token_details=true
      type: object
      required:
        - balance
        - exchange_balance
        - exchange_commitment
        - token
      title: MembershipPositionWithDetail
    MembershipPositionsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          anyOf:
            - items:
                $ref: '#/components/schemas/MembershipPositionWithDetail'
              type: array
            - items:
                $ref: '#/components/schemas/MembershipPositionWithAddress'
              type: array
          title: Positions
      type: object
      required:
        - result_set
        - positions
      title: MembershipPositionsResponse
    MembershipTokensSortItem:
      type: string
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - transferable
        - initial_offering_status
        - created
      title: MembershipTokensSortItem
    NotSupportedErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 10
        message:
          type: string
          title: Message
          examples:
            - Not Supported
      type: object
      required:
        - code
        - message
      title: NotSupportedErrorMetainfo
    NotSupportedErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/NotSupportedErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: NotSupportedErrorResponse
    Notification:
      properties:
        notification_type:
          allOf:
            - $ref: '#/components/schemas/NotificationType'
          examples:
            - NewOrder
        id:
          type: string
          title: Id
          examples:
            - '0x00000373ca8600000000000000'
        priority:
          type: integer
          title: Priority
        block_timestamp:
          type: string
          title: Block Timestamp
          description: block timestamp
        is_read:
          type: boolean
          title: Is Read
        is_flagged:
          type: boolean
          title: Is Flagged
        is_deleted:
          type: boolean
          title: Is Deleted
        deleted_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Deleted At
          description: datetime of deletion
        args:
          title: Args
        metainfo:
          anyOf:
            - $ref: '#/components/schemas/NotificationMetainfo'
            - type: object
          title: Metainfo
        account_address:
          type: string
          title: Account Address
        sort_id:
          type: integer
          title: Sort Id
        created:
          type: string
          title: Created
          description: datetime of create
      type: object
      required:
        - notification_type
        - id
        - priority
        - block_timestamp
        - is_read
        - is_flagged
        - is_deleted
        - deleted_at
        - args
        - metainfo
        - account_address
        - sort_id
        - created
      title: Notification
    NotificationMetainfo:
      properties:
        company_name:
          type: string
          title: Company Name
        token_address:
          type: string
          title: Token Address
        token_name:
          type: string
          title: Token Name
        exchange_address:
          type: string
          title: Exchange Address
        token_type:
          $ref: '#/components/schemas/TokenType'
      type: object
      required:
        - company_name
        - token_address
        - token_name
        - exchange_address
        - token_type
      title: NotificationMetainfo
    NotificationReadRequest:
      properties:
        address:
          type: string
          title: Address
        is_read:
          type: boolean
          title: Is Read
      type: object
      required:
        - address
        - is_read
      title: NotificationReadRequest
    NotificationType:
      type: string
      enum:
        - NewOrder
        - NewOrderCounterpart
        - CancelOrder
        - CancelOrderCounterpart
        - ForceCancelOrder
        - BuyAgreement
        - BuySettlementOK
        - BuySettlementNG
        - SellAgreement
        - SellSettlementOK
        - SellSettlementNG
        - Transfer
        - ApplyForTransfer
        - ApproveTransfer
        - CancelTransfer
      title: NotificationType
    NotificationUpdateResponse:
      properties:
        notification_type:
          allOf:
            - $ref: '#/components/schemas/NotificationType'
          examples:
            - NewOrder
        id:
          type: string
          title: Id
          examples:
            - '0x00000373ca8600000000000000'
        priority:
          type: integer
          title: Priority
        block_timestamp:
          type: string
          title: Block Timestamp
          description: block timestamp
        is_read:
          type: boolean
          title: Is Read
        is_flagged:
          type: boolean
          title: Is Flagged
        is_deleted:
          type: boolean
          title: Is Deleted
        deleted_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Deleted At
          description: datetime of deletion
        args:
          title: Args
        metainfo:
          anyOf:
            - $ref: '#/components/schemas/NotificationMetainfo'
            - type: object
          title: Metainfo
        account_address:
          type: string
          title: Account Address
      type: object
      required:
        - notification_type
        - id
        - priority
        - block_timestamp
        - is_read
        - is_flagged
        - is_deleted
        - deleted_at
        - args
        - metainfo
        - account_address
      title: NotificationUpdateResponse
    NotificationsCountResponse:
      properties:
        unread_counts:
          type: integer
          title: Unread Counts
      type: object
      required:
        - unread_counts
      title: NotificationsCountResponse
    NotificationsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
          title: Notifications
      type: object
      required:
        - result_set
        - notifications
      title: NotificationsResponse
    NotificationsSortItem:
      type: string
      enum:
        - notification_type
        - priority
        - block_timestamp
        - created
      title: NotificationsSortItem
    Order:
      properties:
        order_id:
          type: integer
          title: Order Id
        counterpart_address:
          type: string
          title: Counterpart Address
        amount:
          type: integer
          title: Amount
        price:
          type: integer
          title: Price
        is_buy:
          type: boolean
          title: Is Buy
        canceled:
          type: boolean
          title: Canceled
        order_timestamp:
          type: string
          title: Order Timestamp
      type: object
      required:
        - order_id
        - counterpart_address
        - amount
        - price
        - is_buy
        - canceled
        - order_timestamp
      title: Order
    OrderBookItem:
      properties:
        exchange_address:
          type: string
          title: Exchange Address
          description: Exchange contract address
        order_id:
          type: integer
          title: Order Id
          description: Order id
        price:
          type: integer
          title: Price
          description: Order price
        amount:
          type: integer
          title: Amount
          description: Order volume
        account_address:
          type: string
          title: Account Address
          description: An orderrer of each order book
      type: object
      required:
        - exchange_address
        - order_id
        - price
        - amount
        - account_address
      title: OrderBookItem
    OrderSet_RetrieveCouponTokenResponse_:
      properties:
        token:
          $ref: '#/components/schemas/RetrieveCouponTokenResponse'
        order:
          $ref: '#/components/schemas/Order'
        sort_id:
          type: integer
          title: Sort Id
      type: object
      required:
        - token
        - order
        - sort_id
      title: OrderSet[RetrieveCouponTokenResponse]
    OrderSet_RetrieveMembershipTokenResponse_:
      properties:
        token:
          $ref: '#/components/schemas/RetrieveMembershipTokenResponse'
        order:
          $ref: '#/components/schemas/Order'
        sort_id:
          type: integer
          title: Sort Id
      type: object
      required:
        - token
        - order
        - sort_id
      title: OrderSet[RetrieveMembershipTokenResponse]
    OrderSet_TokenAddress_:
      properties:
        token:
          $ref: '#/components/schemas/TokenAddress'
        order:
          $ref: '#/components/schemas/Order'
        sort_id:
          type: integer
          title: Sort Id
      type: object
      required:
        - token
        - order
        - sort_id
      title: OrderSet[TokenAddress]
    OrderType:
      type: string
      enum:
        - buy
        - sell
      title: OrderType
    RegisterAdminTokenRequest:
      properties:
        contract_address:
          type: string
          title: Contract Address
          description: Token Address
        is_public:
          type: boolean
          title: Is Public
          description: Public and private listings
        max_holding_quantity:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Max Holding Quantity
          description: Maximum holding quantity limit
        max_sell_amount:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Max Sell Amount
          description: Maximum sell amount limit
      type: object
      required:
        - contract_address
        - is_public
      title: RegisterAdminTokenRequest
    RequestBlockRangeLimitExceededErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 31
        message:
          type: string
          title: Message
          examples:
            - Request Block Range Limit Exceeded
      type: object
      required:
        - code
        - message
      title: RequestBlockRangeLimitExceededErrorMetainfo
    RequestBlockRangeLimitExceededErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/RequestBlockRangeLimitExceededErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: RequestBlockRangeLimitExceededErrorResponse
    RequestValidationErrorDict:
      properties:
        loc:
          items:
            type: string
          type: array
          title: Loc
        msg:
          type: string
          title: Msg
        type:
          type: string
          title: Type
      type: object
      required:
        - loc
        - msg
        - type
      title: RequestValidationErrorDict
    RequestValidationErrorInfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 88
        message:
          type: string
          title: Message
          examples:
            - Invalid Parameter
        description:
          items:
            $ref: '#/components/schemas/RequestValidationErrorDict'
          type: array
          title: Description
      type: object
      required:
        - code
        - message
        - description
      title: RequestValidationErrorInfo
    RequestValidationErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/RequestValidationErrorInfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
      type: object
      required:
        - meta
      title: RequestValidationErrorResponse
    ResponseLimitExceededErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 30
        message:
          type: string
          title: Message
          examples:
            - Response Limit Exceeded
      type: object
      required:
        - code
        - message
      title: ResponseLimitExceededErrorMetainfo
    ResponseLimitExceededErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/ResponseLimitExceededErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: ResponseLimitExceededErrorResponse
    ResultSet:
      properties:
        count:
          anyOf:
            - type: integer
            - type: 'null'
          title: Count
        offset:
          anyOf:
            - type: integer
            - type: 'null'
          title: Offset
          description: start position
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
          description: number of set
        total:
          anyOf:
            - type: integer
            - type: 'null'
          title: Total
      type: object
      required:
        - offset
        - limit
      title: ResultSet
      description: result set for pagination
    RetrieveAdminTokenResponse:
      properties:
        id:
          type: integer
          title: Id
        token_address:
          type: string
          title: Token Address
          description: Token address
        is_public:
          type: boolean
          title: Is Public
        max_holding_quantity:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Holding Quantity
        max_sell_amount:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Sell Amount
        owner_address:
          type: string
          title: Owner Address
          description: Issuer address
        created:
          type: string
          title: Created
          description: Create Datetime (local timezone)
      type: object
      required:
        - id
        - token_address
        - is_public
        - max_holding_quantity
        - max_sell_amount
        - owner_address
        - created
      title: RetrieveAdminTokenResponse
    RetrieveAgreementDetailResponse:
      properties:
        token_address:
          type: string
          title: Token Address
          description: token address
        counterpart:
          type: string
          title: Counterpart
          description: taker account address
        buyer_address:
          type: string
          title: Buyer Address
          description: buyer account address
        seller_address:
          type: string
          title: Seller Address
          description: seller account address
        amount:
          type: integer
          title: Amount
          description: agreement token amount
        price:
          type: integer
          title: Price
          description: agreement price
        canceled:
          type: boolean
          title: Canceled
          description: agreement canceled status
        paid:
          type: boolean
          title: Paid
          description: agreement payment status
        expiry:
          type: integer
          title: Expiry
          description: expiry (unixtime)
      type: object
      required:
        - token_address
        - counterpart
        - buyer_address
        - seller_address
        - amount
        - price
        - canceled
        - paid
        - expiry
      title: RetrieveAgreementDetailResponse
    RetrieveCompanyInfoResponse:
      properties:
        address:
          type: string
          title: Address
        corporate_name:
          type: string
          title: Corporate Name
        rsa_publickey:
          type: string
          title: Rsa Publickey
        homepage:
          type: string
          title: Homepage
      type: object
      required:
        - address
        - corporate_name
        - rsa_publickey
        - homepage
      title: RetrieveCompanyInfoResponse
    RetrieveCouponTokenResponse:
      properties:
        token_address:
          type: string
          title: Token Address
        token_template:
          type: string
          title: Token Template
          examples:
            - IbetCoupon
        owner_address:
          type: string
          title: Owner Address
          description: issuer address
        company_name:
          type: string
          title: Company Name
        rsa_publickey:
          type: string
          title: Rsa Publickey
        name:
          type: string
          title: Name
          description: token name
        symbol:
          type: string
          title: Symbol
          description: token symbol
        total_supply:
          type: integer
          title: Total Supply
        tradable_exchange:
          type: string
          title: Tradable Exchange
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        status:
          type: boolean
          title: Status
        max_holding_quantity:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Holding Quantity
        max_sell_amount:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Sell Amount
        details:
          type: string
          title: Details
        return_details:
          type: string
          title: Return Details
        expiration_date:
          type: string
          title: Expiration Date
        memo:
          type: string
          title: Memo
        transferable:
          type: boolean
          title: Transferable
        initial_offering_status:
          type: boolean
          title: Initial Offering Status
        image_url:
          items:
            $ref: '#/components/schemas/CouponImage'
          type: array
          title: Image Url
      type: object
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - max_holding_quantity
        - max_sell_amount
        - details
        - return_details
        - expiration_date
        - memo
        - transferable
        - initial_offering_status
        - image_url
      title: RetrieveCouponTokenResponse
    RetrieveMembershipTokenResponse:
      properties:
        token_address:
          type: string
          title: Token Address
        token_template:
          type: string
          title: Token Template
          examples:
            - IbetMembership
        owner_address:
          type: string
          title: Owner Address
          description: issuer address
        company_name:
          type: string
          title: Company Name
        rsa_publickey:
          type: string
          title: Rsa Publickey
        name:
          type: string
          title: Name
          description: token name
        symbol:
          type: string
          title: Symbol
          description: token symbol
        total_supply:
          type: integer
          title: Total Supply
        tradable_exchange:
          type: string
          title: Tradable Exchange
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        status:
          type: boolean
          title: Status
        max_holding_quantity:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Holding Quantity
        max_sell_amount:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Sell Amount
        details:
          type: string
          title: Details
        return_details:
          type: string
          title: Return Details
        expiration_date:
          type: string
          title: Expiration Date
        memo:
          type: string
          title: Memo
        transferable:
          type: boolean
          title: Transferable
        initial_offering_status:
          type: boolean
          title: Initial Offering Status
        image_url:
          items:
            $ref: '#/components/schemas/MembershipImage'
          type: array
          title: Image Url
      type: object
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - max_holding_quantity
        - max_sell_amount
        - details
        - return_details
        - expiration_date
        - memo
        - transferable
        - initial_offering_status
        - image_url
      title: RetrieveMembershipTokenResponse
    RetrievePaymentAccountRegistrationStatusResponse:
      properties:
        account_address:
          type: string
          title: Account Address
        agent_address:
          type: string
          title: Agent Address
        approval_status:
          allOf:
            - $ref: '#/components/schemas/ApprovalStatus'
          description: approval status (NONE(0)/NG(1)/OK(2)/WARN(3)/BAN(4))
      type: object
      required:
        - account_address
        - agent_address
        - approval_status
      title: RetrievePaymentAccountRegistrationStatusResponse
    RetrievePersonalInfoRegistrationStatusResponse:
      properties:
        account_address:
          type: string
          title: Account Address
        owner_address:
          type: string
          title: Owner Address
          description: link address
        registered:
          type: boolean
          title: Registered
      type: object
      required:
        - account_address
        - owner_address
        - registered
      title: RetrievePersonalInfoRegistrationStatusResponse
    RetrieveShareTokenResponse:
      properties:
        token_address:
          type: string
          title: Token Address
        token_template:
          type: string
          title: Token Template
          examples:
            - IbetShare
        owner_address:
          type: string
          title: Owner Address
          description: issuer address
        company_name:
          type: string
          title: Company Name
        rsa_publickey:
          type: string
          title: Rsa Publickey
        name:
          type: string
          title: Name
          description: token name
        symbol:
          type: string
          title: Symbol
          description: token symbol
        total_supply:
          type: integer
          title: Total Supply
        tradable_exchange:
          type: string
          title: Tradable Exchange
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        status:
          type: boolean
          title: Status
        max_holding_quantity:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Holding Quantity
        max_sell_amount:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Sell Amount
        personal_info_address:
          type: string
          title: Personal Info Address
        require_personal_info_registered:
          type: boolean
          title: Require Personal Info Registered
        transferable:
          type: boolean
          title: Transferable
        is_offering:
          type: boolean
          title: Is Offering
        transfer_approval_required:
          type: boolean
          title: Transfer Approval Required
        issue_price:
          type: integer
          title: Issue Price
        cancellation_date:
          type: string
          title: Cancellation Date
        memo:
          type: string
          title: Memo
        principal_value:
          type: integer
          title: Principal Value
        is_canceled:
          type: boolean
          title: Is Canceled
        dividend_information:
          $ref: '#/components/schemas/DividendInformation'
      type: object
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - max_holding_quantity
        - max_sell_amount
        - personal_info_address
        - require_personal_info_registered
        - transferable
        - is_offering
        - transfer_approval_required
        - issue_price
        - cancellation_date
        - memo
        - principal_value
        - is_canceled
        - dividend_information
      title: RetrieveShareTokenResponse
    RetrieveStraightBondTokenResponse:
      properties:
        token_address:
          type: string
          title: Token Address
        token_template:
          type: string
          title: Token Template
          examples:
            - IbetStraightBond
        owner_address:
          type: string
          title: Owner Address
          description: issuer address
        company_name:
          type: string
          title: Company Name
        rsa_publickey:
          type: string
          title: Rsa Publickey
        name:
          type: string
          title: Name
          description: token name
        symbol:
          type: string
          title: Symbol
          description: token symbol
        total_supply:
          type: integer
          title: Total Supply
        tradable_exchange:
          type: string
          title: Tradable Exchange
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        status:
          type: boolean
          title: Status
        max_holding_quantity:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Holding Quantity
        max_sell_amount:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Sell Amount
        personal_info_address:
          type: string
          title: Personal Info Address
        require_personal_info_registered:
          type: boolean
          title: Require Personal Info Registered
        transferable:
          type: boolean
          title: Transferable
        is_offering:
          type: boolean
          title: Is Offering
        transfer_approval_required:
          type: boolean
          title: Transfer Approval Required
        face_value:
          type: integer
          title: Face Value
        face_value_currency:
          type: string
          title: Face Value Currency
        interest_rate:
          type: number
          title: Interest Rate
        interest_payment_date1:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date1
        interest_payment_date2:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date2
        interest_payment_date3:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date3
        interest_payment_date4:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date4
        interest_payment_date5:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date5
        interest_payment_date6:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date6
        interest_payment_date7:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date7
        interest_payment_date8:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date8
        interest_payment_date9:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date9
        interest_payment_date10:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date10
        interest_payment_date11:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date11
        interest_payment_date12:
          anyOf:
            - type: string
            - type: 'null'
          title: Interest Payment Date12
        interest_payment_currency:
          type: string
          title: Interest Payment Currency
        redemption_date:
          type: string
          title: Redemption Date
        redemption_value:
          type: integer
          title: Redemption Value
        redemption_value_currency:
          type: string
          title: Redemption Value Currency
        base_fx_rate:
          type: number
          title: Base Fx Rate
        return_date:
          type: string
          title: Return Date
        return_amount:
          type: string
          title: Return Amount
        purpose:
          type: string
          title: Purpose
        memo:
          type: string
          title: Memo
        is_redeemed:
          type: boolean
          title: Is Redeemed
      type: object
      required:
        - token_address
        - token_template
        - owner_address
        - company_name
        - rsa_publickey
        - name
        - symbol
        - total_supply
        - tradable_exchange
        - contact_information
        - privacy_policy
        - status
        - max_holding_quantity
        - max_sell_amount
        - personal_info_address
        - require_personal_info_registered
        - transferable
        - is_offering
        - transfer_approval_required
        - face_value
        - face_value_currency
        - interest_rate
        - interest_payment_date1
        - interest_payment_date2
        - interest_payment_date3
        - interest_payment_date4
        - interest_payment_date5
        - interest_payment_date6
        - interest_payment_date7
        - interest_payment_date8
        - interest_payment_date9
        - interest_payment_date10
        - interest_payment_date11
        - interest_payment_date12
        - interest_payment_currency
        - redemption_date
        - redemption_value
        - redemption_value_currency
        - base_fx_rate
        - return_date
        - return_amount
        - purpose
        - memo
        - is_redeemed
      title: RetrieveStraightBondTokenResponse
    RetrieveTokenLockCountResponse:
      properties:
        count:
          type: integer
          title: Count
      type: object
      required:
        - count
      title: RetrieveTokenLockCountResponse
    SearchTokenHoldersRequest:
      properties:
        account_address_list:
          items:
            type: string
          type: array
          title: Account Address List
          description: list of token address (**this affects total number**)
          default: []
        exclude_owner:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Exclude Owner
          description: exclude owner
          default: false
        offset:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Offset
          description: start position
        limit:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Limit
          description: number of set
        amount:
          anyOf:
            - type: integer
            - type: 'null'
          title: Amount
          description: amount
        amount_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        pending_transfer:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pending Transfer
          description: pending transfer
        pending_transfer_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        exchange_balance:
          anyOf:
            - type: integer
            - type: 'null'
          title: Exchange Balance
          description: exchange balance
        exchange_balance_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        exchange_commitment:
          anyOf:
            - type: integer
            - type: 'null'
          title: Exchange Commitment
          description: exchange commitment
        exchange_commitment_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        locked:
          anyOf:
            - type: integer
            - type: 'null'
          title: Locked
          description: locked
        locked_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        sort_item:
          anyOf:
            - $ref: '#/components/schemas/SearchTokenHoldersSortItem'
            - type: 'null'
          description: sort item
          default: created
        sort_order:
          anyOf:
            - $ref: '#/components/schemas/SortOrder'
            - type: 'null'
          description: sort order
          default: 1
      type: object
      title: SearchTokenHoldersRequest
    SearchTokenHoldersSortItem:
      type: string
      enum:
        - created
        - account_address_list
        - amount
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - locked
      title: SearchTokenHoldersSortItem
    SearchTransferApprovalHistoryRequest:
      properties:
        account_address_list:
          items:
            type: string
          type: array
          title: Account Address List
          description: list of account address (**this affects total number**)
          default: []
        offset:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Offset
          description: start position
        limit:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Limit
          description: number of set
        application_datetime_from:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Application Datetime From
          description: application from datetime
        application_datetime_to:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Application Datetime To
          description: application to datetime
        application_blocktimestamp_from:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Application Blocktimestamp From
          description: application from block timestamp
        application_blocktimestamp_to:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Application Blocktimestamp To
          description: application to block timestamp
        approval_datetime_from:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Approval Datetime From
          description: approval from datetime
        approval_datetime_to:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Approval Datetime To
          description: approval to datetime
        approval_blocktimestamp_from:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Approval Blocktimestamp From
          description: approval from block timestamp
        approval_blocktimestamp_to:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Approval Blocktimestamp To
          description: approval to block timestamp
        from_address:
          anyOf:
            - type: string
            - type: 'null'
          title: From Address
          description: from address
        to_address:
          anyOf:
            - type: string
            - type: 'null'
          title: To Address
          description: to address
        value:
          anyOf:
            - type: integer
            - type: 'null'
          title: Value
          description: value
        value_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        sort_item:
          anyOf:
            - $ref: '#/components/schemas/SearchTransferApprovalHistorySortItem'
            - type: 'null'
          description: sort item
          default: application_id
        sort_order:
          anyOf:
            - $ref: '#/components/schemas/SortOrder'
            - type: 'null'
          description: sort order
          default: 0
      type: object
      title: SearchTransferApprovalHistoryRequest
    SearchTransferApprovalHistorySortItem:
      type: string
      enum:
        - from_account_address_list
        - to_account_address_list
        - application_id
        - created
        - from_address
        - to_address
        - value
        - application_datetime
        - application_blocktimestamp
        - approval_datetime
        - approval_blocktimestamp
        - cancelled
      title: SearchTransferApprovalHistorySortItem
    SearchTransferHistoryRequest:
      properties:
        account_address_list:
          items:
            type: string
          type: array
          title: Account Address List
          description: list of account address (**this affects total number**)
          default: []
        offset:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Offset
          description: start position
        limit:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Limit
          description: number of set
        source_event:
          anyOf:
            - $ref: '#/components/schemas/TransferSourceEvent'
            - type: 'null'
          description: source event of transfer
        data:
          anyOf:
            - type: string
            - type: 'null'
          title: Data
          description: source event data
        transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Transaction Hash
          description: transaction hash
        from_address:
          anyOf:
            - type: string
            - type: 'null'
          title: From Address
          description: from address
        to_address:
          anyOf:
            - type: string
            - type: 'null'
          title: To Address
          description: to address
        created_from:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created From
          description: created from datetime
        created_to:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created To
          description: created to datetime
        value:
          anyOf:
            - type: integer
            - type: 'null'
          title: Value
          description: value
        value_operator:
          anyOf:
            - $ref: '#/components/schemas/ValueOperator'
            - type: 'null'
          description: 'value filter condition(0: equal, 1: greater than, 2: less
            than)'
          default: 0
        sort_item:
          anyOf:
            - $ref: '#/components/schemas/SearchTransferHistorySortItem'
            - type: 'null'
          description: sort item
          default: id
        sort_order:
          anyOf:
            - $ref: '#/components/schemas/SortOrder'
            - type: 'null'
          description: sort order
          default: 0
      type: object
      title: SearchTransferHistoryRequest
    SearchTransferHistorySortItem:
      type: string
      enum:
        - from_account_address_list
        - to_account_address_list
        - id
        - created
        - transaction_hash
        - from_address
        - to_address
        - value
      title: SearchTransferHistorySortItem
    SecurityTokenPositionWithAddress:
      properties:
        balance:
          type: integer
          title: Balance
        pending_transfer:
          type: integer
          title: Pending Transfer
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        locked:
          anyOf:
            - type: integer
            - type: 'null'
          title: Locked
          description: set when enable_index=true
        token_address:
          type: string
          title: Token Address
          description: set when include_token_details=false or null
      type: object
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token_address
      title: SecurityTokenPositionWithAddress
    SecurityTokenPositionWithDetail_RetrieveShareTokenResponse_:
      properties:
        balance:
          type: integer
          title: Balance
        pending_transfer:
          type: integer
          title: Pending Transfer
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        locked:
          anyOf:
            - type: integer
            - type: 'null'
          title: Locked
          description: set when enable_index=true
        token:
          anyOf:
            - $ref: '#/components/schemas/RetrieveShareTokenResponse'
            - $ref: '#/components/schemas/TokenAddress'
          title: Token
          description: set when include_token_details=false or null
      type: object
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token
      title: SecurityTokenPositionWithDetail[RetrieveShareTokenResponse]
    SecurityTokenPositionWithDetail_RetrieveStraightBondTokenResponse_:
      properties:
        balance:
          type: integer
          title: Balance
        pending_transfer:
          type: integer
          title: Pending Transfer
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        locked:
          anyOf:
            - type: integer
            - type: 'null'
          title: Locked
          description: set when enable_index=true
        token:
          anyOf:
            - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
            - $ref: '#/components/schemas/TokenAddress'
          title: Token
          description: set when include_token_details=false or null
      type: object
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token
      title: SecurityTokenPositionWithDetail[RetrieveStraightBondTokenResponse]
    SendChatWebhookRequest:
      properties:
        message:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          title: Message
          description: Message body
      type: object
      required:
        - message
      title: SendChatWebhookRequest
    SendMailRequest:
      properties:
        to_emails:
          items:
            type: string
            maxLength: 100
            pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$
          type: array
          minItems: 1
          title: To Emails
        subject:
          type: string
          maxLength: 100
          title: Subject
          description: Mail subject
        text_content:
          anyOf:
            - type: string
            - type: 'null'
          title: Text Content
          description: Plain text mail content
          default: ''
        html_content:
          anyOf:
            - type: string
            - type: 'null'
          title: Html Content
          description: HTML mail content
          default: ''
        file_name:
          anyOf:
            - type: string
              maxLength: 255
              minLength: 1
            - type: 'null'
          title: File Name
          description: File name
        file_content:
          anyOf:
            - type: string
              minLength: 1
              format: binary
            - type: 'null'
          title: File Content
          description: File content(Base64 encoded)
      type: object
      required:
        - to_emails
        - subject
      title: SendMailRequest
    SendRawTransactionNoWaitResponse:
      properties:
        id:
          type: integer
          title: Id
          description: transaction send order
          examples:
            - 1
        status:
          allOf:
            - $ref: '#/components/schemas/SendRawTransactionStatus'
          description: execution failure:0, execution success:1
          examples:
            - 1
        transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Transaction Hash
          description: transaction hash
      type: object
      required:
        - id
        - status
      title: SendRawTransactionNoWaitResponse
    SendRawTransactionRequest:
      properties:
        raw_tx_hex_list:
          items:
            type: string
          type: array
          minItems: 1
          title: Raw Tx Hex List
          description: Signed transaction list
      type: object
      required:
        - raw_tx_hex_list
      title: SendRawTransactionRequest
    SendRawTransactionResponse:
      properties:
        id:
          type: integer
          title: Id
          description: transaction send order
          examples:
            - 1
        status:
          allOf:
            - $ref: '#/components/schemas/SendRawTransactionStatus'
          description: execution failure:0, execution success:1, execution success(pending
            transaction):2
          examples:
            - 1
        transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Transaction Hash
          description: transaction hash
        error_code:
          anyOf:
            - type: integer
            - type: 'null'
          title: Error Code
          description: error code thrown from contract
          examples:
            - 240202
        error_msg:
          anyOf:
            - type: string
            - type: 'null'
          title: Error Msg
          description: error msg
          examples:
            - Message sender is not token owner.
      type: object
      required:
        - id
        - status
      title: SendRawTransactionResponse
    SendRawTransactionStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      title: SendRawTransactionStatus
    SendRawTransactionsNoWaitResponse:
      items:
        $ref: '#/components/schemas/SendRawTransactionNoWaitResponse'
      type: array
      title: SendRawTransactionsNoWaitResponse
    SendRawTransactionsResponse:
      items:
        $ref: '#/components/schemas/SendRawTransactionResponse'
      type: array
      title: SendRawTransactionsResponse
    ServiceUnavailableMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 503
        message:
          type: string
          title: Message
          examples:
            - Service Unavailable
      type: object
      required:
        - code
        - message
      title: ServiceUnavailableMetainfo
    ServiceUnavailableResponse:
      properties:
        meta:
          $ref: '#/components/schemas/ServiceUnavailableMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: ServiceUnavailableResponse
    SharePositionWithDetail:
      properties:
        balance:
          type: integer
          title: Balance
        pending_transfer:
          type: integer
          title: Pending Transfer
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        locked:
          anyOf:
            - type: integer
            - type: 'null'
          title: Locked
          description: set when enable_index=true
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveShareTokenResponse'
          description: set when include_token_details=true
      type: object
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token
      title: SharePositionWithDetail
    ShareTokensSortItem:
      type: string
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - personal_info_address
        - require_personal_info_registered
        - transferable
        - is_offering
        - transfer_approval_required
        - is_canceled
        - created
      title: ShareTokensSortItem
    SortOrder:
      type: integer
      enum:
        - 0
        - 1
      title: SortOrder
    StraightBondPositionWithDetail:
      properties:
        balance:
          type: integer
          title: Balance
        pending_transfer:
          type: integer
          title: Pending Transfer
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        locked:
          anyOf:
            - type: integer
            - type: 'null'
          title: Locked
          description: set when enable_index=true
        token:
          allOf:
            - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'
          description: set when include_token_details=true
      type: object
      required:
        - balance
        - pending_transfer
        - exchange_balance
        - exchange_commitment
        - token
      title: StraightBondPositionWithDetail
    StraightBondTokensSortItem:
      type: string
      enum:
        - token_address
        - owner_address
        - name
        - symbol
        - company_name
        - tradable_exchange
        - status
        - personal_info_address
        - require_personal_info_registered
        - transferable
        - is_offering
        - transfer_approval_required
        - is_redeemed
        - created
      title: StraightBondTokensSortItem
    Success200MetaModel:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 200
        message:
          type: string
          title: Message
          examples:
            - OK
      type: object
      required:
        - code
        - message
      title: Success200MetaModel
    SuccessResponse:
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Success200MetaModel'
          examples:
            - code: 200
              message: OK
        data:
          type: object
          title: Data
          default: {}
      type: object
      required:
        - meta
      title: SuccessResponse
    SuspendedTokenErrorMetainfo:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 20
        message:
          type: string
          title: Message
          examples:
            - Suspended Token
      type: object
      required:
        - code
        - message
      title: SuspendedTokenErrorMetainfo
    SuspendedTokenErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/SuspendedTokenErrorMetainfo'
        details:
          anyOf:
            - type: object
            - type: 'null'
          title: Details
          examples:
            - null
      type: object
      required:
        - meta
      title: SuspendedTokenErrorResponse
    TaggingAccountAddressRequest:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Account address
        account_tag:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: Account Tag
          description: Account tag
      type: object
      required:
        - account_address
        - account_tag
      title: TaggingAccountAddressRequest
    Tick:
      properties:
        block_timestamp:
          type: string
          title: Block Timestamp
          description: block timestamp (UTC)
        buy_address:
          type: string
          title: Buy Address
        sell_address:
          type: string
          title: Sell Address
        order_id:
          type: integer
          title: Order Id
        agreement_id:
          type: integer
          title: Agreement Id
        price:
          type: integer
          title: Price
        amount:
          type: integer
          title: Amount
      type: object
      required:
        - block_timestamp
        - buy_address
        - sell_address
        - order_id
        - agreement_id
        - price
        - amount
      title: Tick
    Ticks:
      properties:
        token_address:
          type: string
          title: Token Address
        tick:
          items:
            $ref: '#/components/schemas/Tick'
          type: array
          title: Tick
      type: object
      required:
        - token_address
        - tick
      title: Ticks
    TokenAddress:
      properties:
        token_address:
          type: string
          title: Token Address
      type: object
      required:
        - token_address
      title: TokenAddress
    TokenHolder:
      properties:
        token_address:
          type: string
          title: Token Address
        account_address:
          type: string
          title: Account Address
        amount:
          type: integer
          title: Amount
          default: 0
        pending_transfer:
          type: integer
          title: Pending Transfer
          default: 0
        exchange_balance:
          type: integer
          title: Exchange Balance
          default: 0
        exchange_commitment:
          type: integer
          title: Exchange Commitment
          default: 0
        locked:
          type: integer
          title: Locked
          default: 0
      type: object
      required:
        - token_address
        - account_address
      title: TokenHolder
    TokenHoldersCollectionBatchStatus:
      type: string
      enum:
        - pending
        - done
        - failed
      title: TokenHoldersCollectionBatchStatus
    TokenHoldersCollectionHolder:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Account address of token holder.
        hold_balance:
          type: integer
          title: Hold Balance
          description: Amount of balance.This includes balance/pending_transfer/exchange_balance/exchange_commitment/locked.
        locked_balance:
          type: integer
          title: Locked Balance
          description: Amount of locked balance.
      type: object
      required:
        - account_address
        - hold_balance
        - locked_balance
      title: TokenHoldersCollectionHolder
    TokenHoldersCollectionResponse:
      properties:
        status:
          $ref: '#/components/schemas/TokenHoldersCollectionBatchStatus'
        holders:
          items:
            $ref: '#/components/schemas/TokenHoldersCollectionHolder'
          type: array
          title: Holders
          description: Token holder list.This list is excluding token owner address.
      type: object
      required:
        - status
        - holders
      title: TokenHoldersCollectionResponse
    TokenHoldersCountResponse:
      properties:
        count:
          type: integer
          title: Count
      type: object
      required:
        - count
      title: TokenHoldersCountResponse
    TokenHoldersResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        token_holder_list:
          items:
            $ref: '#/components/schemas/TokenHolder'
          type: array
          title: Token Holder List
      type: object
      required:
        - result_set
        - token_holder_list
      title: TokenHoldersResponse
    TokenPositionsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          items:
            anyOf:
              - $ref: '#/components/schemas/StraightBondPositionWithDetail'
              - $ref: '#/components/schemas/SharePositionWithDetail'
              - $ref: '#/components/schemas/CouponPositionWithDetail'
              - $ref: '#/components/schemas/MembershipPositionWithDetail'
          type: array
          title: Positions
      type: object
      required:
        - result_set
        - positions
      title: TokenPositionsResponse
    TokenStatusResponse:
      properties:
        token_template:
          allOf:
            - $ref: '#/components/schemas/TokenType'
          examples:
            - IbetStraightBond
        name:
          type: string
          title: Name
        status:
          type: boolean
          title: Status
        transferable:
          type: boolean
          title: Transferable
      type: object
      required:
        - token_template
        - name
        - status
        - transferable
      title: TokenStatusResponse
    TokenType:
      type: string
      enum:
        - IbetStraightBond
        - IbetShare
        - IbetMembership
        - IbetCoupon
      title: TokenType
    TransactionCountResponse:
      properties:
        nonce:
          type: integer
          title: Nonce
          examples:
            - 34
        gasprice:
          type: integer
          title: Gasprice
          examples:
            - 0
        chainid:
          type: string
          title: Chainid
          examples:
            - '2017'
      type: object
      required:
        - nonce
        - gasprice
        - chainid
      title: TransactionCountResponse
    TransferApprovalHistoriesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_approval_history:
          items:
            $ref: '#/components/schemas/TransferApprovalHistory'
          type: array
          title: Transfer Approval History
          description: Transfer approval history
      type: object
      required:
        - result_set
        - transfer_approval_history
      title: TransferApprovalHistoriesResponse
    TransferApprovalHistory:
      properties:
        token_address:
          type: string
          title: Token Address
          description: Token address
        exchange_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Exchange Address
          description: Exchange address
        application_id:
          type: integer
          title: Application Id
          description: Application id
        from_address:
          type: string
          title: From Address
          description: Account address of transfer source
        to_address:
          type: string
          title: To Address
          description: Account address of transfer destination
        value:
          type: integer
          title: Value
          description: Transfer quantity
        application_datetime:
          type: string
          title: Application Datetime
          description: application datetime (local timezone)
        application_blocktimestamp:
          type: string
          title: Application Blocktimestamp
          description: application blocktimestamp (local timezone)
        approval_datetime:
          anyOf:
            - type: string
            - type: 'null'
          title: Approval Datetime
          description: approval datetime (local timezone)
        approval_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Approval Blocktimestamp
          description: approval blocktimestamp (local timezone)
        cancelled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Cancelled
          description: Cancellation status
        transfer_approved:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approved
          description: transfer approval status
      type: object
      required:
        - token_address
        - exchange_address
        - application_id
        - from_address
        - to_address
        - value
        - application_datetime
        - application_blocktimestamp
        - approval_datetime
        - approval_blocktimestamp
        - cancelled
        - transfer_approved
      title: TransferApprovalHistory
    TransferHistoriesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_history:
          items:
            $ref: '#/components/schemas/TransferHistory'
          type: array
          title: Transfer History
          description: Transfer history
      type: object
      required:
        - result_set
        - transfer_history
      title: TransferHistoriesResponse
    TransferHistory:
      properties:
        transaction_hash:
          type: string
          title: Transaction Hash
          description: Transaction hash
        token_address:
          type: string
          title: Token Address
          description: Token address
        from_address:
          type: string
          title: From Address
          description: Account address of transfer source
        to_address:
          type: string
          title: To Address
          description: Account address of transfer destination
        value:
          type: integer
          title: Value
          description: Transfer quantity
        source_event:
          allOf:
            - $ref: '#/components/schemas/TransferSourceEvent'
          description: Source Event
        data:
          anyOf:
            - type: object
            - type: 'null'
          title: Data
          description: Event data
        created:
          type: string
          title: Created
          description: block_timestamp when Transfer log was emitted (local timezone)
      type: object
      required:
        - transaction_hash
        - token_address
        - from_address
        - to_address
        - value
        - source_event
        - data
        - created
      title: TransferHistory
    TransferSourceEvent:
      type: string
      enum:
        - Transfer
        - Unlock
      title: TransferSourceEvent
    TxData:
      properties:
        hash:
          type: string
          title: Hash
          description: Transaction hash
        block_hash:
          type: string
          title: Block Hash
        block_number:
          type: integer
          minimum: 0.0
          title: Block Number
        transaction_index:
          type: integer
          minimum: 0.0
          title: Transaction Index
        from_address:
          type: string
          title: From Address
        to_address:
          anyOf:
            - type: string
            - type: 'null'
          title: To Address
      type: object
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
        - to_address
      title: TxData
    TxDataDetail:
      properties:
        hash:
          type: string
          title: Hash
          description: Transaction hash
        block_hash:
          type: string
          title: Block Hash
        block_number:
          type: integer
          minimum: 0.0
          title: Block Number
        transaction_index:
          type: integer
          minimum: 0.0
          title: Transaction Index
        from_address:
          type: string
          title: From Address
        to_address:
          anyOf:
            - type: string
            - type: 'null'
          title: To Address
        contract_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Contract Name
        contract_function:
          anyOf:
            - type: string
            - type: 'null'
          title: Contract Function
        contract_parameters:
          anyOf:
            - type: object
            - type: 'null'
          title: Contract Parameters
        gas:
          type: integer
          minimum: 0.0
          title: Gas
        gas_price:
          type: integer
          minimum: 0.0
          title: Gas Price
        value:
          type: integer
          minimum: 0.0
          title: Value
        nonce:
          type: integer
          minimum: 0.0
          title: Nonce
      type: object
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
        - to_address
        - contract_name
        - contract_function
        - contract_parameters
        - gas
        - gas_price
        - value
        - nonce
      title: TxDataDetail
    TxDataListResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tx_data:
          items:
            $ref: '#/components/schemas/TxData'
          type: array
          title: Tx Data
      type: object
      required:
        - result_set
        - tx_data
      title: TxDataListResponse
    TxDataResponse:
      allOf:
        - $ref: '#/components/schemas/TxDataDetail'
      title: TxDataResponse
    UpdateAdminTokenRequest:
      properties:
        is_public:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Public
        max_holding_quantity:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Max Holding Quantity
        max_sell_amount:
          anyOf:
            - type: integer
              minimum: 0.0
            - type: 'null'
          title: Max Sell Amount
        owner_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Owner Address
      type: object
      title: UpdateAdminTokenRequest
    UpdateNotificationRequest:
      properties:
        is_read:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Read
          description: Read update
        is_flagged:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Flagged
          description: Set flag
        is_deleted:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Deleted
          description: Logical deletion
      type: object
      title: UpdateNotificationRequest
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    ValueOperator:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: ValueOperator
    WaitForTransactionReceiptResponse:
      properties:
        status:
          type: integer
          title: Status
          description: transaction revert:0, transaction success:1
          examples:
            - 1
        error_code:
          anyOf:
            - type: integer
            - type: 'null'
          title: Error Code
          description: error code thrown from contract
          examples:
            - 240202
        error_msg:
          anyOf:
            - type: string
            - type: 'null'
          title: Error Msg
          description: error msg
          examples:
            - Message sender is not token owner.
      type: object
      required:
        - status
      title: WaitForTransactionReceiptResponse
tags:
  - name: root
    description: ''
  - name: admin
    description: System administration
  - name: node_info
    description: Information about blockchain and contracts
  - name: abi
    description: Contract ABIs
  - name: eth_rpc
    description: Ethereum RPC
  - name: company_info
    description: Company(token issuer) information
  - name: token_info
    description: Detailed information for listed tokens
  - name: user_info
    description: User information
  - name: user_position
    description: User's token balance
  - name: user_notification
    description: Notifications for users
  - name: contract_log
    description: Contract event logs
  - name: dex
    description: Trade related functions on IbetExchange (Only for utility tokens)
  - name: messaging
    description: Messaging functions with external systems
